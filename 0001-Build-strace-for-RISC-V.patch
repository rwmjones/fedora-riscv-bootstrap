From 3bbe882059e36b618e7ca16c642525ee366e355c Mon Sep 17 00:00:00 2001
From: "Richard W.M. Jones" <rjones@redhat.com>
Date: Tue, 20 Jan 2015 23:31:22 -0800
Subject: [PATCH] Build strace for RISC-V

The original port of strace was done by Palmer Dabbelt
(eecs.berkeley.edu), based on strace 4.9.

I only modified it to work with upstream strace, and fixed a few
things.

Signed-off-by: Richard W.M. Jones <rjones@redhat.com>
---
 Makefile.am                    |   13 +
 clone.c                        |    2 +-
 configure.ac                   |    5 +
 defs.h                         |    2 +
 file.c                         |    4 +-
 linux/riscv/arch_regs.c        |    3 +
 linux/riscv/errnoent1.h        |    2 +
 linux/riscv/get_error.c        |   10 +
 linux/riscv/get_scno.c         |    7 +
 linux/riscv/get_syscall_args.c |   12 +
 linux/riscv/ioctls_arch0.h     |    1 +
 linux/riscv/ioctls_arch1.h     |    1 +
 linux/riscv/ioctls_inc0.h      | 2154 ++++++++++++++++++++++++++++++++++++++++
 linux/riscv/ioctls_inc1.h      |    1 +
 linux/riscv/signalent1.h       |    2 +
 linux/riscv/stat32.h           |    1 +
 linux/riscv/syscallent.h       |  274 +++++
 linux/riscv/syscallent1.h      |  274 +++++
 mem.c                          |    1 +
 syscall.c                      |    4 +
 20 files changed, 2770 insertions(+), 3 deletions(-)
 create mode 100644 linux/riscv/arch_regs.c
 create mode 100644 linux/riscv/errnoent1.h
 create mode 100644 linux/riscv/get_error.c
 create mode 100644 linux/riscv/get_scno.c
 create mode 100644 linux/riscv/get_syscall_args.c
 create mode 100644 linux/riscv/ioctls_arch0.h
 create mode 100644 linux/riscv/ioctls_arch1.h
 create mode 100644 linux/riscv/ioctls_inc0.h
 create mode 100644 linux/riscv/ioctls_inc1.h
 create mode 100644 linux/riscv/signalent1.h
 create mode 100644 linux/riscv/stat32.h
 create mode 100644 linux/riscv/syscallent.h
 create mode 100644 linux/riscv/syscallent1.h

diff --git a/Makefile.am b/Makefile.am
index 3125a57..32d2092 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -499,6 +499,19 @@ EXTRA_DIST =				\
 	linux/powerpc64/syscallent1.h	\
 	linux/powerpc64/userent.h	\
 	linux/ptp_clock.h		\
+	linux/riscv/arch_regs.c		\
+	linux/riscv/errnoent1.h		\
+	linux/riscv/get_error.c		\
+	linux/riscv/get_scno.c		\
+	linux/riscv/get_syscall_args.c	\
+	linux/riscv/ioctls_arch0.h	\
+	linux/riscv/ioctls_arch1.h	\
+	linux/riscv/ioctls_inc0.h	\
+	linux/riscv/ioctls_inc1.h	\
+	linux/riscv/signalent1.h	\
+	linux/riscv/stat32.h		\
+	linux/riscv/syscallent.h	\
+	linux/riscv/syscallent1.h	\
 	linux/s390/arch_regs.c		\
 	linux/s390/arch_regs.h		\
 	linux/s390/arch_sigreturn.c	\
diff --git a/clone.c b/clone.c
index 0138631..604a695 100644
--- a/clone.c
+++ b/clone.c
@@ -59,7 +59,7 @@
 # define ARG_PTID	2
 # define ARG_CTID	((current_personality != 1) ? 3 : 4)
 # define ARG_TLS	((current_personality != 1) ? 4 : 3)
-#elif defined ALPHA || defined TILE || defined OR1K
+#elif defined ALPHA || defined TILE || defined OR1K || defined RISCV
 # define ARG_FLAGS	0
 # define ARG_STACK	1
 # define ARG_PTID	2
diff --git a/configure.ac b/configure.ac
index 0800f1f..bbd4110 100644
--- a/configure.ac
+++ b/configure.ac
@@ -187,6 +187,11 @@ xtensa*)
 	AC_DEFINE([XTENSA], 1, [Define for the Xtensa architecture])
 	;;
 
+riscv*)
+	arch=riscv
+	AC_DEFINE([RISCV], 1, [Define for the RISC-V architecture])
+	;;
+
 *)
 	AC_MSG_RESULT([NO!])
 	AC_MSG_ERROR([architecture $host_cpu is not supported by strace])
diff --git a/defs.h b/defs.h
index 6f2a844..070f2b3 100644
--- a/defs.h
+++ b/defs.h
@@ -156,6 +156,7 @@ extern char *stpcpy(char *dst, const char *src);
 # define PERSONALITY2_WORDSIZE 4
 #elif defined AARCH64 \
    || defined POWERPC64 \
+   || defined RISCV \
    || defined SPARC64 \
    || defined TILE \
    || defined X32
@@ -357,6 +358,7 @@ extern const struct xlat whence_codes[];
  || defined(BFIN) \
  || defined(M68K) \
  || defined(MICROBLAZE) \
+ || defined(RISCV) \
  || defined(S390) \
  || defined(SH) || defined(SH64) \
  || defined(SPARC) || defined(SPARC64) \
diff --git a/file.c b/file.c
index 2ff0ac7..24b10b1 100644
--- a/file.c
+++ b/file.c
@@ -148,7 +148,7 @@ SYS_FUNC(fstat)
 }
 
 #if defined STAT32_PERSONALITY && !defined HAVE_STRUCT_STAT64
-# if defined AARCH64 || defined X86_64 || defined X32
+# if defined AARCH64 || defined X86_64 || defined X32 || defined RISCV
 /*
  * Linux x86_64 and x32 have unified `struct stat' but their i386 personality
  * needs `struct stat64'.
@@ -186,7 +186,7 @@ struct stat64 {
 #  endif
 ;
 #  define HAVE_STRUCT_STAT64	1
-# else /* !(AARCH64 || X86_64 || X32) */
+# else /* !(AARCH64 || X86_64 || X32 || RISCV) */
 #  warning FIXME: check whether struct stat64 definition is needed for this architecture!
 # endif
 #endif /* STAT32_PERSONALITY && !HAVE_STRUCT_STAT64 */
diff --git a/linux/riscv/arch_regs.c b/linux/riscv/arch_regs.c
new file mode 100644
index 0000000..40be17d
--- /dev/null
+++ b/linux/riscv/arch_regs.c
@@ -0,0 +1,3 @@
+static struct user_regs_struct riscv_regs;
+#define ARCH_REGS_FOR_GETREGSET riscv_regs
+#define ARCH_PC_REG riscv_regs.pc
diff --git a/linux/riscv/errnoent1.h b/linux/riscv/errnoent1.h
new file mode 100644
index 0000000..2a5c728
--- /dev/null
+++ b/linux/riscv/errnoent1.h
@@ -0,0 +1,2 @@
+/* RISC-V rv32 and rv64 */
+#include "../errnoent.h"
diff --git a/linux/riscv/get_error.c b/linux/riscv/get_error.c
new file mode 100644
index 0000000..be640d0
--- /dev/null
+++ b/linux/riscv/get_error.c
@@ -0,0 +1,10 @@
+static void
+get_error(struct tcb *tcp, const bool check_errno)
+{
+	if (check_errno && is_negated_errno(riscv_regs.a0)) {
+		tcp->u_rval = -1;
+		tcp->u_error = -riscv_regs.a0;
+	} else {
+		tcp->u_rval = riscv_regs.a0;
+	}
+}
diff --git a/linux/riscv/get_scno.c b/linux/riscv/get_scno.c
new file mode 100644
index 0000000..0ca1ed3
--- /dev/null
+++ b/linux/riscv/get_scno.c
@@ -0,0 +1,7 @@
+/* Return codes: 1 - ok, 0 - ignore, other - error. */
+static int
+arch_get_scno(struct tcb *tcp)
+{
+	tcp->scno = riscv_regs.a7;
+	return 1;
+}
diff --git a/linux/riscv/get_syscall_args.c b/linux/riscv/get_syscall_args.c
new file mode 100644
index 0000000..746e085
--- /dev/null
+++ b/linux/riscv/get_syscall_args.c
@@ -0,0 +1,12 @@
+/* Return -1 on error or 1 on success (never 0!). */
+static int
+get_syscall_args(struct tcb *tcp)
+{
+	tcp->u_arg[0] = riscv_regs.a0;
+	tcp->u_arg[1] = riscv_regs.a1;
+	tcp->u_arg[2] = riscv_regs.a2;
+	tcp->u_arg[3] = riscv_regs.a3;
+	tcp->u_arg[4] = riscv_regs.a4;
+	tcp->u_arg[5] = riscv_regs.a5;
+	return 1;
+}
diff --git a/linux/riscv/ioctls_arch0.h b/linux/riscv/ioctls_arch0.h
new file mode 100644
index 0000000..d3c4f76
--- /dev/null
+++ b/linux/riscv/ioctls_arch0.h
@@ -0,0 +1 @@
+/* Generated by ioctls_gen.sh from definitions found in /var/tmp/kernel/arch/riscv/include/ tree. */
diff --git a/linux/riscv/ioctls_arch1.h b/linux/riscv/ioctls_arch1.h
new file mode 100644
index 0000000..41d00f9
--- /dev/null
+++ b/linux/riscv/ioctls_arch1.h
@@ -0,0 +1 @@
+#include "ioctls_arch0.h"
diff --git a/linux/riscv/ioctls_inc0.h b/linux/riscv/ioctls_inc0.h
new file mode 100644
index 0000000..b7de83b
--- /dev/null
+++ b/linux/riscv/ioctls_inc0.h
@@ -0,0 +1,2154 @@
+/* Generated by ioctls_gen.sh from definitions found in /var/tmp/kernel//include/ tree. */
+{ "acpi/apei.h", "APEI_ERST_CLEAR_RECORD", _IOC_WRITE, 0x4501, 0x08 },
+{ "acpi/apei.h", "APEI_ERST_GET_RECORD_COUNT", _IOC_READ, 0x4502, 0x04 },
+{ "asm-generic/ioctls.h", "FIOASYNC", 0, 0x5452, 0 },
+{ "asm-generic/ioctls.h", "FIOCLEX", 0, 0x5451, 0 },
+{ "asm-generic/ioctls.h", "FIONBIO", 0, 0x5421, 0 },
+{ "asm-generic/ioctls.h", "FIONCLEX", 0, 0x5450, 0 },
+{ "asm-generic/ioctls.h", "FIONREAD", 0, 0x541B, 0 },
+{ "asm-generic/ioctls.h", "FIOQSIZE", 0, 0x5460, 0 },
+{ "asm-generic/ioctls.h", "TCFLSH", 0, 0x540B, 0 },
+{ "asm-generic/ioctls.h", "TCGETA", 0, 0x5405, 0 },
+{ "asm-generic/ioctls.h", "TCGETS", 0, 0x5401, 0 },
+{ "asm-generic/ioctls.h", "TCGETS2", _IOC_READ, 0x542a, 0x2c },
+{ "asm-generic/ioctls.h", "TCGETX", 0, 0x5432, 0 },
+{ "asm-generic/ioctls.h", "TCSBRK", 0, 0x5409, 0 },
+{ "asm-generic/ioctls.h", "TCSBRKP", 0, 0x5425, 0 },
+{ "asm-generic/ioctls.h", "TCSETA", 0, 0x5406, 0 },
+{ "asm-generic/ioctls.h", "TCSETAF", 0, 0x5408, 0 },
+{ "asm-generic/ioctls.h", "TCSETAW", 0, 0x5407, 0 },
+{ "asm-generic/ioctls.h", "TCSETS", 0, 0x5402, 0 },
+{ "asm-generic/ioctls.h", "TCSETS2", _IOC_WRITE, 0x542b, 0x2c },
+{ "asm-generic/ioctls.h", "TCSETSF", 0, 0x5404, 0 },
+{ "asm-generic/ioctls.h", "TCSETSF2", _IOC_WRITE, 0x542d, 0x2c },
+{ "asm-generic/ioctls.h", "TCSETSW", 0, 0x5403, 0 },
+{ "asm-generic/ioctls.h", "TCSETSW2", _IOC_WRITE, 0x542c, 0x2c },
+{ "asm-generic/ioctls.h", "TCSETX", 0, 0x5433, 0 },
+{ "asm-generic/ioctls.h", "TCSETXF", 0, 0x5434, 0 },
+{ "asm-generic/ioctls.h", "TCSETXW", 0, 0x5435, 0 },
+{ "asm-generic/ioctls.h", "TCXONC", 0, 0x540A, 0 },
+{ "asm-generic/ioctls.h", "TIOCCBRK", 0, 0x5428, 0 },
+{ "asm-generic/ioctls.h", "TIOCCONS", 0, 0x541D, 0 },
+{ "asm-generic/ioctls.h", "TIOCEXCL", 0, 0x540C, 0 },
+{ "asm-generic/ioctls.h", "TIOCGDEV", _IOC_READ, 0x5432, 0x04 },
+{ "asm-generic/ioctls.h", "TIOCGETD", 0, 0x5424, 0 },
+{ "asm-generic/ioctls.h", "TIOCGEXCL", _IOC_READ, 0x5440, 0x04 },
+{ "asm-generic/ioctls.h", "TIOCGICOUNT", 0, 0x545D, 0 },
+{ "asm-generic/ioctls.h", "TIOCGLCKTRMIOS", 0, 0x5456, 0 },
+{ "asm-generic/ioctls.h", "TIOCGPGRP", 0, 0x540F, 0 },
+{ "asm-generic/ioctls.h", "TIOCGPKT", _IOC_READ, 0x5438, 0x04 },
+{ "asm-generic/ioctls.h", "TIOCGPTLCK", _IOC_READ, 0x5439, 0x04 },
+{ "asm-generic/ioctls.h", "TIOCGPTN", _IOC_READ, 0x5430, 0x04 },
+{ "asm-generic/ioctls.h", "TIOCGRS485", 0, 0x542E, 0 },
+{ "asm-generic/ioctls.h", "TIOCGSERIAL", 0, 0x541E, 0 },
+{ "asm-generic/ioctls.h", "TIOCGSID", 0, 0x5429, 0 },
+{ "asm-generic/ioctls.h", "TIOCGSOFTCAR", 0, 0x5419, 0 },
+{ "asm-generic/ioctls.h", "TIOCGWINSZ", 0, 0x5413, 0 },
+{ "asm-generic/ioctls.h", "TIOCLINUX", 0, 0x541C, 0 },
+{ "asm-generic/ioctls.h", "TIOCMBIC", 0, 0x5417, 0 },
+{ "asm-generic/ioctls.h", "TIOCMBIS", 0, 0x5416, 0 },
+{ "asm-generic/ioctls.h", "TIOCMGET", 0, 0x5415, 0 },
+{ "asm-generic/ioctls.h", "TIOCMIWAIT", 0, 0x545C, 0 },
+{ "asm-generic/ioctls.h", "TIOCMSET", 0, 0x5418, 0 },
+{ "asm-generic/ioctls.h", "TIOCNOTTY", 0, 0x5422, 0 },
+{ "asm-generic/ioctls.h", "TIOCNXCL", 0, 0x540D, 0 },
+{ "asm-generic/ioctls.h", "TIOCOUTQ", 0, 0x5411, 0 },
+{ "asm-generic/ioctls.h", "TIOCPKT", 0, 0x5420, 0 },
+{ "asm-generic/ioctls.h", "TIOCSBRK", 0, 0x5427, 0 },
+{ "asm-generic/ioctls.h", "TIOCSCTTY", 0, 0x540E, 0 },
+{ "asm-generic/ioctls.h", "TIOCSERCONFIG", 0, 0x5453, 0 },
+{ "asm-generic/ioctls.h", "TIOCSERGETLSR", 0, 0x5459, 0 },
+{ "asm-generic/ioctls.h", "TIOCSERGETMULTI", 0, 0x545A, 0 },
+{ "asm-generic/ioctls.h", "TIOCSERGSTRUCT", 0, 0x5458, 0 },
+{ "asm-generic/ioctls.h", "TIOCSERGWILD", 0, 0x5454, 0 },
+{ "asm-generic/ioctls.h", "TIOCSERSETMULTI", 0, 0x545B, 0 },
+{ "asm-generic/ioctls.h", "TIOCSERSWILD", 0, 0x5455, 0 },
+{ "asm-generic/ioctls.h", "TIOCSETD", 0, 0x5423, 0 },
+{ "asm-generic/ioctls.h", "TIOCSIG", _IOC_WRITE, 0x5436, 0x04 },
+{ "asm-generic/ioctls.h", "TIOCSLCKTRMIOS", 0, 0x5457, 0 },
+{ "asm-generic/ioctls.h", "TIOCSPGRP", 0, 0x5410, 0 },
+{ "asm-generic/ioctls.h", "TIOCSPTLCK", _IOC_WRITE, 0x5431, 0x04 },
+{ "asm-generic/ioctls.h", "TIOCSRS485", 0, 0x542F, 0 },
+{ "asm-generic/ioctls.h", "TIOCSSERIAL", 0, 0x541F, 0 },
+{ "asm-generic/ioctls.h", "TIOCSSOFTCAR", 0, 0x541A, 0 },
+{ "asm-generic/ioctls.h", "TIOCSTI", 0, 0x5412, 0 },
+{ "asm-generic/ioctls.h", "TIOCSWINSZ", 0, 0x5414, 0 },
+{ "asm-generic/ioctls.h", "TIOCVHANGUP", 0, 0x5437, 0 },
+{ "asm-generic/sockios.h", "FIOGETOWN", 0, 0x8903, 0 },
+{ "asm-generic/sockios.h", "FIOSETOWN", 0, 0x8901, 0 },
+{ "asm-generic/sockios.h", "SIOCATMARK", 0, 0x8905, 0 },
+{ "asm-generic/sockios.h", "SIOCGPGRP", 0, 0x8904, 0 },
+{ "asm-generic/sockios.h", "SIOCGSTAMP", 0, 0x8906, 0 },
+{ "asm-generic/sockios.h", "SIOCGSTAMPNS", 0, 0x8907, 0 },
+{ "asm-generic/sockios.h", "SIOCSPGRP", 0, 0x8902, 0 },
+{ "linux/agpgart.h", "AGPIOC_ACQUIRE", _IOC_NONE, 0x4101, 0x00 },
+{ "linux/agpgart.h", "AGPIOC_ALLOCATE", _IOC_READ|_IOC_WRITE, 0x4106, 0x08 },
+{ "linux/agpgart.h", "AGPIOC_BIND", _IOC_WRITE, 0x4108, 0x08 },
+{ "linux/agpgart.h", "AGPIOC_CHIPSET_FLUSH", _IOC_NONE, 0x410a, 0x00 },
+{ "linux/agpgart.h", "AGPIOC_DEALLOCATE", _IOC_WRITE, 0x4107, 0x04 },
+{ "linux/agpgart.h", "AGPIOC_INFO", _IOC_READ, 0x4100, 0x08 },
+{ "linux/agpgart.h", "AGPIOC_PROTECT", _IOC_WRITE, 0x4105, 0x08 },
+{ "linux/agpgart.h", "AGPIOC_RELEASE", _IOC_NONE, 0x4102, 0x00 },
+{ "linux/agpgart.h", "AGPIOC_RESERVE", _IOC_WRITE, 0x4104, 0x08 },
+{ "linux/agpgart.h", "AGPIOC_SETUP", _IOC_WRITE, 0x4103, 0x08 },
+{ "linux/agpgart.h", "AGPIOC_UNBIND", _IOC_WRITE, 0x4109, 0x08 },
+{ "linux/am437x-vpfe.h", "VIDIOC_AM437X_CCDC_CFG", _IOC_WRITE, 0x56c1, 0x08 },
+{ "linux/android/binder.h", "BC_ACQUIRE", _IOC_WRITE, 0x6305, 0x04 },
+{ "linux/android/binder.h", "BC_ACQUIRE_DONE", _IOC_WRITE, 0x6309, 0x10 },
+{ "linux/android/binder.h", "BC_ACQUIRE_RESULT", _IOC_WRITE, 0x6302, 0x04 },
+{ "linux/android/binder.h", "BC_ATTEMPT_ACQUIRE", _IOC_WRITE, 0x630a, 0x08 },
+{ "linux/android/binder.h", "BC_CLEAR_DEATH_NOTIFICATION", _IOC_WRITE, 0x630f, 0x0c },
+{ "linux/android/binder.h", "BC_DEAD_BINDER_DONE", _IOC_WRITE, 0x6310, 0x08 },
+{ "linux/android/binder.h", "BC_DECREFS", _IOC_WRITE, 0x6307, 0x04 },
+{ "linux/android/binder.h", "BC_ENTER_LOOPER", _IOC_NONE, 0x630c, 0x00 },
+{ "linux/android/binder.h", "BC_EXIT_LOOPER", _IOC_NONE, 0x630d, 0x00 },
+{ "linux/android/binder.h", "BC_FREE_BUFFER", _IOC_WRITE, 0x6303, 0x08 },
+{ "linux/android/binder.h", "BC_INCREFS", _IOC_WRITE, 0x6304, 0x04 },
+{ "linux/android/binder.h", "BC_INCREFS_DONE", _IOC_WRITE, 0x6308, 0x10 },
+{ "linux/android/binder.h", "BC_REGISTER_LOOPER", _IOC_NONE, 0x630b, 0x00 },
+{ "linux/android/binder.h", "BC_RELEASE", _IOC_WRITE, 0x6306, 0x04 },
+{ "linux/android/binder.h", "BC_REPLY", _IOC_WRITE, 0x6301, 0x40 },
+{ "linux/android/binder.h", "BC_REQUEST_DEATH_NOTIFICATION", _IOC_WRITE, 0x630e, 0x0c },
+{ "linux/android/binder.h", "BC_TRANSACTION", _IOC_WRITE, 0x6300, 0x40 },
+{ "linux/android/binder.h", "BINDER_SET_CONTEXT_MGR", _IOC_WRITE, 0x6207, 0x04 },
+{ "linux/android/binder.h", "BINDER_SET_IDLE_PRIORITY", _IOC_WRITE, 0x6206, 0x04 },
+{ "linux/android/binder.h", "BINDER_SET_IDLE_TIMEOUT", _IOC_WRITE, 0x6203, 0x08 },
+{ "linux/android/binder.h", "BINDER_SET_MAX_THREADS", _IOC_WRITE, 0x6205, 0x04 },
+{ "linux/android/binder.h", "BINDER_THREAD_EXIT", _IOC_WRITE, 0x6208, 0x04 },
+{ "linux/android/binder.h", "BINDER_VERSION", _IOC_READ|_IOC_WRITE, 0x6209, 0x04 },
+{ "linux/android/binder.h", "BINDER_WRITE_READ", _IOC_READ|_IOC_WRITE, 0x6201, 0x30 },
+{ "linux/android/binder.h", "BR_ACQUIRE", _IOC_READ, 0x7208, 0x10 },
+{ "linux/android/binder.h", "BR_ACQUIRE_RESULT", _IOC_READ, 0x7204, 0x04 },
+{ "linux/android/binder.h", "BR_ATTEMPT_ACQUIRE", _IOC_READ, 0x720b, 0x18 },
+{ "linux/android/binder.h", "BR_CLEAR_DEATH_NOTIFICATION_DONE", _IOC_READ, 0x7210, 0x08 },
+{ "linux/android/binder.h", "BR_DEAD_BINDER", _IOC_READ, 0x720f, 0x08 },
+{ "linux/android/binder.h", "BR_DEAD_REPLY", _IOC_NONE, 0x7205, 0x00 },
+{ "linux/android/binder.h", "BR_DECREFS", _IOC_READ, 0x720a, 0x10 },
+{ "linux/android/binder.h", "BR_ERROR", _IOC_READ, 0x7200, 0x04 },
+{ "linux/android/binder.h", "BR_FAILED_REPLY", _IOC_NONE, 0x7211, 0x00 },
+{ "linux/android/binder.h", "BR_FINISHED", _IOC_NONE, 0x720e, 0x00 },
+{ "linux/android/binder.h", "BR_INCREFS", _IOC_READ, 0x7207, 0x10 },
+{ "linux/android/binder.h", "BR_NOOP", _IOC_NONE, 0x720c, 0x00 },
+{ "linux/android/binder.h", "BR_OK", _IOC_NONE, 0x7201, 0x00 },
+{ "linux/android/binder.h", "BR_RELEASE", _IOC_READ, 0x7209, 0x10 },
+{ "linux/android/binder.h", "BR_REPLY", _IOC_READ, 0x7203, 0x40 },
+{ "linux/android/binder.h", "BR_SPAWN_LOOPER", _IOC_NONE, 0x720d, 0x00 },
+{ "linux/android/binder.h", "BR_TRANSACTION", _IOC_READ, 0x7202, 0x40 },
+{ "linux/android/binder.h", "BR_TRANSACTION_COMPLETE", _IOC_NONE, 0x7206, 0x00 },
+{ "linux/apm_bios.h", "APM_IOC_STANDBY", _IOC_NONE, 0x4101, 0x00 },
+{ "linux/apm_bios.h", "APM_IOC_SUSPEND", _IOC_NONE, 0x4102, 0x00 },
+{ "linux/arcfb.h", "FBIO_GETCONTROL2", _IOC_READ, 0x4689, 0x08 },
+{ "linux/arcfb.h", "FBIO_WAITEVENT", _IOC_NONE, 0x4688, 0x00 },
+{ "linux/atm_eni.h", "ENI_MEMDUMP", _IOC_WRITE, 0x6160, 0x10 },
+{ "linux/atm_eni.h", "ENI_SETMULT", _IOC_WRITE, 0x6167, 0x10 },
+{ "linux/atm_he.h", "HE_GET_REG", _IOC_WRITE, 0x6160, 0x10 },
+{ "linux/atm_idt77105.h", "IDT77105_GETSTAT", _IOC_WRITE, 0x6132, 0x10 },
+{ "linux/atm_idt77105.h", "IDT77105_GETSTATZ", _IOC_WRITE, 0x6133, 0x10 },
+{ "linux/atm_nicstar.h", "NS_ADJBUFLEV", _IOC_NONE, 0x6163, 0x00 },
+{ "linux/atm_nicstar.h", "NS_GETPSTAT", _IOC_READ|_IOC_WRITE, 0x6161, 0x10 },
+{ "linux/atm_nicstar.h", "NS_SETBUFLEV", _IOC_WRITE, 0x6162, 0x10 },
+{ "linux/atm_tcp.h", "ATMTCP_CREATE", _IOC_NONE, 0x618e, 0x00 },
+{ "linux/atm_tcp.h", "ATMTCP_REMOVE", _IOC_NONE, 0x618f, 0x00 },
+{ "linux/atm_tcp.h", "SIOCSIFATMTCP", _IOC_NONE, 0x6180, 0x00 },
+{ "linux/atm_zatm.h", "ZATM_GETPOOL", _IOC_WRITE, 0x6161, 0x10 },
+{ "linux/atm_zatm.h", "ZATM_GETPOOLZ", _IOC_WRITE, 0x6162, 0x10 },
+{ "linux/atm_zatm.h", "ZATM_SETPOOL", _IOC_WRITE, 0x6163, 0x10 },
+{ "linux/atmarp.h", "ATMARPD_CTRL", _IOC_NONE, 0x61e1, 0x00 },
+{ "linux/atmarp.h", "ATMARP_ENCAP", _IOC_NONE, 0x61e5, 0x00 },
+{ "linux/atmarp.h", "ATMARP_MKIP", _IOC_NONE, 0x61e2, 0x00 },
+{ "linux/atmarp.h", "ATMARP_SETENTRY", _IOC_NONE, 0x61e3, 0x00 },
+{ "linux/atmbr2684.h", "BR2684_SETFILT", _IOC_WRITE, 0x6190, 0x1c },
+{ "linux/atmclip.h", "SIOCMKCLIP", _IOC_NONE, 0x61e0, 0x00 },
+{ "linux/atmdev.h", "ATM_ADDADDR", _IOC_WRITE, 0x6188, 0x10 },
+{ "linux/atmdev.h", "ATM_ADDLECSADDR", _IOC_WRITE, 0x618e, 0x10 },
+{ "linux/atmdev.h", "ATM_ADDPARTY", _IOC_WRITE, 0x61f4, 0x10 },
+{ "linux/atmdev.h", "ATM_DELADDR", _IOC_WRITE, 0x6189, 0x10 },
+{ "linux/atmdev.h", "ATM_DELLECSADDR", _IOC_WRITE, 0x618f, 0x10 },
+{ "linux/atmdev.h", "ATM_DROPPARTY", _IOC_WRITE, 0x61f5, 0x04 },
+{ "linux/atmdev.h", "ATM_GETADDR", _IOC_WRITE, 0x6186, 0x10 },
+{ "linux/atmdev.h", "ATM_GETCIRANGE", _IOC_WRITE, 0x618a, 0x10 },
+{ "linux/atmdev.h", "ATM_GETESI", _IOC_WRITE, 0x6185, 0x10 },
+{ "linux/atmdev.h", "ATM_GETLECSADDR", _IOC_WRITE, 0x6190, 0x10 },
+{ "linux/atmdev.h", "ATM_GETLINKRATE", _IOC_WRITE, 0x6181, 0x10 },
+{ "linux/atmdev.h", "ATM_GETLOOP", _IOC_WRITE, 0x6152, 0x10 },
+{ "linux/atmdev.h", "ATM_GETNAMES", _IOC_WRITE, 0x6183, 0x10 },
+{ "linux/atmdev.h", "ATM_GETSTAT", _IOC_WRITE, 0x6150, 0x10 },
+{ "linux/atmdev.h", "ATM_GETSTATZ", _IOC_WRITE, 0x6151, 0x10 },
+{ "linux/atmdev.h", "ATM_GETTYPE", _IOC_WRITE, 0x6184, 0x10 },
+{ "linux/atmdev.h", "ATM_NEWBACKENDIF", _IOC_WRITE, 0x61f3, 0x02 },
+{ "linux/atmdev.h", "ATM_QUERYLOOP", _IOC_WRITE, 0x6154, 0x10 },
+{ "linux/atmdev.h", "ATM_RSTADDR", _IOC_WRITE, 0x6187, 0x10 },
+{ "linux/atmdev.h", "ATM_SETBACKEND", _IOC_WRITE, 0x61f2, 0x02 },
+{ "linux/atmdev.h", "ATM_SETCIRANGE", _IOC_WRITE, 0x618b, 0x10 },
+{ "linux/atmdev.h", "ATM_SETESI", _IOC_WRITE, 0x618c, 0x10 },
+{ "linux/atmdev.h", "ATM_SETESIF", _IOC_WRITE, 0x618d, 0x10 },
+{ "linux/atmdev.h", "ATM_SETLOOP", _IOC_WRITE, 0x6153, 0x10 },
+{ "linux/atmdev.h", "ATM_SETSC", _IOC_WRITE, 0x61f1, 0x04 },
+{ "linux/atmlec.h", "ATMLEC_CTRL", _IOC_NONE, 0x61d0, 0x00 },
+{ "linux/atmlec.h", "ATMLEC_DATA", _IOC_NONE, 0x61d1, 0x00 },
+{ "linux/atmlec.h", "ATMLEC_MCAST", _IOC_NONE, 0x61d2, 0x00 },
+{ "linux/atmmpc.h", "ATMMPC_CTRL", _IOC_NONE, 0x61d8, 0x00 },
+{ "linux/atmmpc.h", "ATMMPC_DATA", _IOC_NONE, 0x61d9, 0x00 },
+{ "linux/atmsvc.h", "ATMSIGD_CTRL", _IOC_NONE, 0x61f0, 0x00 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_ASKUMOUNT", _IOC_READ|_IOC_WRITE, 0x937d, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_CATATONIC", _IOC_READ|_IOC_WRITE, 0x9379, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_CLOSEMOUNT", _IOC_READ|_IOC_WRITE, 0x9375, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_EXPIRE", _IOC_READ|_IOC_WRITE, 0x937c, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_FAIL", _IOC_READ|_IOC_WRITE, 0x9377, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_ISMOUNTPOINT", _IOC_READ|_IOC_WRITE, 0x937e, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_OPENMOUNT", _IOC_READ|_IOC_WRITE, 0x9374, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_PROTOSUBVER", _IOC_READ|_IOC_WRITE, 0x9373, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_PROTOVER", _IOC_READ|_IOC_WRITE, 0x9372, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_READY", _IOC_READ|_IOC_WRITE, 0x9376, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_REQUESTER", _IOC_READ|_IOC_WRITE, 0x937b, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_SETPIPEFD", _IOC_READ|_IOC_WRITE, 0x9378, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_TIMEOUT", _IOC_READ|_IOC_WRITE, 0x937a, 0x18 },
+{ "linux/auto_dev-ioctl.h", "AUTOFS_DEV_IOCTL_VERSION", _IOC_READ|_IOC_WRITE, 0x9371, 0x18 },
+{ "linux/auto_fs.h", "AUTOFS_IOC_CATATONIC", _IOC_NONE, 0x9362, 0x00 },
+{ "linux/auto_fs.h", "AUTOFS_IOC_EXPIRE", _IOC_READ, 0x9365, 0x10c },
+{ "linux/auto_fs.h", "AUTOFS_IOC_FAIL", _IOC_NONE, 0x9361, 0x00 },
+{ "linux/auto_fs.h", "AUTOFS_IOC_PROTOVER", _IOC_READ, 0x9363, 0x04 },
+{ "linux/auto_fs.h", "AUTOFS_IOC_READY", _IOC_NONE, 0x9360, 0x00 },
+{ "linux/auto_fs.h", "AUTOFS_IOC_SETTIMEOUT", _IOC_READ|_IOC_WRITE, 0x9364, 0x08 },
+{ "linux/auto_fs.h", "AUTOFS_IOC_SETTIMEOUT32", _IOC_READ|_IOC_WRITE, 0x9364, 0x04 },
+{ "linux/auto_fs4.h", "AUTOFS_IOC_ASKUMOUNT", _IOC_READ, 0x9370, 0x04 },
+{ "linux/auto_fs4.h", "AUTOFS_IOC_EXPIRE_MULTI", _IOC_WRITE, 0x9366, 0x04 },
+{ "linux/auto_fs4.h", "AUTOFS_IOC_PROTOSUBVER", _IOC_READ, 0x9367, 0x04 },
+{ "linux/blkpg.h", "BLKPG", _IOC_NONE, 0x1269, 0x00 },
+{ "linux/capi.h", "CAPI_CLR_FLAGS", _IOC_READ, 0x4325, 0x04 },
+{ "linux/capi.h", "CAPI_GET_ERRCODE", _IOC_READ, 0x4321, 0x02 },
+{ "linux/capi.h", "CAPI_GET_FLAGS", _IOC_READ, 0x4323, 0x04 },
+{ "linux/capi.h", "CAPI_GET_MANUFACTURER", _IOC_READ|_IOC_WRITE, 0x4306, 0x04 },
+{ "linux/capi.h", "CAPI_GET_PROFILE", _IOC_READ|_IOC_WRITE, 0x4309, 0x40 },
+{ "linux/capi.h", "CAPI_GET_SERIAL", _IOC_READ|_IOC_WRITE, 0x4308, 0x04 },
+{ "linux/capi.h", "CAPI_GET_VERSION", _IOC_READ|_IOC_WRITE, 0x4307, 0x10 },
+{ "linux/capi.h", "CAPI_INSTALLED", _IOC_READ, 0x4322, 0x02 },
+{ "linux/capi.h", "CAPI_MANUFACTURER_CMD", _IOC_READ|_IOC_WRITE, 0x4320, 0x10 },
+{ "linux/capi.h", "CAPI_NCCI_GETUNIT", _IOC_READ, 0x4327, 0x04 },
+{ "linux/capi.h", "CAPI_NCCI_OPENCOUNT", _IOC_READ, 0x4326, 0x04 },
+{ "linux/capi.h", "CAPI_REGISTER", _IOC_WRITE, 0x4301, 0x0c },
+{ "linux/capi.h", "CAPI_SET_FLAGS", _IOC_READ, 0x4324, 0x04 },
+{ "linux/cciss_ioctl.h", "CCISS_BIG_PASSTHRU", _IOC_READ|_IOC_WRITE, 0x4212, 0x60 },
+{ "linux/cciss_ioctl.h", "CCISS_DEREGDISK", _IOC_NONE, 0x420c, 0x00 },
+{ "linux/cciss_ioctl.h", "CCISS_GETBUSTYPES", _IOC_READ, 0x4207, 0x04 },
+{ "linux/cciss_ioctl.h", "CCISS_GETDRIVVER", _IOC_READ, 0x4209, 0x04 },
+{ "linux/cciss_ioctl.h", "CCISS_GETFIRMVER", _IOC_READ, 0x4208, 0x04 },
+{ "linux/cciss_ioctl.h", "CCISS_GETHEARTBEAT", _IOC_READ, 0x4206, 0x04 },
+{ "linux/cciss_ioctl.h", "CCISS_GETINTINFO", _IOC_READ, 0x4202, 0x08 },
+{ "linux/cciss_ioctl.h", "CCISS_GETLUNINFO", _IOC_READ, 0x4211, 0x0c },
+{ "linux/cciss_ioctl.h", "CCISS_GETNODENAME", _IOC_READ, 0x4204, 0x10 },
+{ "linux/cciss_ioctl.h", "CCISS_GETPCIINFO", _IOC_READ, 0x4201, 0x08 },
+{ "linux/cciss_ioctl.h", "CCISS_PASSTHRU", _IOC_READ|_IOC_WRITE, 0x420b, 0x58 },
+{ "linux/cciss_ioctl.h", "CCISS_REGNEWD", _IOC_NONE, 0x420e, 0x00 },
+{ "linux/cciss_ioctl.h", "CCISS_REGNEWDISK", _IOC_WRITE, 0x420d, 0x04 },
+{ "linux/cciss_ioctl.h", "CCISS_RESCANDISK", _IOC_NONE, 0x4210, 0x00 },
+{ "linux/cciss_ioctl.h", "CCISS_REVALIDVOLS", _IOC_NONE, 0x420a, 0x00 },
+{ "linux/cciss_ioctl.h", "CCISS_SETINTINFO", _IOC_WRITE, 0x4203, 0x08 },
+{ "linux/cciss_ioctl.h", "CCISS_SETNODENAME", _IOC_WRITE, 0x4205, 0x10 },
+{ "linux/cdrom.h", "CDROMAUDIOBUFSIZ", 0, 0x5382, 0 },
+{ "linux/cdrom.h", "CDROMCLOSETRAY", 0, 0x5319, 0 },
+{ "linux/cdrom.h", "CDROMEJECT", 0, 0x5309, 0 },
+{ "linux/cdrom.h", "CDROMEJECT_SW", 0, 0x530f, 0 },
+{ "linux/cdrom.h", "CDROMGETSPINDOWN", 0, 0x531d, 0 },
+{ "linux/cdrom.h", "CDROMMULTISESSION", 0, 0x5310, 0 },
+{ "linux/cdrom.h", "CDROMPAUSE", 0, 0x5301, 0 },
+{ "linux/cdrom.h", "CDROMPLAYBLK", 0, 0x5317, 0 },
+{ "linux/cdrom.h", "CDROMPLAYMSF", 0, 0x5303, 0 },
+{ "linux/cdrom.h", "CDROMPLAYTRKIND", 0, 0x5304, 0 },
+{ "linux/cdrom.h", "CDROMREADALL", 0, 0x5318, 0 },
+{ "linux/cdrom.h", "CDROMREADAUDIO", 0, 0x530e, 0 },
+{ "linux/cdrom.h", "CDROMREADCOOKED", 0, 0x5315, 0 },
+{ "linux/cdrom.h", "CDROMREADMODE1", 0, 0x530d, 0 },
+{ "linux/cdrom.h", "CDROMREADMODE2", 0, 0x530c, 0 },
+{ "linux/cdrom.h", "CDROMREADRAW", 0, 0x5314, 0 },
+{ "linux/cdrom.h", "CDROMREADTOCENTRY", 0, 0x5306, 0 },
+{ "linux/cdrom.h", "CDROMREADTOCHDR", 0, 0x5305, 0 },
+{ "linux/cdrom.h", "CDROMRESET", 0, 0x5312, 0 },
+{ "linux/cdrom.h", "CDROMRESUME", 0, 0x5302, 0 },
+{ "linux/cdrom.h", "CDROMSEEK", 0, 0x5316, 0 },
+{ "linux/cdrom.h", "CDROMSETSPINDOWN", 0, 0x531e, 0 },
+{ "linux/cdrom.h", "CDROMSTART", 0, 0x5308, 0 },
+{ "linux/cdrom.h", "CDROMSTOP", 0, 0x5307, 0 },
+{ "linux/cdrom.h", "CDROMSUBCHNL", 0, 0x530b, 0 },
+{ "linux/cdrom.h", "CDROMVOLCTRL", 0, 0x530a, 0 },
+{ "linux/cdrom.h", "CDROMVOLREAD", 0, 0x5313, 0 },
+{ "linux/cdrom.h", "CDROM_CHANGER_NSLOTS", 0, 0x5328, 0 },
+{ "linux/cdrom.h", "CDROM_CLEAR_OPTIONS", 0, 0x5321, 0 },
+{ "linux/cdrom.h", "CDROM_DEBUG", 0, 0x5330, 0 },
+{ "linux/cdrom.h", "CDROM_DISC_STATUS", 0, 0x5327, 0 },
+{ "linux/cdrom.h", "CDROM_DRIVE_STATUS", 0, 0x5326, 0 },
+{ "linux/cdrom.h", "CDROM_GET_CAPABILITY", 0, 0x5331, 0 },
+{ "linux/cdrom.h", "CDROM_GET_MCN", 0, 0x5311, 0 },
+{ "linux/cdrom.h", "CDROM_LAST_WRITTEN", 0, 0x5395, 0 },
+{ "linux/cdrom.h", "CDROM_LOCKDOOR", 0, 0x5329, 0 },
+{ "linux/cdrom.h", "CDROM_MEDIA_CHANGED", 0, 0x5325, 0 },
+{ "linux/cdrom.h", "CDROM_NEXT_WRITABLE", 0, 0x5394, 0 },
+{ "linux/cdrom.h", "CDROM_SELECT_DISC", 0, 0x5323, 0 },
+{ "linux/cdrom.h", "CDROM_SELECT_SPEED", 0, 0x5322, 0 },
+{ "linux/cdrom.h", "CDROM_SEND_PACKET", 0, 0x5393, 0 },
+{ "linux/cdrom.h", "CDROM_SET_OPTIONS", 0, 0x5320, 0 },
+{ "linux/cdrom.h", "DVD_AUTH", 0, 0x5392, 0 },
+{ "linux/cdrom.h", "DVD_READ_STRUCT", 0, 0x5390, 0 },
+{ "linux/cdrom.h", "DVD_WRITE_STRUCT", 0, 0x5391, 0 },
+{ "linux/chio.h", "CHIOEXCHANGE", _IOC_WRITE, 0x6302, 0x1c },
+{ "linux/chio.h", "CHIOGELEM", _IOC_WRITE, 0x6310, 0x6c },
+{ "linux/chio.h", "CHIOGPARAMS", _IOC_READ, 0x6306, 0x14 },
+{ "linux/chio.h", "CHIOGPICKER", _IOC_READ, 0x6304, 0x04 },
+{ "linux/chio.h", "CHIOGSTATUS", _IOC_WRITE, 0x6308, 0x10 },
+{ "linux/chio.h", "CHIOGVPARAMS", _IOC_READ, 0x6313, 0x70 },
+{ "linux/chio.h", "CHIOINITELEM", _IOC_NONE, 0x6311, 0x00 },
+{ "linux/chio.h", "CHIOMOVE", _IOC_WRITE, 0x6301, 0x14 },
+{ "linux/chio.h", "CHIOPOSITION", _IOC_WRITE, 0x6303, 0x0c },
+{ "linux/chio.h", "CHIOSPICKER", _IOC_WRITE, 0x6305, 0x04 },
+{ "linux/chio.h", "CHIOSVOLTAG", _IOC_WRITE, 0x6312, 0x30 },
+{ "linux/cm4000_cs.h", "CM_IOCARDOFF", _IOC_NONE, 0x6304, 0x00 },
+{ "linux/cm4000_cs.h", "CM_IOCGATR", _IOC_READ|_IOC_WRITE, 0x6301, 0x08 },
+{ "linux/cm4000_cs.h", "CM_IOCGSTATUS", _IOC_READ, 0x6300, 0x08 },
+{ "linux/cm4000_cs.h", "CM_IOCSPTS", _IOC_WRITE, 0x6302, 0x08 },
+{ "linux/cm4000_cs.h", "CM_IOCSRDR", _IOC_NONE, 0x6303, 0x00 },
+{ "linux/cm4000_cs.h", "CM_IOSDBGLVL", _IOC_WRITE, 0x63fa, 0x08 },
+{ "linux/coda.h", "CIOC_KERNEL_VERSION", _IOC_READ|_IOC_WRITE, 0x630a, 0x08 },
+{ "linux/dm-ioctl.h", "DM_DEV_CREATE", _IOC_READ|_IOC_WRITE, 0xfd03, 0x138 },
+{ "linux/dm-ioctl.h", "DM_DEV_REMOVE", _IOC_READ|_IOC_WRITE, 0xfd04, 0x138 },
+{ "linux/dm-ioctl.h", "DM_DEV_RENAME", _IOC_READ|_IOC_WRITE, 0xfd05, 0x138 },
+{ "linux/dm-ioctl.h", "DM_DEV_SET_GEOMETRY", _IOC_READ|_IOC_WRITE, 0xfd0f, 0x138 },
+{ "linux/dm-ioctl.h", "DM_DEV_STATUS", _IOC_READ|_IOC_WRITE, 0xfd07, 0x138 },
+{ "linux/dm-ioctl.h", "DM_DEV_SUSPEND", _IOC_READ|_IOC_WRITE, 0xfd06, 0x138 },
+{ "linux/dm-ioctl.h", "DM_DEV_WAIT", _IOC_READ|_IOC_WRITE, 0xfd08, 0x138 },
+{ "linux/dm-ioctl.h", "DM_LIST_DEVICES", _IOC_READ|_IOC_WRITE, 0xfd02, 0x138 },
+{ "linux/dm-ioctl.h", "DM_LIST_VERSIONS", _IOC_READ|_IOC_WRITE, 0xfd0d, 0x138 },
+{ "linux/dm-ioctl.h", "DM_REMOVE_ALL", _IOC_READ|_IOC_WRITE, 0xfd01, 0x138 },
+{ "linux/dm-ioctl.h", "DM_TABLE_CLEAR", _IOC_READ|_IOC_WRITE, 0xfd0a, 0x138 },
+{ "linux/dm-ioctl.h", "DM_TABLE_DEPS", _IOC_READ|_IOC_WRITE, 0xfd0b, 0x138 },
+{ "linux/dm-ioctl.h", "DM_TABLE_LOAD", _IOC_READ|_IOC_WRITE, 0xfd09, 0x138 },
+{ "linux/dm-ioctl.h", "DM_TABLE_STATUS", _IOC_READ|_IOC_WRITE, 0xfd0c, 0x138 },
+{ "linux/dm-ioctl.h", "DM_TARGET_MSG", _IOC_READ|_IOC_WRITE, 0xfd0e, 0x138 },
+{ "linux/dm-ioctl.h", "DM_VERSION", _IOC_READ|_IOC_WRITE, 0xfd00, 0x138 },
+{ "linux/dn.h", "OSIOCGNETADDR", _IOC_READ, 0x89e1, 0x04 },
+{ "linux/dn.h", "OSIOCSNETADDR", _IOC_WRITE, 0x89e0, 0x04 },
+{ "linux/dn.h", "SIOCGNETADDR", _IOC_READ, 0x89e1, 0x04 },
+{ "linux/dn.h", "SIOCSNETADDR", _IOC_WRITE, 0x89e0, 0x04 },
+{ "linux/dvb/audio.h", "AUDIO_BILINGUAL_CHANNEL_SELECT", _IOC_NONE, 0x6f14, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_CHANNEL_SELECT", _IOC_NONE, 0x6f09, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_CLEAR_BUFFER", _IOC_NONE, 0x6f0c, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_CONTINUE", _IOC_NONE, 0x6f04, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_GET_CAPABILITIES", _IOC_READ, 0x6f0b, 0x04 },
+{ "linux/dvb/audio.h", "AUDIO_GET_PTS", _IOC_READ, 0x6f13, 0x08 },
+{ "linux/dvb/audio.h", "AUDIO_GET_STATUS", _IOC_READ, 0x6f0a, 0x20 },
+{ "linux/dvb/audio.h", "AUDIO_PAUSE", _IOC_NONE, 0x6f03, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_PLAY", _IOC_NONE, 0x6f02, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_SELECT_SOURCE", _IOC_NONE, 0x6f05, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_SET_ATTRIBUTES", _IOC_WRITE, 0x6f11, 0x02 },
+{ "linux/dvb/audio.h", "AUDIO_SET_AV_SYNC", _IOC_NONE, 0x6f07, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_SET_BYPASS_MODE", _IOC_NONE, 0x6f08, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_SET_EXT_ID", _IOC_NONE, 0x6f10, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_SET_ID", _IOC_NONE, 0x6f0d, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_SET_KARAOKE", _IOC_WRITE, 0x6f12, 0x0c },
+{ "linux/dvb/audio.h", "AUDIO_SET_MIXER", _IOC_WRITE, 0x6f0e, 0x08 },
+{ "linux/dvb/audio.h", "AUDIO_SET_MUTE", _IOC_NONE, 0x6f06, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_SET_STREAMTYPE", _IOC_NONE, 0x6f0f, 0x00 },
+{ "linux/dvb/audio.h", "AUDIO_STOP", _IOC_NONE, 0x6f01, 0x00 },
+{ "linux/dvb/ca.h", "CA_GET_CAP", _IOC_READ, 0x6f81, 0x10 },
+{ "linux/dvb/ca.h", "CA_GET_DESCR_INFO", _IOC_READ, 0x6f83, 0x08 },
+{ "linux/dvb/ca.h", "CA_GET_MSG", _IOC_READ, 0x6f84, 0x10c },
+{ "linux/dvb/ca.h", "CA_GET_SLOT_INFO", _IOC_READ, 0x6f82, 0x0c },
+{ "linux/dvb/ca.h", "CA_RESET", _IOC_NONE, 0x6f80, 0x00 },
+{ "linux/dvb/ca.h", "CA_SEND_MSG", _IOC_WRITE, 0x6f85, 0x10c },
+{ "linux/dvb/ca.h", "CA_SET_DESCR", _IOC_WRITE, 0x6f86, 0x10 },
+{ "linux/dvb/ca.h", "CA_SET_PID", _IOC_WRITE, 0x6f87, 0x08 },
+{ "linux/dvb/dmx.h", "DMX_ADD_PID", _IOC_WRITE, 0x6f33, 0x02 },
+{ "linux/dvb/dmx.h", "DMX_GET_CAPS", _IOC_READ, 0x6f30, 0x08 },
+{ "linux/dvb/dmx.h", "DMX_GET_PES_PIDS", _IOC_READ, 0x6f2f, 0x0a },
+{ "linux/dvb/dmx.h", "DMX_GET_STC", _IOC_READ|_IOC_WRITE, 0x6f32, 0x10 },
+{ "linux/dvb/dmx.h", "DMX_REMOVE_PID", _IOC_WRITE, 0x6f34, 0x02 },
+{ "linux/dvb/dmx.h", "DMX_SET_BUFFER_SIZE", _IOC_NONE, 0x6f2d, 0x00 },
+{ "linux/dvb/dmx.h", "DMX_SET_FILTER", _IOC_WRITE, 0x6f2b, 0x3c },
+{ "linux/dvb/dmx.h", "DMX_SET_PES_FILTER", _IOC_WRITE, 0x6f2c, 0x14 },
+{ "linux/dvb/dmx.h", "DMX_SET_SOURCE", _IOC_WRITE, 0x6f31, 0x04 },
+{ "linux/dvb/dmx.h", "DMX_START", _IOC_NONE, 0x6f29, 0x00 },
+{ "linux/dvb/dmx.h", "DMX_STOP", _IOC_NONE, 0x6f2a, 0x00 },
+{ "linux/dvb/frontend.h", "FE_DISEQC_RECV_SLAVE_REPLY", _IOC_READ, 0x6f40, 0x0c },
+{ "linux/dvb/frontend.h", "FE_DISEQC_RESET_OVERLOAD", _IOC_NONE, 0x6f3e, 0x00 },
+{ "linux/dvb/frontend.h", "FE_DISEQC_SEND_BURST", _IOC_NONE, 0x6f41, 0x00 },
+{ "linux/dvb/frontend.h", "FE_DISEQC_SEND_MASTER_CMD", _IOC_WRITE, 0x6f3f, 0x07 },
+{ "linux/dvb/frontend.h", "FE_DISHNETWORK_SEND_LEGACY_CMD", _IOC_NONE, 0x6f50, 0x00 },
+{ "linux/dvb/frontend.h", "FE_ENABLE_HIGH_LNB_VOLTAGE", _IOC_NONE, 0x6f44, 0x00 },
+{ "linux/dvb/frontend.h", "FE_GET_EVENT", _IOC_READ, 0x6f4e, 0x28 },
+{ "linux/dvb/frontend.h", "FE_GET_FRONTEND", _IOC_READ, 0x6f4d, 0x24 },
+{ "linux/dvb/frontend.h", "FE_GET_INFO", _IOC_READ, 0x6f3d, 0xa8 },
+{ "linux/dvb/frontend.h", "FE_GET_PROPERTY", _IOC_READ, 0x6f53, 0x10 },
+{ "linux/dvb/frontend.h", "FE_READ_BER", _IOC_READ, 0x6f46, 0x04 },
+{ "linux/dvb/frontend.h", "FE_READ_SIGNAL_STRENGTH", _IOC_READ, 0x6f47, 0x02 },
+{ "linux/dvb/frontend.h", "FE_READ_SNR", _IOC_READ, 0x6f48, 0x02 },
+{ "linux/dvb/frontend.h", "FE_READ_STATUS", _IOC_READ, 0x6f45, 0x04 },
+{ "linux/dvb/frontend.h", "FE_READ_UNCORRECTED_BLOCKS", _IOC_READ, 0x6f49, 0x04 },
+{ "linux/dvb/frontend.h", "FE_SET_FRONTEND", _IOC_WRITE, 0x6f4c, 0x24 },
+{ "linux/dvb/frontend.h", "FE_SET_FRONTEND_TUNE_MODE", _IOC_NONE, 0x6f51, 0x00 },
+{ "linux/dvb/frontend.h", "FE_SET_PROPERTY", _IOC_WRITE, 0x6f52, 0x10 },
+{ "linux/dvb/frontend.h", "FE_SET_TONE", _IOC_NONE, 0x6f42, 0x00 },
+{ "linux/dvb/frontend.h", "FE_SET_VOLTAGE", _IOC_NONE, 0x6f43, 0x00 },
+{ "linux/dvb/net.h", "NET_ADD_IF", _IOC_READ|_IOC_WRITE, 0x6f34, 0x06 },
+{ "linux/dvb/net.h", "NET_GET_IF", _IOC_READ|_IOC_WRITE, 0x6f36, 0x06 },
+{ "linux/dvb/net.h", "NET_REMOVE_IF", _IOC_NONE, 0x6f35, 0x00 },
+{ "linux/dvb/osd.h", "OSD_GET_CAPABILITY", _IOC_READ, 0x6fa1, 0x10 },
+{ "linux/dvb/osd.h", "OSD_SEND_CMD", _IOC_WRITE, 0x6fa0, 0x20 },
+{ "linux/dvb/video.h", "VIDEO_CLEAR_BUFFER", _IOC_NONE, 0x6f22, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_COMMAND", _IOC_READ|_IOC_WRITE, 0x6f3b, 0x48 },
+{ "linux/dvb/video.h", "VIDEO_CONTINUE", _IOC_NONE, 0x6f18, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_FAST_FORWARD", _IOC_NONE, 0x6f1f, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_FREEZE", _IOC_NONE, 0x6f17, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_GET_CAPABILITIES", _IOC_READ, 0x6f21, 0x04 },
+{ "linux/dvb/video.h", "VIDEO_GET_EVENT", _IOC_READ, 0x6f1c, 0x20 },
+{ "linux/dvb/video.h", "VIDEO_GET_FRAME_COUNT", _IOC_READ, 0x6f3a, 0x08 },
+{ "linux/dvb/video.h", "VIDEO_GET_FRAME_RATE", _IOC_READ, 0x6f38, 0x04 },
+{ "linux/dvb/video.h", "VIDEO_GET_NAVI", _IOC_READ, 0x6f34, 0x404 },
+{ "linux/dvb/video.h", "VIDEO_GET_PTS", _IOC_READ, 0x6f39, 0x08 },
+{ "linux/dvb/video.h", "VIDEO_GET_SIZE", _IOC_READ, 0x6f37, 0x0c },
+{ "linux/dvb/video.h", "VIDEO_GET_STATUS", _IOC_READ, 0x6f1b, 0x14 },
+{ "linux/dvb/video.h", "VIDEO_PLAY", _IOC_NONE, 0x6f16, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SELECT_SOURCE", _IOC_NONE, 0x6f19, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SET_ATTRIBUTES", _IOC_NONE, 0x6f35, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SET_BLANK", _IOC_NONE, 0x6f1a, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SET_DISPLAY_FORMAT", _IOC_NONE, 0x6f1d, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SET_FORMAT", _IOC_NONE, 0x6f25, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SET_HIGHLIGHT", _IOC_WRITE, 0x6f27, 0x10 },
+{ "linux/dvb/video.h", "VIDEO_SET_ID", _IOC_NONE, 0x6f23, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SET_SPU", _IOC_WRITE, 0x6f32, 0x08 },
+{ "linux/dvb/video.h", "VIDEO_SET_SPU_PALETTE", _IOC_WRITE, 0x6f33, 0x10 },
+{ "linux/dvb/video.h", "VIDEO_SET_STREAMTYPE", _IOC_NONE, 0x6f24, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SET_SYSTEM", _IOC_NONE, 0x6f26, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_SLOWMOTION", _IOC_NONE, 0x6f20, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_STILLPICTURE", _IOC_WRITE, 0x6f1e, 0x10 },
+{ "linux/dvb/video.h", "VIDEO_STOP", _IOC_NONE, 0x6f15, 0x00 },
+{ "linux/dvb/video.h", "VIDEO_TRY_COMMAND", _IOC_READ|_IOC_WRITE, 0x6f3c, 0x48 },
+{ "linux/fb.h", "FBIOBLANK", 0, 0x4611, 0 },
+{ "linux/fb.h", "FBIOGETCMAP", 0, 0x4604, 0 },
+{ "linux/fb.h", "FBIOGET_CON2FBMAP", 0, 0x460F, 0 },
+{ "linux/fb.h", "FBIOGET_DISPINFO", 0, 0x4618, 0 },
+{ "linux/fb.h", "FBIOGET_FSCREENINFO", 0, 0x4602, 0 },
+{ "linux/fb.h", "FBIOGET_GLYPH", 0, 0x4615, 0 },
+{ "linux/fb.h", "FBIOGET_HWCINFO", 0, 0x4616, 0 },
+{ "linux/fb.h", "FBIOGET_VBLANK", _IOC_READ, 0x4612, 0x20 },
+{ "linux/fb.h", "FBIOGET_VSCREENINFO", 0, 0x4600, 0 },
+{ "linux/fb.h", "FBIOPAN_DISPLAY", 0, 0x4606, 0 },
+{ "linux/fb.h", "FBIOPUTCMAP", 0, 0x4605, 0 },
+{ "linux/fb.h", "FBIOPUT_CON2FBMAP", 0, 0x4610, 0 },
+{ "linux/fb.h", "FBIOPUT_MODEINFO", 0, 0x4617, 0 },
+{ "linux/fb.h", "FBIOPUT_VSCREENINFO", 0, 0x4601, 0 },
+{ "linux/fb.h", "FBIO_ALLOC", 0, 0x4613, 0 },
+{ "linux/fb.h", "FBIO_CURSOR", _IOC_READ|_IOC_WRITE, 0x4608, 0x68 },
+{ "linux/fb.h", "FBIO_FREE", 0, 0x4614, 0 },
+{ "linux/fb.h", "FBIO_WAITFORVSYNC", _IOC_WRITE, 0x4620, 0x04 },
+{ "linux/fd.h", "FDCLRPRM", _IOC_NONE, 0x0241, 0x00 },
+{ "linux/fd.h", "FDDEFPRM", _IOC_WRITE, 0x0243, 0x20 },
+{ "linux/fd.h", "FDEJECT", _IOC_NONE, 0x025a, 0x00 },
+{ "linux/fd.h", "FDFLUSH", _IOC_NONE, 0x024b, 0x00 },
+{ "linux/fd.h", "FDFMTBEG", _IOC_NONE, 0x0247, 0x00 },
+{ "linux/fd.h", "FDFMTEND", _IOC_NONE, 0x0249, 0x00 },
+{ "linux/fd.h", "FDFMTTRK", _IOC_WRITE, 0x0248, 0x0c },
+{ "linux/fd.h", "FDGETDRVPRM", _IOC_READ, 0x0211, 0x80 },
+{ "linux/fd.h", "FDGETDRVSTAT", _IOC_READ, 0x0212, 0x50 },
+{ "linux/fd.h", "FDGETDRVTYP", _IOC_READ, 0x020f, 0x10 },
+{ "linux/fd.h", "FDGETFDCSTAT", _IOC_READ, 0x0215, 0x28 },
+{ "linux/fd.h", "FDGETMAXERRS", _IOC_READ, 0x020e, 0x14 },
+{ "linux/fd.h", "FDGETPRM", _IOC_READ, 0x0204, 0x20 },
+{ "linux/fd.h", "FDMSGOFF", _IOC_NONE, 0x0246, 0x00 },
+{ "linux/fd.h", "FDMSGON", _IOC_NONE, 0x0245, 0x00 },
+{ "linux/fd.h", "FDPOLLDRVSTAT", _IOC_READ, 0x0213, 0x50 },
+{ "linux/fd.h", "FDRAWCMD", _IOC_NONE, 0x0258, 0x00 },
+{ "linux/fd.h", "FDRESET", _IOC_NONE, 0x0254, 0x00 },
+{ "linux/fd.h", "FDSETDRVPRM", _IOC_WRITE, 0x0290, 0x80 },
+{ "linux/fd.h", "FDSETEMSGTRESH", _IOC_NONE, 0x024a, 0x00 },
+{ "linux/fd.h", "FDSETMAXERRS", _IOC_WRITE, 0x024c, 0x14 },
+{ "linux/fd.h", "FDSETPRM", _IOC_WRITE, 0x0242, 0x20 },
+{ "linux/fd.h", "FDTWADDLE", _IOC_NONE, 0x0259, 0x00 },
+{ "linux/fd.h", "FDWERRORCLR", _IOC_NONE, 0x0256, 0x00 },
+{ "linux/fd.h", "FDWERRORGET", _IOC_READ, 0x0217, 0x28 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_ADD_DESCRIPTOR", _IOC_READ|_IOC_WRITE, 0x2306, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_ALLOCATE", _IOC_READ|_IOC_WRITE, 0x2302, 0x20 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE", _IOC_READ|_IOC_WRITE, 0x230d, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE_ONCE", _IOC_WRITE, 0x230f, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_CREATE_ISO_CONTEXT", _IOC_READ|_IOC_WRITE, 0x2308, 0x20 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_DEALLOCATE", _IOC_WRITE, 0x2303, 0x04 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE", _IOC_WRITE, 0x230e, 0x04 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE_ONCE", _IOC_WRITE, 0x2310, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_FLUSH_ISO", _IOC_WRITE, 0x2318, 0x04 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_GET_CYCLE_TIMER", _IOC_READ, 0x230c, 0x10 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_GET_CYCLE_TIMER2", _IOC_READ|_IOC_WRITE, 0x2314, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_GET_INFO", _IOC_READ|_IOC_WRITE, 0x2300, 0x28 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_GET_SPEED", _IOC_NONE, 0x2311, 0x00 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_INITIATE_BUS_RESET", _IOC_WRITE, 0x2305, 0x04 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_QUEUE_ISO", _IOC_READ|_IOC_WRITE, 0x2309, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_RECEIVE_PHY_PACKETS", _IOC_WRITE, 0x2316, 0x08 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_REMOVE_DESCRIPTOR", _IOC_WRITE, 0x2307, 0x04 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_SEND_BROADCAST_REQUEST", _IOC_WRITE, 0x2312, 0x28 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_SEND_PHY_PACKET", _IOC_READ|_IOC_WRITE, 0x2315, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_SEND_REQUEST", _IOC_WRITE, 0x2301, 0x28 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_SEND_RESPONSE", _IOC_WRITE, 0x2304, 0x18 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_SEND_STREAM_PACKET", _IOC_WRITE, 0x2313, 0x28 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_SET_ISO_CHANNELS", _IOC_WRITE, 0x2317, 0x10 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_START_ISO", _IOC_WRITE, 0x230a, 0x10 },
+{ "linux/firewire-cdev.h", "FW_CDEV_IOC_STOP_ISO", _IOC_WRITE, 0x230b, 0x04 },
+{ "linux/fs.h", "BLKALIGNOFF", _IOC_NONE, 0x127a, 0x00 },
+{ "linux/fs.h", "BLKBSZGET", _IOC_READ, 0x1270, 0x08 },
+{ "linux/fs.h", "BLKBSZSET", _IOC_WRITE, 0x1271, 0x08 },
+{ "linux/fs.h", "BLKDISCARD", _IOC_NONE, 0x1277, 0x00 },
+{ "linux/fs.h", "BLKDISCARDZEROES", _IOC_NONE, 0x127c, 0x00 },
+{ "linux/fs.h", "BLKFLSBUF", _IOC_NONE, 0x1261, 0x00 },
+{ "linux/fs.h", "BLKFRAGET", _IOC_NONE, 0x1265, 0x00 },
+{ "linux/fs.h", "BLKFRASET", _IOC_NONE, 0x1264, 0x00 },
+{ "linux/fs.h", "BLKGETSIZE", _IOC_NONE, 0x1260, 0x00 },
+{ "linux/fs.h", "BLKGETSIZE64", _IOC_READ, 0x1272, 0x08 },
+{ "linux/fs.h", "BLKIOMIN", _IOC_NONE, 0x1278, 0x00 },
+{ "linux/fs.h", "BLKIOOPT", _IOC_NONE, 0x1279, 0x00 },
+{ "linux/fs.h", "BLKPBSZGET", _IOC_NONE, 0x127b, 0x00 },
+{ "linux/fs.h", "BLKRAGET", _IOC_NONE, 0x1263, 0x00 },
+{ "linux/fs.h", "BLKRASET", _IOC_NONE, 0x1262, 0x00 },
+{ "linux/fs.h", "BLKROGET", _IOC_NONE, 0x125e, 0x00 },
+{ "linux/fs.h", "BLKROSET", _IOC_NONE, 0x125d, 0x00 },
+{ "linux/fs.h", "BLKROTATIONAL", _IOC_NONE, 0x127e, 0x00 },
+{ "linux/fs.h", "BLKRRPART", _IOC_NONE, 0x125f, 0x00 },
+{ "linux/fs.h", "BLKSECDISCARD", _IOC_NONE, 0x127d, 0x00 },
+{ "linux/fs.h", "BLKSECTGET", _IOC_NONE, 0x1267, 0x00 },
+{ "linux/fs.h", "BLKSECTSET", _IOC_NONE, 0x1266, 0x00 },
+{ "linux/fs.h", "BLKSSZGET", _IOC_NONE, 0x1268, 0x00 },
+{ "linux/fs.h", "BLKTRACESETUP", _IOC_READ|_IOC_WRITE, 0x1273, 0x48 },
+{ "linux/fs.h", "BLKTRACESTART", _IOC_NONE, 0x1274, 0x00 },
+{ "linux/fs.h", "BLKTRACESTOP", _IOC_NONE, 0x1275, 0x00 },
+{ "linux/fs.h", "BLKTRACETEARDOWN", _IOC_NONE, 0x1276, 0x00 },
+{ "linux/fs.h", "BLKZEROOUT", _IOC_NONE, 0x127f, 0x00 },
+{ "linux/fs.h", "FIBMAP", _IOC_NONE, 0x0001, 0x00 },
+{ "linux/fs.h", "FIFREEZE", _IOC_READ|_IOC_WRITE, 0x5877, 0x04 },
+{ "linux/fs.h", "FIGETBSZ", _IOC_NONE, 0x0002, 0x00 },
+{ "linux/fs.h", "FITHAW", _IOC_READ|_IOC_WRITE, 0x5878, 0x04 },
+{ "linux/fs.h", "FITRIM", _IOC_READ|_IOC_WRITE, 0x5879, 0x18 },
+{ "linux/fs.h", "FS_IOC32_GETFLAGS", _IOC_READ, 0x6601, 0x04 },
+{ "linux/fs.h", "FS_IOC32_GETVERSION", _IOC_READ, 0x7601, 0x04 },
+{ "linux/fs.h", "FS_IOC32_SETFLAGS", _IOC_WRITE, 0x6602, 0x04 },
+{ "linux/fs.h", "FS_IOC32_SETVERSION", _IOC_WRITE, 0x7602, 0x04 },
+{ "linux/fs.h", "FS_IOC_FIEMAP", _IOC_READ|_IOC_WRITE, 0x660b, 0x20 },
+{ "linux/fs.h", "FS_IOC_GETFLAGS", _IOC_READ, 0x6601, 0x08 },
+{ "linux/fs.h", "FS_IOC_GETVERSION", _IOC_READ, 0x7601, 0x08 },
+{ "linux/fs.h", "FS_IOC_SETFLAGS", _IOC_WRITE, 0x6602, 0x08 },
+{ "linux/fs.h", "FS_IOC_SETVERSION", _IOC_WRITE, 0x7602, 0x08 },
+{ "linux/fsl-diu-fb.h", "MFB_GET_ALPHA", _IOC_READ, 0x4d00, 0x01 },
+{ "linux/fsl-diu-fb.h", "MFB_GET_AOID", _IOC_READ, 0x4d04, 0x08 },
+{ "linux/fsl-diu-fb.h", "MFB_GET_GAMMA", _IOC_READ, 0x4d01, 0x01 },
+{ "linux/fsl-diu-fb.h", "MFB_GET_PIXFMT", _IOC_READ, 0x4d08, 0x04 },
+{ "linux/fsl-diu-fb.h", "MFB_SET_ALPHA", _IOC_WRITE, 0x4d00, 0x01 },
+{ "linux/fsl-diu-fb.h", "MFB_SET_AOID", _IOC_WRITE, 0x4d04, 0x08 },
+{ "linux/fsl-diu-fb.h", "MFB_SET_BRIGHTNESS", _IOC_WRITE, 0x4d03, 0x01 },
+{ "linux/fsl-diu-fb.h", "MFB_SET_CHROMA_KEY", _IOC_WRITE, 0x4d01, 0x0c },
+{ "linux/fsl-diu-fb.h", "MFB_SET_GAMMA", _IOC_WRITE, 0x4d01, 0x01 },
+{ "linux/fsl-diu-fb.h", "MFB_SET_PIXFMT", _IOC_WRITE, 0x4d08, 0x04 },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_DOORBELL", _IOC_READ|_IOC_WRITE, 0xaf06, 0x08 },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_GETPROP", _IOC_READ|_IOC_WRITE, 0xaf07, 0x28 },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_MEMCPY", _IOC_READ|_IOC_WRITE, 0xaf05, 0x28 },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_PARTITION_GET_STATUS", _IOC_READ|_IOC_WRITE, 0xaf02, 0x0c },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_PARTITION_RESTART", _IOC_READ|_IOC_WRITE, 0xaf01, 0x08 },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_PARTITION_START", _IOC_READ|_IOC_WRITE, 0xaf03, 0x10 },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_PARTITION_STOP", _IOC_READ|_IOC_WRITE, 0xaf04, 0x08 },
+{ "linux/fsl_hypervisor.h", "FSL_HV_IOCTL_SETPROP", _IOC_READ|_IOC_WRITE, 0xaf08, 0x28 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_EXECUTE_DDCB", _IOC_READ|_IOC_WRITE, 0xa532, 0xe8 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_EXECUTE_RAW_DDCB", _IOC_READ|_IOC_WRITE, 0xa533, 0xe8 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_GET_CARD_STATE", _IOC_READ, 0xa524, 0x04 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_PIN_MEM", _IOC_READ|_IOC_WRITE, 0xa528, 0x20 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_READ_REG16", _IOC_READ, 0xa522, 0x10 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_READ_REG32", _IOC_READ, 0xa520, 0x10 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_READ_REG64", _IOC_READ, 0xa51e, 0x10 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_SLU_READ", _IOC_READ|_IOC_WRITE, 0xa551, 0x38 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_SLU_UPDATE", _IOC_READ|_IOC_WRITE, 0xa550, 0x38 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_UNPIN_MEM", _IOC_READ|_IOC_WRITE, 0xa529, 0x20 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_WRITE_REG16", _IOC_WRITE, 0xa523, 0x10 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_WRITE_REG32", _IOC_WRITE, 0xa521, 0x10 },
+{ "linux/genwqe/genwqe_card.h", "GENWQE_WRITE_REG64", _IOC_WRITE, 0xa51f, 0x10 },
+{ "linux/gigaset_dev.h", "GIGASET_BRKCHARS", _IOC_WRITE, 0x4702, 0x06 },
+{ "linux/gigaset_dev.h", "GIGASET_CONFIG", _IOC_READ|_IOC_WRITE, 0x4701, 0x04 },
+{ "linux/gigaset_dev.h", "GIGASET_REDIR", _IOC_READ|_IOC_WRITE, 0x4700, 0x04 },
+{ "linux/gigaset_dev.h", "GIGASET_VERSION", _IOC_READ|_IOC_WRITE, 0x4703, 0x10 },
+{ "linux/gsmmux.h", "GSMIOC_DISABLE_NET", _IOC_NONE, 0x4703, 0x00 },
+{ "linux/gsmmux.h", "GSMIOC_ENABLE_NET", _IOC_WRITE, 0x4702, 0x34 },
+{ "linux/gsmmux.h", "GSMIOC_GETCONF", _IOC_READ, 0x4700, 0x4c },
+{ "linux/gsmmux.h", "GSMIOC_SETCONF", _IOC_WRITE, 0x4701, 0x4c },
+{ "linux/hdreg.h", "HDIO_DRIVE_CMD", 0, 0x031f, 0 },
+{ "linux/hdreg.h", "HDIO_DRIVE_RESET", 0, 0x031c, 0 },
+{ "linux/hdreg.h", "HDIO_DRIVE_TASK", 0, 0x031e, 0 },
+{ "linux/hdreg.h", "HDIO_DRIVE_TASKFILE", 0, 0x031d, 0 },
+{ "linux/hdreg.h", "HDIO_GETGEO", 0, 0x0301, 0 },
+{ "linux/hdreg.h", "HDIO_GET_32BIT", 0, 0x0309, 0 },
+{ "linux/hdreg.h", "HDIO_GET_ACOUSTIC", 0, 0x030f, 0 },
+{ "linux/hdreg.h", "HDIO_GET_ADDRESS", 0, 0x0310, 0 },
+{ "linux/hdreg.h", "HDIO_GET_BUSSTATE", 0, 0x031a, 0 },
+{ "linux/hdreg.h", "HDIO_GET_DMA", 0, 0x030b, 0 },
+{ "linux/hdreg.h", "HDIO_GET_IDENTITY", 0, 0x030d, 0 },
+{ "linux/hdreg.h", "HDIO_GET_KEEPSETTINGS", 0, 0x0308, 0 },
+{ "linux/hdreg.h", "HDIO_GET_MULTCOUNT", 0, 0x0304, 0 },
+{ "linux/hdreg.h", "HDIO_GET_NICE", 0, 0x030c, 0 },
+{ "linux/hdreg.h", "HDIO_GET_NOWERR", 0, 0x030a, 0 },
+{ "linux/hdreg.h", "HDIO_GET_QDMA", 0, 0x0305, 0 },
+{ "linux/hdreg.h", "HDIO_GET_UNMASKINTR", 0, 0x0302, 0 },
+{ "linux/hdreg.h", "HDIO_GET_WCACHE", 0, 0x030e, 0 },
+{ "linux/hdreg.h", "HDIO_OBSOLETE_IDENTITY", 0, 0x0307, 0 },
+{ "linux/hdreg.h", "HDIO_SCAN_HWIF", 0, 0x0328, 0 },
+{ "linux/hdreg.h", "HDIO_SET_32BIT", 0, 0x0324, 0 },
+{ "linux/hdreg.h", "HDIO_SET_ACOUSTIC", 0, 0x032c, 0 },
+{ "linux/hdreg.h", "HDIO_SET_ADDRESS", 0, 0x032f, 0 },
+{ "linux/hdreg.h", "HDIO_SET_BUSSTATE", 0, 0x032d, 0 },
+{ "linux/hdreg.h", "HDIO_SET_DMA", 0, 0x0326, 0 },
+{ "linux/hdreg.h", "HDIO_SET_KEEPSETTINGS", 0, 0x0323, 0 },
+{ "linux/hdreg.h", "HDIO_SET_MULTCOUNT", 0, 0x0321, 0 },
+{ "linux/hdreg.h", "HDIO_SET_NICE", 0, 0x0329, 0 },
+{ "linux/hdreg.h", "HDIO_SET_NOWERR", 0, 0x0325, 0 },
+{ "linux/hdreg.h", "HDIO_SET_PIO_MODE", 0, 0x0327, 0 },
+{ "linux/hdreg.h", "HDIO_SET_QDMA", 0, 0x032e, 0 },
+{ "linux/hdreg.h", "HDIO_SET_UNMASKINTR", 0, 0x0322, 0 },
+{ "linux/hdreg.h", "HDIO_SET_WCACHE", 0, 0x032b, 0 },
+{ "linux/hdreg.h", "HDIO_SET_XFER", 0, 0x0306, 0 },
+{ "linux/hdreg.h", "HDIO_TRISTATE_HWIF", 0, 0x031b, 0 },
+{ "linux/hdreg.h", "HDIO_UNREGISTER_HWIF", 0, 0x032a, 0 },
+{ "linux/hid-roccat.h", "ROCCATIOCGREPSIZE", _IOC_READ, 0x48f1, 0x04 },
+{ "linux/hiddev.h", "HIDIOCAPPLICATION", _IOC_NONE, 0x4802, 0x00 },
+{ "linux/hiddev.h", "HIDIOCGCOLLECTIONINDEX", _IOC_WRITE, 0x4810, 0x18 },
+{ "linux/hiddev.h", "HIDIOCGCOLLECTIONINFO", _IOC_READ|_IOC_WRITE, 0x4811, 0x10 },
+{ "linux/hiddev.h", "HIDIOCGDEVINFO", _IOC_READ, 0x4803, 0x1c },
+{ "linux/hiddev.h", "HIDIOCGFIELDINFO", _IOC_READ|_IOC_WRITE, 0x480a, 0x38 },
+{ "linux/hiddev.h", "HIDIOCGFLAG", _IOC_READ, 0x480e, 0x04 },
+{ "linux/hiddev.h", "HIDIOCGREPORT", _IOC_WRITE, 0x4807, 0x0c },
+{ "linux/hiddev.h", "HIDIOCGREPORTINFO", _IOC_READ|_IOC_WRITE, 0x4809, 0x0c },
+{ "linux/hiddev.h", "HIDIOCGSTRING", _IOC_READ, 0x4804, 0x104 },
+{ "linux/hiddev.h", "HIDIOCGUCODE", _IOC_READ|_IOC_WRITE, 0x480d, 0x18 },
+{ "linux/hiddev.h", "HIDIOCGUSAGE", _IOC_READ|_IOC_WRITE, 0x480b, 0x18 },
+{ "linux/hiddev.h", "HIDIOCGUSAGES", _IOC_READ|_IOC_WRITE, 0x4813, 0x101c },
+{ "linux/hiddev.h", "HIDIOCGVERSION", _IOC_READ, 0x4801, 0x04 },
+{ "linux/hiddev.h", "HIDIOCINITREPORT", _IOC_NONE, 0x4805, 0x00 },
+{ "linux/hiddev.h", "HIDIOCSFLAG", _IOC_WRITE, 0x480f, 0x04 },
+{ "linux/hiddev.h", "HIDIOCSREPORT", _IOC_WRITE, 0x4808, 0x0c },
+{ "linux/hiddev.h", "HIDIOCSUSAGE", _IOC_WRITE, 0x480c, 0x18 },
+{ "linux/hiddev.h", "HIDIOCSUSAGES", _IOC_WRITE, 0x4814, 0x101c },
+{ "linux/hidraw.h", "HIDIOCGRAWINFO", _IOC_READ, 0x4803, 0x08 },
+{ "linux/hidraw.h", "HIDIOCGRDESC", _IOC_READ, 0x4802, 0x1004 },
+{ "linux/hidraw.h", "HIDIOCGRDESCSIZE", _IOC_READ, 0x4801, 0x04 },
+{ "linux/hpet.h", "HPET_DPI", _IOC_NONE, 0x6805, 0x00 },
+{ "linux/hpet.h", "HPET_EPI", _IOC_NONE, 0x6804, 0x00 },
+{ "linux/hpet.h", "HPET_IE_OFF", _IOC_NONE, 0x6802, 0x00 },
+{ "linux/hpet.h", "HPET_IE_ON", _IOC_NONE, 0x6801, 0x00 },
+{ "linux/hpet.h", "HPET_INFO", _IOC_READ, 0x6803, 0x18 },
+{ "linux/hpet.h", "HPET_IRQFREQ", _IOC_WRITE, 0x6806, 0x08 },
+{ "linux/hsi/cs-protocol.h", "CS_CONFIG_BUFS", _IOC_WRITE, 0x431f, 0x20 },
+{ "linux/hsi/cs-protocol.h", "CS_GET_IF_VERSION", _IOC_READ, 0x431e, 0x04 },
+{ "linux/hsi/cs-protocol.h", "CS_GET_STATE", _IOC_READ, 0x4315, 0x04 },
+{ "linux/hsi/cs-protocol.h", "CS_SET_WAKELINE", _IOC_WRITE, 0x4317, 0x04 },
+{ "linux/hsi/hsi_char.h", "HSC_GET_RX", _IOC_WRITE, 0x6b14, 0x0c },
+{ "linux/hsi/hsi_char.h", "HSC_GET_TX", _IOC_WRITE, 0x6b16, 0x10 },
+{ "linux/hsi/hsi_char.h", "HSC_RESET", _IOC_NONE, 0x6b10, 0x00 },
+{ "linux/hsi/hsi_char.h", "HSC_SEND_BREAK", _IOC_NONE, 0x6b12, 0x00 },
+{ "linux/hsi/hsi_char.h", "HSC_SET_PM", _IOC_NONE, 0x6b11, 0x00 },
+{ "linux/hsi/hsi_char.h", "HSC_SET_RX", _IOC_WRITE, 0x6b13, 0x0c },
+{ "linux/hsi/hsi_char.h", "HSC_SET_TX", _IOC_WRITE, 0x6b15, 0x10 },
+{ "linux/i2o-dev.h", "I2OEVTGET", _IOC_READ, 0x690b, 0x68 },
+{ "linux/i2o-dev.h", "I2OEVTREG", _IOC_WRITE, 0x690a, 0x0c },
+{ "linux/i2o-dev.h", "I2OGETIOPS", _IOC_READ, 0x6900, 0x20 },
+{ "linux/i2o-dev.h", "I2OHRTGET", _IOC_READ|_IOC_WRITE, 0x6901, 0x18 },
+{ "linux/i2o-dev.h", "I2OHTML", _IOC_READ|_IOC_WRITE, 0x6909, 0x30 },
+{ "linux/i2o-dev.h", "I2OLCTGET", _IOC_READ|_IOC_WRITE, 0x6902, 0x18 },
+{ "linux/i2o-dev.h", "I2OPARMGET", _IOC_READ|_IOC_WRITE, 0x6904, 0x28 },
+{ "linux/i2o-dev.h", "I2OPARMSET", _IOC_READ|_IOC_WRITE, 0x6903, 0x28 },
+{ "linux/i2o-dev.h", "I2OPASSTHRU", _IOC_READ, 0x690c, 0x10 },
+{ "linux/i2o-dev.h", "I2OPASSTHRU32", _IOC_READ, 0x690c, 0x08 },
+{ "linux/i2o-dev.h", "I2OSWDEL", _IOC_READ|_IOC_WRITE, 0x6907, 0x30 },
+{ "linux/i2o-dev.h", "I2OSWDL", _IOC_READ|_IOC_WRITE, 0x6905, 0x30 },
+{ "linux/i2o-dev.h", "I2OSWUL", _IOC_READ|_IOC_WRITE, 0x6906, 0x30 },
+{ "linux/i2o-dev.h", "I2OVALIDATE", _IOC_READ, 0x6908, 0x04 },
+{ "linux/i8k.h", "I8K_BIOS_VERSION", _IOC_READ, 0x6980, 0x04 },
+{ "linux/i8k.h", "I8K_FN_STATUS", _IOC_READ, 0x6983, 0x08 },
+{ "linux/i8k.h", "I8K_GET_FAN", _IOC_READ|_IOC_WRITE, 0x6986, 0x08 },
+{ "linux/i8k.h", "I8K_GET_SPEED", _IOC_READ|_IOC_WRITE, 0x6985, 0x08 },
+{ "linux/i8k.h", "I8K_GET_TEMP", _IOC_READ, 0x6984, 0x08 },
+{ "linux/i8k.h", "I8K_MACHINE_ID", _IOC_READ, 0x6981, 0x04 },
+{ "linux/i8k.h", "I8K_POWER_STATUS", _IOC_READ, 0x6982, 0x08 },
+{ "linux/i8k.h", "I8K_SET_FAN", _IOC_READ|_IOC_WRITE, 0x6987, 0x08 },
+{ "linux/if_pppox.h", "PPPOEIOCDFWD", _IOC_NONE, 0xb101, 0x00 },
+{ "linux/if_pppox.h", "PPPOEIOCSFWD", _IOC_WRITE, 0xb100, 0x08 },
+{ "linux/if_tun.h", "TUNATTACHFILTER", _IOC_WRITE, 0x54d5, 0x10 },
+{ "linux/if_tun.h", "TUNDETACHFILTER", _IOC_WRITE, 0x54d6, 0x10 },
+{ "linux/if_tun.h", "TUNGETFEATURES", _IOC_READ, 0x54cf, 0x04 },
+{ "linux/if_tun.h", "TUNGETFILTER", _IOC_READ, 0x54db, 0x10 },
+{ "linux/if_tun.h", "TUNGETIFF", _IOC_READ, 0x54d2, 0x04 },
+{ "linux/if_tun.h", "TUNGETSNDBUF", _IOC_READ, 0x54d3, 0x04 },
+{ "linux/if_tun.h", "TUNGETVNETHDRSZ", _IOC_READ, 0x54d7, 0x04 },
+{ "linux/if_tun.h", "TUNGETVNETLE", _IOC_READ, 0x54dd, 0x04 },
+{ "linux/if_tun.h", "TUNSETDEBUG", _IOC_WRITE, 0x54c9, 0x04 },
+{ "linux/if_tun.h", "TUNSETGROUP", _IOC_WRITE, 0x54ce, 0x04 },
+{ "linux/if_tun.h", "TUNSETIFF", _IOC_WRITE, 0x54ca, 0x04 },
+{ "linux/if_tun.h", "TUNSETIFINDEX", _IOC_WRITE, 0x54da, 0x04 },
+{ "linux/if_tun.h", "TUNSETLINK", _IOC_WRITE, 0x54cd, 0x04 },
+{ "linux/if_tun.h", "TUNSETNOCSUM", _IOC_WRITE, 0x54c8, 0x04 },
+{ "linux/if_tun.h", "TUNSETOFFLOAD", _IOC_WRITE, 0x54d0, 0x04 },
+{ "linux/if_tun.h", "TUNSETOWNER", _IOC_WRITE, 0x54cc, 0x04 },
+{ "linux/if_tun.h", "TUNSETPERSIST", _IOC_WRITE, 0x54cb, 0x04 },
+{ "linux/if_tun.h", "TUNSETQUEUE", _IOC_WRITE, 0x54d9, 0x04 },
+{ "linux/if_tun.h", "TUNSETSNDBUF", _IOC_WRITE, 0x54d4, 0x04 },
+{ "linux/if_tun.h", "TUNSETTXFILTER", _IOC_WRITE, 0x54d1, 0x04 },
+{ "linux/if_tun.h", "TUNSETVNETHDRSZ", _IOC_WRITE, 0x54d8, 0x04 },
+{ "linux/if_tun.h", "TUNSETVNETLE", _IOC_WRITE, 0x54dc, 0x04 },
+{ "linux/iio/events.h", "IIO_GET_EVENT_FD_IOCTL", _IOC_READ, 0x6990, 0x04 },
+{ "linux/input.h", "EVIOCGEFFECTS", _IOC_READ, 0x4584, 0x04 },
+{ "linux/input.h", "EVIOCGID", _IOC_READ, 0x4502, 0x08 },
+{ "linux/input.h", "EVIOCGKEYCODE", _IOC_READ, 0x4504, 0x08 },
+{ "linux/input.h", "EVIOCGKEYCODE_V2", _IOC_READ, 0x4504, 0x28 },
+{ "linux/input.h", "EVIOCGRAB", _IOC_WRITE, 0x4590, 0x04 },
+{ "linux/input.h", "EVIOCGREP", _IOC_READ, 0x4503, 0x08 },
+{ "linux/input.h", "EVIOCGVERSION", _IOC_READ, 0x4501, 0x04 },
+{ "linux/input.h", "EVIOCREVOKE", _IOC_WRITE, 0x4591, 0x04 },
+{ "linux/input.h", "EVIOCRMFF", _IOC_WRITE, 0x4581, 0x04 },
+{ "linux/input.h", "EVIOCSCLOCKID", _IOC_WRITE, 0x45a0, 0x04 },
+{ "linux/input.h", "EVIOCSFF", _IOC_WRITE, 0x4580, 0x30 },
+{ "linux/input.h", "EVIOCSKEYCODE", _IOC_WRITE, 0x4504, 0x08 },
+{ "linux/input.h", "EVIOCSKEYCODE_V2", _IOC_WRITE, 0x4504, 0x28 },
+{ "linux/input.h", "EVIOCSREP", _IOC_WRITE, 0x4503, 0x08 },
+{ "linux/ipmi.h", "IPMICTL_GET_MAINTENANCE_MODE_CMD", _IOC_READ, 0x691e, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_GET_MY_ADDRESS_CMD", _IOC_READ, 0x6912, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_GET_MY_CHANNEL_ADDRESS_CMD", _IOC_READ, 0x6919, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_GET_MY_CHANNEL_LUN_CMD", _IOC_READ, 0x691b, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_GET_MY_LUN_CMD", _IOC_READ, 0x6914, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_GET_TIMING_PARMS_CMD", _IOC_READ, 0x6917, 0x08 },
+{ "linux/ipmi.h", "IPMICTL_RECEIVE_MSG", _IOC_READ|_IOC_WRITE, 0x690c, 0x30 },
+{ "linux/ipmi.h", "IPMICTL_RECEIVE_MSG_TRUNC", _IOC_READ|_IOC_WRITE, 0x690b, 0x30 },
+{ "linux/ipmi.h", "IPMICTL_REGISTER_FOR_CMD", _IOC_READ, 0x690e, 0x02 },
+{ "linux/ipmi.h", "IPMICTL_REGISTER_FOR_CMD_CHANS", _IOC_READ, 0x691c, 0x0c },
+{ "linux/ipmi.h", "IPMICTL_SEND_COMMAND", _IOC_READ, 0x690d, 0x28 },
+{ "linux/ipmi.h", "IPMICTL_SEND_COMMAND_SETTIME", _IOC_READ, 0x6915, 0x30 },
+{ "linux/ipmi.h", "IPMICTL_SET_GETS_EVENTS_CMD", _IOC_READ, 0x6910, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_SET_MAINTENANCE_MODE_CMD", _IOC_WRITE, 0x691f, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_SET_MY_ADDRESS_CMD", _IOC_READ, 0x6911, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD", _IOC_READ, 0x6918, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_SET_MY_CHANNEL_LUN_CMD", _IOC_READ, 0x691a, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_SET_MY_LUN_CMD", _IOC_READ, 0x6913, 0x04 },
+{ "linux/ipmi.h", "IPMICTL_SET_TIMING_PARMS_CMD", _IOC_READ, 0x6916, 0x08 },
+{ "linux/ipmi.h", "IPMICTL_UNREGISTER_FOR_CMD", _IOC_READ, 0x690f, 0x02 },
+{ "linux/ipmi.h", "IPMICTL_UNREGISTER_FOR_CMD_CHANS", _IOC_READ, 0x691d, 0x0c },
+{ "linux/isdn.h", "IIOCDBGVAR", _IOC_NONE, 0x497f, 0x00 },
+{ "linux/isdn.h", "IIOCDRVCTL", _IOC_NONE, 0x4980, 0x00 },
+{ "linux/isdn.h", "IIOCGETCPS", _IOC_NONE, 0x4915, 0x00 },
+{ "linux/isdn.h", "IIOCGETDVR", _IOC_NONE, 0x4916, 0x00 },
+{ "linux/isdn.h", "IIOCGETMAP", _IOC_NONE, 0x4911, 0x00 },
+{ "linux/isdn.h", "IIOCGETPRF", _IOC_NONE, 0x490f, 0x00 },
+{ "linux/isdn.h", "IIOCGETSET", _IOC_NONE, 0x4908, 0x00 },
+{ "linux/isdn.h", "IIOCNETAIF", _IOC_NONE, 0x4901, 0x00 },
+{ "linux/isdn.h", "IIOCNETALN", _IOC_NONE, 0x4920, 0x00 },
+{ "linux/isdn.h", "IIOCNETANM", _IOC_NONE, 0x4905, 0x00 },
+{ "linux/isdn.h", "IIOCNETASL", _IOC_NONE, 0x4913, 0x00 },
+{ "linux/isdn.h", "IIOCNETDIF", _IOC_NONE, 0x4902, 0x00 },
+{ "linux/isdn.h", "IIOCNETDIL", _IOC_NONE, 0x4914, 0x00 },
+{ "linux/isdn.h", "IIOCNETDLN", _IOC_NONE, 0x4921, 0x00 },
+{ "linux/isdn.h", "IIOCNETDNM", _IOC_NONE, 0x4906, 0x00 },
+{ "linux/isdn.h", "IIOCNETDWRSET", _IOC_NONE, 0x4918, 0x00 },
+{ "linux/isdn.h", "IIOCNETGCF", _IOC_NONE, 0x4904, 0x00 },
+{ "linux/isdn.h", "IIOCNETGNM", _IOC_NONE, 0x4907, 0x00 },
+{ "linux/isdn.h", "IIOCNETGPN", _IOC_NONE, 0x4922, 0x00 },
+{ "linux/isdn.h", "IIOCNETHUP", _IOC_NONE, 0x490b, 0x00 },
+{ "linux/isdn.h", "IIOCNETLCR", _IOC_NONE, 0x4917, 0x00 },
+{ "linux/isdn.h", "IIOCNETSCF", _IOC_NONE, 0x4903, 0x00 },
+{ "linux/isdn.h", "IIOCSETBRJ", _IOC_NONE, 0x490d, 0x00 },
+{ "linux/isdn.h", "IIOCSETGST", _IOC_NONE, 0x490c, 0x00 },
+{ "linux/isdn.h", "IIOCSETMAP", _IOC_NONE, 0x4912, 0x00 },
+{ "linux/isdn.h", "IIOCSETPRF", _IOC_NONE, 0x4910, 0x00 },
+{ "linux/isdn.h", "IIOCSETSET", _IOC_NONE, 0x4909, 0x00 },
+{ "linux/isdn.h", "IIOCSETVER", _IOC_NONE, 0x490a, 0x00 },
+{ "linux/isdn.h", "IIOCSIGPRF", _IOC_NONE, 0x490e, 0x00 },
+{ "linux/isdn_ppp.h", "PPPIOCBUNDLE", _IOC_WRITE, 0x7481, 0x04 },
+{ "linux/isdn_ppp.h", "PPPIOCGCALLINFO", _IOC_READ|_IOC_WRITE, 0x7480, 0x88 },
+{ "linux/isdn_ppp.h", "PPPIOCGCOMPRESSORS", _IOC_READ, 0x7486, 0x40 },
+{ "linux/isdn_ppp.h", "PPPIOCGIFNAME", _IOC_READ, 0x7488, 0x10 },
+{ "linux/isdn_ppp.h", "PPPIOCGMPFLAGS", _IOC_READ, 0x7482, 0x04 },
+{ "linux/isdn_ppp.h", "PPPIOCSCOMPRESSOR", _IOC_WRITE, 0x7487, 0x04 },
+{ "linux/isdn_ppp.h", "PPPIOCSMPFLAGS", _IOC_WRITE, 0x7483, 0x04 },
+{ "linux/isdn_ppp.h", "PPPIOCSMPMRU", _IOC_WRITE, 0x7485, 0x04 },
+{ "linux/isdn_ppp.h", "PPPIOCSMPMTU", _IOC_WRITE, 0x7484, 0x04 },
+{ "linux/ivtv.h", "IVTV_IOC_DMA_FRAME", _IOC_WRITE, 0x56c0, 0x40 },
+{ "linux/ivtv.h", "IVTV_IOC_PASSTHROUGH_MODE", _IOC_WRITE, 0x56c1, 0x04 },
+{ "linux/ivtvfb.h", "IVTVFB_IOC_DMA_FRAME", _IOC_WRITE, 0x56c0, 0x18 },
+{ "linux/ixjuser.h", "IXJCTL_AEC_GET_LEVEL", _IOC_NONE, 0x71cd, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_AEC_START", _IOC_WRITE, 0x71cb, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_AEC_STOP", _IOC_NONE, 0x71cc, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_CARDTYPE", _IOC_READ, 0x71c1, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_CID", _IOC_READ, 0x71d4, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_CIDCW", _IOC_WRITE, 0x71d9, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_DAA_AGAIN", _IOC_WRITE, 0x71d2, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_DAA_COEFF_SET", _IOC_WRITE, 0x71d0, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_DRYBUFFER_CLEAR", _IOC_NONE, 0x71e7, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_DRYBUFFER_READ", _IOC_READ, 0x71e6, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_DSP_IDLE", _IOC_NONE, 0x71c5, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_DSP_RESET", _IOC_NONE, 0x71c0, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_DSP_TYPE", _IOC_READ, 0x71c3, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_DSP_VERSION", _IOC_READ, 0x71c4, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_DTMF_PRESCALE", _IOC_WRITE, 0x71e8, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_FILTER_CADENCE", _IOC_WRITE, 0x71d6, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_FRAMES_READ", _IOC_READ, 0x71e2, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_FRAMES_WRITTEN", _IOC_READ, 0x71e3, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_GET_FILTER_HIST", _IOC_WRITE, 0x71c8, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_HZ", _IOC_WRITE, 0x71e0, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_INIT_TONE", _IOC_WRITE, 0x71c9, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_INTERCOM_START", _IOC_WRITE, 0x71fd, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_INTERCOM_STOP", _IOC_WRITE, 0x71fe, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_MIXER", _IOC_WRITE, 0x71cf, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_PLAY_CID", _IOC_NONE, 0x71d7, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_PORT", _IOC_WRITE, 0x71d1, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_POTS_PSTN", _IOC_WRITE, 0x71d5, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_PSTN_LINETEST", _IOC_NONE, 0x71d3, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_RATE", _IOC_WRITE, 0x71e1, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_READ_WAIT", _IOC_READ, 0x71e4, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_SC_RXG", _IOC_WRITE, 0x71ea, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_SC_TXG", _IOC_WRITE, 0x71eb, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_SERIAL", _IOC_READ, 0x71c2, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_SET_FILTER", _IOC_WRITE, 0x71c7, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_SET_FILTER_RAW", _IOC_WRITE, 0x71dd, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_SET_LED", _IOC_WRITE, 0x71ce, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_SIGCTL", _IOC_WRITE, 0x71e9, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_TESTRAM", _IOC_NONE, 0x71c6, 0x00 },
+{ "linux/ixjuser.h", "IXJCTL_TONE_CADENCE", _IOC_WRITE, 0x71ca, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_VERSION", _IOC_READ, 0x71da, 0x08 },
+{ "linux/ixjuser.h", "IXJCTL_VMWI", _IOC_READ, 0x71d8, 0x04 },
+{ "linux/ixjuser.h", "IXJCTL_WRITE_WAIT", _IOC_READ, 0x71e5, 0x08 },
+{ "linux/joystick.h", "JSIOCGAXES", _IOC_READ, 0x6a11, 0x01 },
+{ "linux/joystick.h", "JSIOCGAXMAP", _IOC_READ, 0x6a32, 0x40 },
+{ "linux/joystick.h", "JSIOCGBTNMAP", _IOC_READ, 0x6a34, 0x400 },
+{ "linux/joystick.h", "JSIOCGBUTTONS", _IOC_READ, 0x6a12, 0x01 },
+{ "linux/joystick.h", "JSIOCGCORR", _IOC_READ, 0x6a22, 0x24 },
+{ "linux/joystick.h", "JSIOCGVERSION", _IOC_READ, 0x6a01, 0x04 },
+{ "linux/joystick.h", "JSIOCSAXMAP", _IOC_WRITE, 0x6a31, 0x40 },
+{ "linux/joystick.h", "JSIOCSBTNMAP", _IOC_WRITE, 0x6a33, 0x400 },
+{ "linux/joystick.h", "JSIOCSCORR", _IOC_WRITE, 0x6a21, 0x24 },
+{ "linux/kd.h", "GIO_CMAP", 0, 0x4B70, 0 },
+{ "linux/kd.h", "GIO_FONT", 0, 0x4B60, 0 },
+{ "linux/kd.h", "GIO_FONTX", 0, 0x4B6B, 0 },
+{ "linux/kd.h", "GIO_SCRNMAP", 0, 0x4B40, 0 },
+{ "linux/kd.h", "GIO_UNIMAP", 0, 0x4B66, 0 },
+{ "linux/kd.h", "GIO_UNISCRNMAP", 0, 0x4B69, 0 },
+{ "linux/kd.h", "KDADDIO", 0, 0x4B34, 0 },
+{ "linux/kd.h", "KDDELIO", 0, 0x4B35, 0 },
+{ "linux/kd.h", "KDDISABIO", 0, 0x4B37, 0 },
+{ "linux/kd.h", "KDENABIO", 0, 0x4B36, 0 },
+{ "linux/kd.h", "KDFONTOP", 0, 0x4B72, 0 },
+{ "linux/kd.h", "KDGETKEYCODE", 0, 0x4B4C, 0 },
+{ "linux/kd.h", "KDGETLED", 0, 0x4B31, 0 },
+{ "linux/kd.h", "KDGETMODE", 0, 0x4B3B, 0 },
+{ "linux/kd.h", "KDGKBDIACR", 0, 0x4B4A, 0 },
+{ "linux/kd.h", "KDGKBDIACRUC", 0, 0x4BFA, 0 },
+{ "linux/kd.h", "KDGKBENT", 0, 0x4B46, 0 },
+{ "linux/kd.h", "KDGKBLED", 0, 0x4B64, 0 },
+{ "linux/kd.h", "KDGKBMETA", 0, 0x4B62, 0 },
+{ "linux/kd.h", "KDGKBMODE", 0, 0x4B44, 0 },
+{ "linux/kd.h", "KDGKBSENT", 0, 0x4B48, 0 },
+{ "linux/kd.h", "KDGKBTYPE", 0, 0x4B33, 0 },
+{ "linux/kd.h", "KDKBDREP", 0, 0x4B52, 0 },
+{ "linux/kd.h", "KDMAPDISP", 0, 0x4B3C, 0 },
+{ "linux/kd.h", "KDMKTONE", 0, 0x4B30, 0 },
+{ "linux/kd.h", "KDSETKEYCODE", 0, 0x4B4D, 0 },
+{ "linux/kd.h", "KDSETLED", 0, 0x4B32, 0 },
+{ "linux/kd.h", "KDSETMODE", 0, 0x4B3A, 0 },
+{ "linux/kd.h", "KDSIGACCEPT", 0, 0x4B4E, 0 },
+{ "linux/kd.h", "KDSKBDIACR", 0, 0x4B4B, 0 },
+{ "linux/kd.h", "KDSKBDIACRUC", 0, 0x4BFB, 0 },
+{ "linux/kd.h", "KDSKBENT", 0, 0x4B47, 0 },
+{ "linux/kd.h", "KDSKBLED", 0, 0x4B65, 0 },
+{ "linux/kd.h", "KDSKBMETA", 0, 0x4B63, 0 },
+{ "linux/kd.h", "KDSKBMODE", 0, 0x4B45, 0 },
+{ "linux/kd.h", "KDSKBSENT", 0, 0x4B49, 0 },
+{ "linux/kd.h", "KDUNMAPDISP", 0, 0x4B3D, 0 },
+{ "linux/kd.h", "KIOCSOUND", 0, 0x4B2F, 0 },
+{ "linux/kd.h", "PIO_CMAP", 0, 0x4B71, 0 },
+{ "linux/kd.h", "PIO_FONT", 0, 0x4B61, 0 },
+{ "linux/kd.h", "PIO_FONTRESET", 0, 0x4B6D, 0 },
+{ "linux/kd.h", "PIO_FONTX", 0, 0x4B6C, 0 },
+{ "linux/kd.h", "PIO_SCRNMAP", 0, 0x4B41, 0 },
+{ "linux/kd.h", "PIO_UNIMAP", 0, 0x4B67, 0 },
+{ "linux/kd.h", "PIO_UNIMAPCLR", 0, 0x4B68, 0 },
+{ "linux/kd.h", "PIO_UNISCRNMAP", 0, 0x4B6A, 0 },
+{ "linux/kfd_ioctl.h", "AMDKFD_IOC_CREATE_QUEUE", _IOC_READ|_IOC_WRITE, 0x4b02, 0x58 },
+{ "linux/kfd_ioctl.h", "AMDKFD_IOC_DESTROY_QUEUE", _IOC_READ|_IOC_WRITE, 0x4b03, 0x08 },
+{ "linux/kfd_ioctl.h", "AMDKFD_IOC_GET_CLOCK_COUNTERS", _IOC_READ|_IOC_WRITE, 0x4b05, 0x28 },
+{ "linux/kfd_ioctl.h", "AMDKFD_IOC_GET_PROCESS_APERTURES", _IOC_READ, 0x4b06, 0x190 },
+{ "linux/kfd_ioctl.h", "AMDKFD_IOC_GET_VERSION", _IOC_READ, 0x4b01, 0x08 },
+{ "linux/kfd_ioctl.h", "AMDKFD_IOC_SET_MEMORY_POLICY", _IOC_WRITE, 0x4b04, 0x20 },
+{ "linux/kfd_ioctl.h", "AMDKFD_IOC_UPDATE_QUEUE", _IOC_WRITE, 0x4b07, 0x18 },
+{ "linux/loop.h", "LOOP_CHANGE_FD", 0, 0x4C06, 0 },
+{ "linux/loop.h", "LOOP_CLR_FD", 0, 0x4C01, 0 },
+{ "linux/loop.h", "LOOP_CTL_ADD", 0, 0x4C80, 0 },
+{ "linux/loop.h", "LOOP_CTL_GET_FREE", 0, 0x4C82, 0 },
+{ "linux/loop.h", "LOOP_CTL_REMOVE", 0, 0x4C81, 0 },
+{ "linux/loop.h", "LOOP_GET_STATUS", 0, 0x4C03, 0 },
+{ "linux/loop.h", "LOOP_GET_STATUS64", 0, 0x4C05, 0 },
+{ "linux/loop.h", "LOOP_SET_CAPACITY", 0, 0x4C07, 0 },
+{ "linux/loop.h", "LOOP_SET_FD", 0, 0x4C00, 0 },
+{ "linux/loop.h", "LOOP_SET_STATUS", 0, 0x4C02, 0 },
+{ "linux/loop.h", "LOOP_SET_STATUS64", 0, 0x4C04, 0 },
+{ "linux/mISDNif.h", "IMADDTIMER", _IOC_READ, 0x4940, 0x04 },
+{ "linux/mISDNif.h", "IMCLEAR_L2", _IOC_READ, 0x4946, 0x04 },
+{ "linux/mISDNif.h", "IMCTRLREQ", _IOC_READ, 0x4945, 0x04 },
+{ "linux/mISDNif.h", "IMDELTIMER", _IOC_READ, 0x4941, 0x04 },
+{ "linux/mISDNif.h", "IMGETCOUNT", _IOC_READ, 0x4943, 0x04 },
+{ "linux/mISDNif.h", "IMGETDEVINFO", _IOC_READ, 0x4944, 0x04 },
+{ "linux/mISDNif.h", "IMGETVERSION", _IOC_READ, 0x4942, 0x04 },
+{ "linux/mISDNif.h", "IMHOLD_L1", _IOC_READ, 0x4948, 0x04 },
+{ "linux/mISDNif.h", "IMSETDEVNAME", _IOC_READ, 0x4947, 0x18 },
+{ "linux/matroxfb.h", "MATROXFB_GET_ALL_OUTPUTS", _IOC_READ, 0x6efb, 0x08 },
+{ "linux/matroxfb.h", "MATROXFB_GET_AVAILABLE_OUTPUTS", _IOC_READ, 0x6ef9, 0x08 },
+{ "linux/matroxfb.h", "MATROXFB_GET_OUTPUT_CONNECTION", _IOC_READ, 0x6ef8, 0x08 },
+{ "linux/matroxfb.h", "MATROXFB_GET_OUTPUT_MODE", _IOC_READ|_IOC_WRITE, 0x6efa, 0x08 },
+{ "linux/matroxfb.h", "MATROXFB_SET_OUTPUT_CONNECTION", _IOC_WRITE, 0x6ef8, 0x08 },
+{ "linux/matroxfb.h", "MATROXFB_SET_OUTPUT_MODE", _IOC_WRITE, 0x6efa, 0x08 },
+{ "linux/media.h", "MEDIA_IOC_DEVICE_INFO", _IOC_READ|_IOC_WRITE, 0x7c00, 0x100 },
+{ "linux/media.h", "MEDIA_IOC_ENUM_ENTITIES", _IOC_READ|_IOC_WRITE, 0x7c01, 0x100 },
+{ "linux/media.h", "MEDIA_IOC_ENUM_LINKS", _IOC_READ|_IOC_WRITE, 0x7c02, 0x28 },
+{ "linux/media.h", "MEDIA_IOC_SETUP_LINK", _IOC_READ|_IOC_WRITE, 0x7c03, 0x34 },
+{ "linux/mei.h", "IOCTL_MEI_CONNECT_CLIENT", _IOC_READ|_IOC_WRITE, 0x4801, 0x10 },
+{ "linux/meye.h", "MEYEIOC_G_PARAMS", _IOC_READ, 0x76c0, 0x06 },
+{ "linux/meye.h", "MEYEIOC_QBUF_CAPT", _IOC_WRITE, 0x76c2, 0x04 },
+{ "linux/meye.h", "MEYEIOC_STILLCAPT", _IOC_NONE, 0x76c4, 0x00 },
+{ "linux/meye.h", "MEYEIOC_STILLJCAPT", _IOC_READ, 0x76c5, 0x04 },
+{ "linux/meye.h", "MEYEIOC_SYNC", _IOC_READ|_IOC_WRITE, 0x76c3, 0x04 },
+{ "linux/meye.h", "MEYEIOC_S_PARAMS", _IOC_WRITE, 0x76c1, 0x06 },
+{ "linux/mic_ioctl.h", "MIC_VIRTIO_ADD_DEVICE", _IOC_READ|_IOC_WRITE, 0x7301, 0x08 },
+{ "linux/mic_ioctl.h", "MIC_VIRTIO_CONFIG_CHANGE", _IOC_READ|_IOC_WRITE, 0x7305, 0x08 },
+{ "linux/mic_ioctl.h", "MIC_VIRTIO_COPY_DESC", _IOC_READ|_IOC_WRITE, 0x7302, 0x08 },
+{ "linux/mmc/ioctl.h", "MMC_IOC_CMD", _IOC_READ|_IOC_WRITE, 0xb300, 0x48 },
+{ "linux/mmtimer.h", "MMTIMER_GETBITS", _IOC_NONE, 0x6d04, 0x00 },
+{ "linux/mmtimer.h", "MMTIMER_GETCOUNTER", _IOC_READ, 0x6d09, 0x08 },
+{ "linux/mmtimer.h", "MMTIMER_GETFREQ", _IOC_READ, 0x6d02, 0x08 },
+{ "linux/mmtimer.h", "MMTIMER_GETOFFSET", _IOC_NONE, 0x6d00, 0x00 },
+{ "linux/mmtimer.h", "MMTIMER_GETRES", _IOC_READ, 0x6d01, 0x08 },
+{ "linux/mmtimer.h", "MMTIMER_MMAPAVAIL", _IOC_NONE, 0x6d06, 0x00 },
+{ "linux/msdos_fs.h", "FAT_IOCTL_GET_ATTRIBUTES", _IOC_READ, 0x7210, 0x04 },
+{ "linux/msdos_fs.h", "FAT_IOCTL_GET_VOLUME_ID", _IOC_READ, 0x7213, 0x04 },
+{ "linux/msdos_fs.h", "FAT_IOCTL_SET_ATTRIBUTES", _IOC_WRITE, 0x7211, 0x04 },
+{ "linux/msdos_fs.h", "VFAT_IOCTL_READDIR_BOTH", _IOC_READ, 0x7201, 0x230 },
+{ "linux/msdos_fs.h", "VFAT_IOCTL_READDIR_SHORT", _IOC_READ, 0x7202, 0x230 },
+{ "linux/msm_mdp.h", "MSMFB_BLIT", _IOC_WRITE, 0x6d02, 0x04 },
+{ "linux/msm_mdp.h", "MSMFB_GRP_DISP", _IOC_WRITE, 0x6d01, 0x04 },
+{ "linux/mtio.h", "MTIOCGET", _IOC_READ, 0x6d02, 0x30 },
+{ "linux/mtio.h", "MTIOCPOS", _IOC_READ, 0x6d03, 0x08 },
+{ "linux/mtio.h", "MTIOCTOP", _IOC_WRITE, 0x6d01, 0x08 },
+{ "linux/nbd.h", "NBD_CLEAR_QUE", _IOC_NONE, 0xab05, 0x00 },
+{ "linux/nbd.h", "NBD_CLEAR_SOCK", _IOC_NONE, 0xab04, 0x00 },
+{ "linux/nbd.h", "NBD_DISCONNECT", _IOC_NONE, 0xab08, 0x00 },
+{ "linux/nbd.h", "NBD_DO_IT", _IOC_NONE, 0xab03, 0x00 },
+{ "linux/nbd.h", "NBD_PRINT_DEBUG", _IOC_NONE, 0xab06, 0x00 },
+{ "linux/nbd.h", "NBD_SET_BLKSIZE", _IOC_NONE, 0xab01, 0x00 },
+{ "linux/nbd.h", "NBD_SET_FLAGS", _IOC_NONE, 0xab0a, 0x00 },
+{ "linux/nbd.h", "NBD_SET_SIZE", _IOC_NONE, 0xab02, 0x00 },
+{ "linux/nbd.h", "NBD_SET_SIZE_BLOCKS", _IOC_NONE, 0xab07, 0x00 },
+{ "linux/nbd.h", "NBD_SET_SOCK", _IOC_NONE, 0xab00, 0x00 },
+{ "linux/nbd.h", "NBD_SET_TIMEOUT", _IOC_NONE, 0xab09, 0x00 },
+{ "linux/ncp_fs.h", "NCP_IOC_CONN_LOGGED_IN", _IOC_NONE, 0x6e03, 0x00 },
+{ "linux/ncp_fs.h", "NCP_IOC_GETCHARSETS", _IOC_READ|_IOC_WRITE, 0x6e0b, 0x2a },
+{ "linux/ncp_fs.h", "NCP_IOC_GETDENTRYTTL", _IOC_WRITE, 0x6e0c, 0x04 },
+{ "linux/ncp_fs.h", "NCP_IOC_GETMOUNTUID", _IOC_WRITE, 0x6e02, 0x04 },
+{ "linux/ncp_fs.h", "NCP_IOC_GETMOUNTUID2", _IOC_WRITE, 0x6e02, 0x08 },
+{ "linux/ncp_fs.h", "NCP_IOC_GETOBJECTNAME", _IOC_READ|_IOC_WRITE, 0x6e09, 0x18 },
+{ "linux/ncp_fs.h", "NCP_IOC_GETPRIVATEDATA", _IOC_READ|_IOC_WRITE, 0x6e0a, 0x10 },
+{ "linux/ncp_fs.h", "NCP_IOC_GETROOT", _IOC_WRITE, 0x6e08, 0x0c },
+{ "linux/ncp_fs.h", "NCP_IOC_GET_FS_INFO", _IOC_READ|_IOC_WRITE, 0x6e04, 0x28 },
+{ "linux/ncp_fs.h", "NCP_IOC_GET_FS_INFO_V2", _IOC_READ|_IOC_WRITE, 0x6e04, 0x30 },
+{ "linux/ncp_fs.h", "NCP_IOC_LOCKUNLOCK", _IOC_READ, 0x6e07, 0x14 },
+{ "linux/ncp_fs.h", "NCP_IOC_NCPREQUEST", _IOC_READ, 0x6e01, 0x10 },
+{ "linux/ncp_fs.h", "NCP_IOC_SETCHARSETS", _IOC_READ, 0x6e0b, 0x2a },
+{ "linux/ncp_fs.h", "NCP_IOC_SETDENTRYTTL", _IOC_READ, 0x6e0c, 0x04 },
+{ "linux/ncp_fs.h", "NCP_IOC_SETOBJECTNAME", _IOC_READ, 0x6e09, 0x18 },
+{ "linux/ncp_fs.h", "NCP_IOC_SETPRIVATEDATA", _IOC_READ, 0x6e0a, 0x10 },
+{ "linux/ncp_fs.h", "NCP_IOC_SETROOT", _IOC_READ, 0x6e08, 0x0c },
+{ "linux/ncp_fs.h", "NCP_IOC_SET_SIGN_WANTED", _IOC_WRITE, 0x6e06, 0x04 },
+{ "linux/ncp_fs.h", "NCP_IOC_SIGN_INIT", _IOC_READ, 0x6e05, 0x18 },
+{ "linux/ncp_fs.h", "NCP_IOC_SIGN_WANTED", _IOC_READ, 0x6e06, 0x04 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_CHANGE_CPMODE", _IOC_WRITE, 0x6e80, 0x10 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_CLEAN_SEGMENTS", _IOC_WRITE, 0x6e88, 0x78 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_DELETE_CHECKPOINT", _IOC_WRITE, 0x6e81, 0x08 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_GET_BDESCS", _IOC_READ|_IOC_WRITE, 0x6e87, 0x18 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_GET_CPINFO", _IOC_READ, 0x6e82, 0x18 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_GET_CPSTAT", _IOC_READ, 0x6e83, 0x18 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_GET_SUINFO", _IOC_READ, 0x6e84, 0x18 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_GET_SUSTAT", _IOC_READ, 0x6e85, 0x30 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_GET_VINFO", _IOC_READ|_IOC_WRITE, 0x6e86, 0x18 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_RESIZE", _IOC_WRITE, 0x6e8b, 0x08 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_SET_ALLOC_RANGE", _IOC_WRITE, 0x6e8c, 0x10 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_SET_SUINFO", _IOC_WRITE, 0x6e8d, 0x18 },
+{ "linux/nilfs2_fs.h", "NILFS_IOCTL_SYNC", _IOC_READ, 0x6e8a, 0x08 },
+{ "linux/nvme.h", "NVME_IOCTL_ADMIN_CMD", _IOC_READ|_IOC_WRITE, 0x4e41, 0x48 },
+{ "linux/nvme.h", "NVME_IOCTL_ID", _IOC_NONE, 0x4e40, 0x00 },
+{ "linux/nvme.h", "NVME_IOCTL_IO_CMD", _IOC_READ|_IOC_WRITE, 0x4e43, 0x48 },
+{ "linux/nvme.h", "NVME_IOCTL_SUBMIT_IO", _IOC_WRITE, 0x4e42, 0x30 },
+{ "linux/nvram.h", "NVRAM_INIT", _IOC_NONE, 0x7040, 0x00 },
+{ "linux/nvram.h", "NVRAM_SETCKS", _IOC_NONE, 0x7041, 0x00 },
+{ "linux/omap3isp.h", "VIDIOC_OMAP3ISP_AEWB_CFG", _IOC_READ|_IOC_WRITE, 0x56c3, 0x20 },
+{ "linux/omap3isp.h", "VIDIOC_OMAP3ISP_AF_CFG", _IOC_READ|_IOC_WRITE, 0x56c5, 0x4c },
+{ "linux/omap3isp.h", "VIDIOC_OMAP3ISP_CCDC_CFG", _IOC_READ|_IOC_WRITE, 0x56c1, 0x38 },
+{ "linux/omap3isp.h", "VIDIOC_OMAP3ISP_HIST_CFG", _IOC_READ|_IOC_WRITE, 0x56c4, 0x30 },
+{ "linux/omap3isp.h", "VIDIOC_OMAP3ISP_PRV_CFG", _IOC_READ|_IOC_WRITE, 0x56c2, 0x70 },
+{ "linux/omap3isp.h", "VIDIOC_OMAP3ISP_STAT_EN", _IOC_READ|_IOC_WRITE, 0x56c7, 0x08 },
+{ "linux/omap3isp.h", "VIDIOC_OMAP3ISP_STAT_REQ", _IOC_READ|_IOC_WRITE, 0x56c6, 0x28 },
+{ "linux/omapfb.h", "OMAPFB_CTRL_TEST", _IOC_WRITE, 0x4f2e, 0x04 },
+{ "linux/omapfb.h", "OMAPFB_GET_CAPS", _IOC_READ, 0x4f2a, 0x0c },
+{ "linux/omapfb.h", "OMAPFB_GET_COLOR_KEY", _IOC_WRITE, 0x4f33, 0x10 },
+{ "linux/omapfb.h", "OMAPFB_GET_DISPLAY_INFO", _IOC_READ, 0x4f3f, 0x20 },
+{ "linux/omapfb.h", "OMAPFB_GET_OVERLAY_COLORMODE", _IOC_READ, 0x4f3b, 0x3c },
+{ "linux/omapfb.h", "OMAPFB_GET_UPDATE_MODE", _IOC_WRITE, 0x4f2b, 0x04 },
+{ "linux/omapfb.h", "OMAPFB_GET_VRAM_INFO", _IOC_READ, 0x4f3d, 0x20 },
+{ "linux/omapfb.h", "OMAPFB_LCD_TEST", _IOC_WRITE, 0x4f2d, 0x04 },
+{ "linux/omapfb.h", "OMAPFB_MEMORY_READ", _IOC_READ, 0x4f3a, 0x18 },
+{ "linux/omapfb.h", "OMAPFB_MIRROR", _IOC_WRITE, 0x4f1f, 0x04 },
+{ "linux/omapfb.h", "OMAPFB_QUERY_MEM", _IOC_WRITE, 0x4f38, 0x08 },
+{ "linux/omapfb.h", "OMAPFB_QUERY_PLANE", _IOC_WRITE, 0x4f35, 0x44 },
+{ "linux/omapfb.h", "OMAPFB_SETUP_MEM", _IOC_WRITE, 0x4f37, 0x08 },
+{ "linux/omapfb.h", "OMAPFB_SETUP_PLANE", _IOC_WRITE, 0x4f34, 0x44 },
+{ "linux/omapfb.h", "OMAPFB_SET_COLOR_KEY", _IOC_WRITE, 0x4f32, 0x10 },
+{ "linux/omapfb.h", "OMAPFB_SET_TEARSYNC", _IOC_WRITE, 0x4f3e, 0x08 },
+{ "linux/omapfb.h", "OMAPFB_SET_UPDATE_MODE", _IOC_WRITE, 0x4f28, 0x04 },
+{ "linux/omapfb.h", "OMAPFB_SYNC_GFX", _IOC_NONE, 0x4f25, 0x00 },
+{ "linux/omapfb.h", "OMAPFB_UPDATE_WINDOW", _IOC_WRITE, 0x4f36, 0x44 },
+{ "linux/omapfb.h", "OMAPFB_UPDATE_WINDOW_OLD", _IOC_WRITE, 0x4f2f, 0x14 },
+{ "linux/omapfb.h", "OMAPFB_VSYNC", _IOC_NONE, 0x4f26, 0x00 },
+{ "linux/omapfb.h", "OMAPFB_WAITFORGO", _IOC_NONE, 0x4f3c, 0x00 },
+{ "linux/omapfb.h", "OMAPFB_WAITFORVSYNC", _IOC_NONE, 0x4f39, 0x00 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_DISABLE", _IOC_NONE, 0x2401, 0x00 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_ENABLE", _IOC_NONE, 0x2400, 0x00 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_ID", _IOC_READ, 0x2407, 0x08 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_PERIOD", _IOC_WRITE, 0x2404, 0x08 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_REFRESH", _IOC_NONE, 0x2402, 0x00 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_RESET", _IOC_NONE, 0x2403, 0x00 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_SET_BPF", _IOC_WRITE, 0x2408, 0x04 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_SET_FILTER", _IOC_WRITE, 0x2406, 0x08 },
+{ "linux/perf_event.h", "PERF_EVENT_IOC_SET_OUTPUT", _IOC_NONE, 0x2405, 0x00 },
+{ "linux/phantom.h", "PHN_GETREG", _IOC_READ|_IOC_WRITE, 0x7005, 0x08 },
+{ "linux/phantom.h", "PHN_GETREGS", _IOC_READ|_IOC_WRITE, 0x7007, 0x28 },
+{ "linux/phantom.h", "PHN_GET_REG", _IOC_READ|_IOC_WRITE, 0x7000, 0x08 },
+{ "linux/phantom.h", "PHN_GET_REGS", _IOC_READ|_IOC_WRITE, 0x7002, 0x08 },
+{ "linux/phantom.h", "PHN_NOT_OH", _IOC_NONE, 0x7004, 0x00 },
+{ "linux/phantom.h", "PHN_SETREG", _IOC_WRITE, 0x7006, 0x08 },
+{ "linux/phantom.h", "PHN_SETREGS", _IOC_WRITE, 0x7008, 0x28 },
+{ "linux/phantom.h", "PHN_SET_REG", _IOC_WRITE, 0x7001, 0x08 },
+{ "linux/phantom.h", "PHN_SET_REGS", _IOC_WRITE, 0x7003, 0x08 },
+{ "linux/pktcdvd.h", "PACKET_CTRL_CMD", _IOC_READ|_IOC_WRITE, 0x5801, 0x18 },
+{ "linux/pmu.h", "PMU_IOC_CAN_SLEEP", _IOC_READ, 0x4205, 0x08 },
+{ "linux/pmu.h", "PMU_IOC_GET_BACKLIGHT", _IOC_READ, 0x4201, 0x08 },
+{ "linux/pmu.h", "PMU_IOC_GET_MODEL", _IOC_READ, 0x4203, 0x08 },
+{ "linux/pmu.h", "PMU_IOC_GRAB_BACKLIGHT", _IOC_READ, 0x4206, 0x08 },
+{ "linux/pmu.h", "PMU_IOC_HAS_ADB", _IOC_READ, 0x4204, 0x08 },
+{ "linux/pmu.h", "PMU_IOC_SET_BACKLIGHT", _IOC_WRITE, 0x4202, 0x08 },
+{ "linux/pmu.h", "PMU_IOC_SLEEP", _IOC_NONE, 0x4200, 0x00 },
+{ "linux/ppdev.h", "PPCLAIM", _IOC_NONE, 0x708b, 0x00 },
+{ "linux/ppdev.h", "PPCLRIRQ", _IOC_READ, 0x7093, 0x04 },
+{ "linux/ppdev.h", "PPDATADIR", _IOC_WRITE, 0x7090, 0x04 },
+{ "linux/ppdev.h", "PPEXCL", _IOC_NONE, 0x708f, 0x00 },
+{ "linux/ppdev.h", "PPFCONTROL", _IOC_WRITE, 0x708e, 0x02 },
+{ "linux/ppdev.h", "PPGETFLAGS", _IOC_READ, 0x709a, 0x04 },
+{ "linux/ppdev.h", "PPGETMODE", _IOC_READ, 0x7098, 0x04 },
+{ "linux/ppdev.h", "PPGETMODES", _IOC_READ, 0x7097, 0x04 },
+{ "linux/ppdev.h", "PPGETPHASE", _IOC_READ, 0x7099, 0x04 },
+{ "linux/ppdev.h", "PPGETTIME", _IOC_READ, 0x7095, 0x10 },
+{ "linux/ppdev.h", "PPNEGOT", _IOC_WRITE, 0x7091, 0x04 },
+{ "linux/ppdev.h", "PPRCONTROL", _IOC_READ, 0x7083, 0x01 },
+{ "linux/ppdev.h", "PPRDATA", _IOC_READ, 0x7085, 0x01 },
+{ "linux/ppdev.h", "PPRELEASE", _IOC_NONE, 0x708c, 0x00 },
+{ "linux/ppdev.h", "PPRSTATUS", _IOC_READ, 0x7081, 0x01 },
+{ "linux/ppdev.h", "PPSETFLAGS", _IOC_WRITE, 0x709b, 0x04 },
+{ "linux/ppdev.h", "PPSETMODE", _IOC_WRITE, 0x7080, 0x04 },
+{ "linux/ppdev.h", "PPSETPHASE", _IOC_WRITE, 0x7094, 0x04 },
+{ "linux/ppdev.h", "PPSETTIME", _IOC_WRITE, 0x7096, 0x10 },
+{ "linux/ppdev.h", "PPWCONTROL", _IOC_WRITE, 0x7084, 0x01 },
+{ "linux/ppdev.h", "PPWCTLONIRQ", _IOC_WRITE, 0x7092, 0x01 },
+{ "linux/ppdev.h", "PPWDATA", _IOC_WRITE, 0x7086, 0x01 },
+{ "linux/ppdev.h", "PPYIELD", _IOC_NONE, 0x708d, 0x00 },
+{ "linux/ppp-ioctl.h", "PPPIOCATTACH", _IOC_WRITE, 0x743d, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCATTCHAN", _IOC_WRITE, 0x7438, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCCONNECT", _IOC_WRITE, 0x743a, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCDETACH", _IOC_WRITE, 0x743c, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCDISCONN", _IOC_NONE, 0x7439, 0x00 },
+{ "linux/ppp-ioctl.h", "PPPIOCGASYNCMAP", _IOC_READ, 0x7458, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCGCHAN", _IOC_READ, 0x7437, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCGDEBUG", _IOC_READ, 0x7441, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCGFLAGS", _IOC_READ, 0x745a, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCGIDLE", _IOC_READ, 0x743f, 0x10 },
+{ "linux/ppp-ioctl.h", "PPPIOCGL2TPSTATS", _IOC_READ, 0x7436, 0x48 },
+{ "linux/ppp-ioctl.h", "PPPIOCGMRU", _IOC_READ, 0x7453, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCGNPMODE", _IOC_READ|_IOC_WRITE, 0x744c, 0x08 },
+{ "linux/ppp-ioctl.h", "PPPIOCGRASYNCMAP", _IOC_READ, 0x7455, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCGUNIT", _IOC_READ, 0x7456, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCGXASYNCMAP", _IOC_READ, 0x7450, 0x20 },
+{ "linux/ppp-ioctl.h", "PPPIOCNEWUNIT", _IOC_READ|_IOC_WRITE, 0x743e, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSACTIVE", _IOC_WRITE, 0x7446, 0x10 },
+{ "linux/ppp-ioctl.h", "PPPIOCSASYNCMAP", _IOC_WRITE, 0x7457, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSCOMPRESS", _IOC_WRITE, 0x744d, 0x10 },
+{ "linux/ppp-ioctl.h", "PPPIOCSDEBUG", _IOC_WRITE, 0x7440, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSFLAGS", _IOC_WRITE, 0x7459, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSMAXCID", _IOC_WRITE, 0x7451, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSMRRU", _IOC_WRITE, 0x743b, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSMRU", _IOC_WRITE, 0x7452, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSNPMODE", _IOC_WRITE, 0x744b, 0x08 },
+{ "linux/ppp-ioctl.h", "PPPIOCSPASS", _IOC_WRITE, 0x7447, 0x10 },
+{ "linux/ppp-ioctl.h", "PPPIOCSRASYNCMAP", _IOC_WRITE, 0x7454, 0x04 },
+{ "linux/ppp-ioctl.h", "PPPIOCSXASYNCMAP", _IOC_WRITE, 0x744f, 0x20 },
+{ "linux/ppp-ioctl.h", "PPPIOCXFERUNIT", _IOC_NONE, 0x744e, 0x00 },
+{ "linux/pps.h", "PPS_FETCH", _IOC_READ|_IOC_WRITE, 0x70a4, 0x08 },
+{ "linux/pps.h", "PPS_GETCAP", _IOC_READ, 0x70a3, 0x08 },
+{ "linux/pps.h", "PPS_GETPARAMS", _IOC_READ, 0x70a1, 0x08 },
+{ "linux/pps.h", "PPS_KC_BIND", _IOC_WRITE, 0x70a5, 0x08 },
+{ "linux/pps.h", "PPS_SETPARAMS", _IOC_WRITE, 0x70a2, 0x08 },
+{ "linux/ptp_clock.h", "PTP_CLOCK_GETCAPS", _IOC_READ, 0x3d01, 0x50 },
+{ "linux/ptp_clock.h", "PTP_ENABLE_PPS", _IOC_WRITE, 0x3d04, 0x04 },
+{ "linux/ptp_clock.h", "PTP_EXTTS_REQUEST", _IOC_WRITE, 0x3d02, 0x10 },
+{ "linux/ptp_clock.h", "PTP_PEROUT_REQUEST", _IOC_WRITE, 0x3d03, 0x38 },
+{ "linux/ptp_clock.h", "PTP_SYS_OFFSET", _IOC_WRITE, 0x3d05, 0x340 },
+{ "linux/radeonfb.h", "FBIO_RADEON_GET_MIRROR", _IOC_READ, 0x4003, 0x08 },
+{ "linux/radeonfb.h", "FBIO_RADEON_SET_MIRROR", _IOC_WRITE, 0x4004, 0x08 },
+{ "linux/raid/md_u.h", "ADD_NEW_DISK", _IOC_WRITE, 0x0921, 0x14 },
+{ "linux/raid/md_u.h", "CLEAR_ARRAY", _IOC_NONE, 0x0920, 0x00 },
+{ "linux/raid/md_u.h", "CLUSTERED_DISK_NACK", _IOC_NONE, 0x0935, 0x00 },
+{ "linux/raid/md_u.h", "GET_ARRAY_INFO", _IOC_READ, 0x0911, 0x48 },
+{ "linux/raid/md_u.h", "GET_BITMAP_FILE", _IOC_READ, 0x0915, 0x1000 },
+{ "linux/raid/md_u.h", "GET_DISK_INFO", _IOC_READ, 0x0912, 0x14 },
+{ "linux/raid/md_u.h", "HOT_ADD_DISK", _IOC_NONE, 0x0928, 0x00 },
+{ "linux/raid/md_u.h", "HOT_GENERATE_ERROR", _IOC_NONE, 0x092a, 0x00 },
+{ "linux/raid/md_u.h", "HOT_REMOVE_DISK", _IOC_NONE, 0x0922, 0x00 },
+{ "linux/raid/md_u.h", "PROTECT_ARRAY", _IOC_NONE, 0x0927, 0x00 },
+{ "linux/raid/md_u.h", "RAID_AUTORUN", _IOC_NONE, 0x0914, 0x00 },
+{ "linux/raid/md_u.h", "RAID_VERSION", _IOC_READ, 0x0910, 0x0c },
+{ "linux/raid/md_u.h", "RESTART_ARRAY_RW", _IOC_NONE, 0x0934, 0x00 },
+{ "linux/raid/md_u.h", "RUN_ARRAY", _IOC_WRITE, 0x0930, 0x0c },
+{ "linux/raid/md_u.h", "SET_ARRAY_INFO", _IOC_WRITE, 0x0923, 0x48 },
+{ "linux/raid/md_u.h", "SET_BITMAP_FILE", _IOC_WRITE, 0x092b, 0x04 },
+{ "linux/raid/md_u.h", "SET_DISK_FAULTY", _IOC_NONE, 0x0929, 0x00 },
+{ "linux/raid/md_u.h", "SET_DISK_INFO", _IOC_NONE, 0x0924, 0x00 },
+{ "linux/raid/md_u.h", "STOP_ARRAY", _IOC_NONE, 0x0932, 0x00 },
+{ "linux/raid/md_u.h", "STOP_ARRAY_RO", _IOC_NONE, 0x0933, 0x00 },
+{ "linux/raid/md_u.h", "UNPROTECT_ARRAY", _IOC_NONE, 0x0926, 0x00 },
+{ "linux/raid/md_u.h", "WRITE_RAID_INFO", _IOC_NONE, 0x0925, 0x00 },
+{ "linux/random.h", "RNDADDENTROPY", _IOC_WRITE, 0x5203, 0x08 },
+{ "linux/random.h", "RNDADDTOENTCNT", _IOC_WRITE, 0x5201, 0x04 },
+{ "linux/random.h", "RNDCLEARPOOL", _IOC_NONE, 0x5206, 0x00 },
+{ "linux/random.h", "RNDGETENTCNT", _IOC_READ, 0x5200, 0x04 },
+{ "linux/random.h", "RNDGETPOOL", _IOC_READ, 0x5202, 0x08 },
+{ "linux/random.h", "RNDZAPENTCNT", _IOC_NONE, 0x5204, 0x00 },
+{ "linux/raw.h", "RAW_GETBIND", _IOC_NONE, 0xac01, 0x00 },
+{ "linux/raw.h", "RAW_SETBIND", _IOC_NONE, 0xac00, 0x00 },
+{ "linux/reiserfs_fs.h", "REISERFS_IOC_UNPACK", _IOC_WRITE, 0xcd01, 0x08 },
+{ "linux/rfkill.h", "RFKILL_IOCTL_NOINPUT", _IOC_NONE, 0x5201, 0x00 },
+{ "linux/rtc.h", "RTC_AIE_OFF", _IOC_NONE, 0x7002, 0x00 },
+{ "linux/rtc.h", "RTC_AIE_ON", _IOC_NONE, 0x7001, 0x00 },
+{ "linux/rtc.h", "RTC_ALM_READ", _IOC_READ, 0x7008, 0x24 },
+{ "linux/rtc.h", "RTC_ALM_SET", _IOC_WRITE, 0x7007, 0x24 },
+{ "linux/rtc.h", "RTC_EPOCH_READ", _IOC_READ, 0x700d, 0x08 },
+{ "linux/rtc.h", "RTC_EPOCH_SET", _IOC_WRITE, 0x700e, 0x08 },
+{ "linux/rtc.h", "RTC_IRQP_READ", _IOC_READ, 0x700b, 0x08 },
+{ "linux/rtc.h", "RTC_IRQP_SET", _IOC_WRITE, 0x700c, 0x08 },
+{ "linux/rtc.h", "RTC_PIE_OFF", _IOC_NONE, 0x7006, 0x00 },
+{ "linux/rtc.h", "RTC_PIE_ON", _IOC_NONE, 0x7005, 0x00 },
+{ "linux/rtc.h", "RTC_PLL_GET", _IOC_READ, 0x7011, 0x20 },
+{ "linux/rtc.h", "RTC_PLL_SET", _IOC_WRITE, 0x7012, 0x20 },
+{ "linux/rtc.h", "RTC_RD_TIME", _IOC_READ, 0x7009, 0x24 },
+{ "linux/rtc.h", "RTC_SET_TIME", _IOC_WRITE, 0x700a, 0x24 },
+{ "linux/rtc.h", "RTC_UIE_OFF", _IOC_NONE, 0x7004, 0x00 },
+{ "linux/rtc.h", "RTC_UIE_ON", _IOC_NONE, 0x7003, 0x00 },
+{ "linux/rtc.h", "RTC_VL_CLR", _IOC_NONE, 0x7014, 0x00 },
+{ "linux/rtc.h", "RTC_VL_READ", _IOC_READ, 0x7013, 0x04 },
+{ "linux/rtc.h", "RTC_WIE_OFF", _IOC_NONE, 0x7010, 0x00 },
+{ "linux/rtc.h", "RTC_WIE_ON", _IOC_NONE, 0x700f, 0x00 },
+{ "linux/rtc.h", "RTC_WKALM_RD", _IOC_READ, 0x7010, 0x28 },
+{ "linux/rtc.h", "RTC_WKALM_SET", _IOC_WRITE, 0x700f, 0x28 },
+{ "linux/serio.h", "SPIOCSTYPE", _IOC_WRITE, 0x7101, 0x08 },
+{ "linux/sockios.h", "SIOCADDDLCI", 0, 0x8980, 0 },
+{ "linux/sockios.h", "SIOCADDMULTI", 0, 0x8931, 0 },
+{ "linux/sockios.h", "SIOCADDRT", 0, 0x890B, 0 },
+{ "linux/sockios.h", "SIOCBONDCHANGEACTIVE", 0, 0x8995, 0 },
+{ "linux/sockios.h", "SIOCBONDENSLAVE", 0, 0x8990, 0 },
+{ "linux/sockios.h", "SIOCBONDINFOQUERY", 0, 0x8994, 0 },
+{ "linux/sockios.h", "SIOCBONDRELEASE", 0, 0x8991, 0 },
+{ "linux/sockios.h", "SIOCBONDSETHWADDR", 0, 0x8992, 0 },
+{ "linux/sockios.h", "SIOCBONDSLAVEINFOQUERY", 0, 0x8993, 0 },
+{ "linux/sockios.h", "SIOCBRADDBR", 0, 0x89a0, 0 },
+{ "linux/sockios.h", "SIOCBRADDIF", 0, 0x89a2, 0 },
+{ "linux/sockios.h", "SIOCBRDELBR", 0, 0x89a1, 0 },
+{ "linux/sockios.h", "SIOCBRDELIF", 0, 0x89a3, 0 },
+{ "linux/sockios.h", "SIOCDARP", 0, 0x8953, 0 },
+{ "linux/sockios.h", "SIOCDELDLCI", 0, 0x8981, 0 },
+{ "linux/sockios.h", "SIOCDELMULTI", 0, 0x8932, 0 },
+{ "linux/sockios.h", "SIOCDELRT", 0, 0x890C, 0 },
+{ "linux/sockios.h", "SIOCDEVPRIVATE", 0, 0x89F0, 0 },
+{ "linux/sockios.h", "SIOCDIFADDR", 0, 0x8936, 0 },
+{ "linux/sockios.h", "SIOCDRARP", 0, 0x8960, 0 },
+{ "linux/sockios.h", "SIOCETHTOOL", 0, 0x8946, 0 },
+{ "linux/sockios.h", "SIOCGARP", 0, 0x8954, 0 },
+{ "linux/sockios.h", "SIOCGHWTSTAMP", 0, 0x89b1, 0 },
+{ "linux/sockios.h", "SIOCGIFADDR", 0, 0x8915, 0 },
+{ "linux/sockios.h", "SIOCGIFBR", 0, 0x8940, 0 },
+{ "linux/sockios.h", "SIOCGIFBRDADDR", 0, 0x8919, 0 },
+{ "linux/sockios.h", "SIOCGIFCONF", 0, 0x8912, 0 },
+{ "linux/sockios.h", "SIOCGIFCOUNT", 0, 0x8938, 0 },
+{ "linux/sockios.h", "SIOCGIFDSTADDR", 0, 0x8917, 0 },
+{ "linux/sockios.h", "SIOCGIFENCAP", 0, 0x8925, 0 },
+{ "linux/sockios.h", "SIOCGIFFLAGS", 0, 0x8913, 0 },
+{ "linux/sockios.h", "SIOCGIFHWADDR", 0, 0x8927, 0 },
+{ "linux/sockios.h", "SIOCGIFINDEX", 0, 0x8933, 0 },
+{ "linux/sockios.h", "SIOCGIFMAP", 0, 0x8970, 0 },
+{ "linux/sockios.h", "SIOCGIFMEM", 0, 0x891f, 0 },
+{ "linux/sockios.h", "SIOCGIFMETRIC", 0, 0x891d, 0 },
+{ "linux/sockios.h", "SIOCGIFMTU", 0, 0x8921, 0 },
+{ "linux/sockios.h", "SIOCGIFNAME", 0, 0x8910, 0 },
+{ "linux/sockios.h", "SIOCGIFNETMASK", 0, 0x891b, 0 },
+{ "linux/sockios.h", "SIOCGIFPFLAGS", 0, 0x8935, 0 },
+{ "linux/sockios.h", "SIOCGIFSLAVE", 0, 0x8929, 0 },
+{ "linux/sockios.h", "SIOCGIFTXQLEN", 0, 0x8942, 0 },
+{ "linux/sockios.h", "SIOCGIFVLAN", 0, 0x8982, 0 },
+{ "linux/sockios.h", "SIOCGMIIPHY", 0, 0x8947, 0 },
+{ "linux/sockios.h", "SIOCGMIIREG", 0, 0x8948, 0 },
+{ "linux/sockios.h", "SIOCGRARP", 0, 0x8961, 0 },
+{ "linux/sockios.h", "SIOCOUTQNSD", 0, 0x894B, 0 },
+{ "linux/sockios.h", "SIOCPROTOPRIVATE", 0, 0x89E0, 0 },
+{ "linux/sockios.h", "SIOCRTMSG", 0, 0x890D, 0 },
+{ "linux/sockios.h", "SIOCSARP", 0, 0x8955, 0 },
+{ "linux/sockios.h", "SIOCSHWTSTAMP", 0, 0x89b0, 0 },
+{ "linux/sockios.h", "SIOCSIFADDR", 0, 0x8916, 0 },
+{ "linux/sockios.h", "SIOCSIFBR", 0, 0x8941, 0 },
+{ "linux/sockios.h", "SIOCSIFBRDADDR", 0, 0x891a, 0 },
+{ "linux/sockios.h", "SIOCSIFDSTADDR", 0, 0x8918, 0 },
+{ "linux/sockios.h", "SIOCSIFENCAP", 0, 0x8926, 0 },
+{ "linux/sockios.h", "SIOCSIFFLAGS", 0, 0x8914, 0 },
+{ "linux/sockios.h", "SIOCSIFHWADDR", 0, 0x8924, 0 },
+{ "linux/sockios.h", "SIOCSIFHWBROADCAST", 0, 0x8937, 0 },
+{ "linux/sockios.h", "SIOCSIFLINK", 0, 0x8911, 0 },
+{ "linux/sockios.h", "SIOCSIFMAP", 0, 0x8971, 0 },
+{ "linux/sockios.h", "SIOCSIFMEM", 0, 0x8920, 0 },
+{ "linux/sockios.h", "SIOCSIFMETRIC", 0, 0x891e, 0 },
+{ "linux/sockios.h", "SIOCSIFMTU", 0, 0x8922, 0 },
+{ "linux/sockios.h", "SIOCSIFNAME", 0, 0x8923, 0 },
+{ "linux/sockios.h", "SIOCSIFNETMASK", 0, 0x891c, 0 },
+{ "linux/sockios.h", "SIOCSIFPFLAGS", 0, 0x8934, 0 },
+{ "linux/sockios.h", "SIOCSIFSLAVE", 0, 0x8930, 0 },
+{ "linux/sockios.h", "SIOCSIFTXQLEN", 0, 0x8943, 0 },
+{ "linux/sockios.h", "SIOCSIFVLAN", 0, 0x8983, 0 },
+{ "linux/sockios.h", "SIOCSMIIREG", 0, 0x8949, 0 },
+{ "linux/sockios.h", "SIOCSRARP", 0, 0x8962, 0 },
+{ "linux/sockios.h", "SIOCWANDEV", 0, 0x894A, 0 },
+{ "linux/sonet.h", "SONET_CLRDIAG", _IOC_READ|_IOC_WRITE, 0x6113, 0x04 },
+{ "linux/sonet.h", "SONET_GETDIAG", _IOC_READ, 0x6114, 0x04 },
+{ "linux/sonet.h", "SONET_GETFRAMING", _IOC_READ, 0x6116, 0x04 },
+{ "linux/sonet.h", "SONET_GETFRSENSE", _IOC_READ, 0x6117, 0x06 },
+{ "linux/sonet.h", "SONET_GETSTAT", _IOC_READ, 0x6110, 0x24 },
+{ "linux/sonet.h", "SONET_GETSTATZ", _IOC_READ, 0x6111, 0x24 },
+{ "linux/sonet.h", "SONET_SETDIAG", _IOC_READ|_IOC_WRITE, 0x6112, 0x04 },
+{ "linux/sonet.h", "SONET_SETFRAMING", _IOC_WRITE, 0x6115, 0x04 },
+{ "linux/sonypi.h", "SONYPI_IOCGBAT1CAP", _IOC_READ, 0x7602, 0x02 },
+{ "linux/sonypi.h", "SONYPI_IOCGBAT1REM", _IOC_READ, 0x7603, 0x02 },
+{ "linux/sonypi.h", "SONYPI_IOCGBAT2CAP", _IOC_READ, 0x7604, 0x02 },
+{ "linux/sonypi.h", "SONYPI_IOCGBAT2REM", _IOC_READ, 0x7605, 0x02 },
+{ "linux/sonypi.h", "SONYPI_IOCGBATFLAGS", _IOC_READ, 0x7607, 0x01 },
+{ "linux/sonypi.h", "SONYPI_IOCGBLUE", _IOC_READ, 0x7608, 0x01 },
+{ "linux/sonypi.h", "SONYPI_IOCGBRT", _IOC_READ, 0x7600, 0x01 },
+{ "linux/sonypi.h", "SONYPI_IOCGFAN", _IOC_READ, 0x760a, 0x01 },
+{ "linux/sonypi.h", "SONYPI_IOCGTEMP", _IOC_READ, 0x760c, 0x01 },
+{ "linux/sonypi.h", "SONYPI_IOCSBLUE", _IOC_WRITE, 0x7609, 0x01 },
+{ "linux/sonypi.h", "SONYPI_IOCSBRT", _IOC_WRITE, 0x7600, 0x01 },
+{ "linux/sonypi.h", "SONYPI_IOCSFAN", _IOC_WRITE, 0x760b, 0x01 },
+{ "linux/soundcard.h", "OSS_GETVERSION", _IOC_READ, 0x4d76, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_COPR_HALT", _IOC_READ|_IOC_WRITE, 0x4307, 0x14 },
+{ "linux/soundcard.h", "SNDCTL_COPR_LOAD", _IOC_READ|_IOC_WRITE, 0x4301, 0xfb0 },
+{ "linux/soundcard.h", "SNDCTL_COPR_RCODE", _IOC_READ|_IOC_WRITE, 0x4303, 0x14 },
+{ "linux/soundcard.h", "SNDCTL_COPR_RCVMSG", _IOC_READ, 0x4309, 0xfa4 },
+{ "linux/soundcard.h", "SNDCTL_COPR_RDATA", _IOC_READ|_IOC_WRITE, 0x4302, 0x14 },
+{ "linux/soundcard.h", "SNDCTL_COPR_RESET", _IOC_NONE, 0x4300, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_COPR_RUN", _IOC_READ|_IOC_WRITE, 0x4306, 0x14 },
+{ "linux/soundcard.h", "SNDCTL_COPR_SENDMSG", _IOC_READ|_IOC_WRITE, 0x4308, 0xfa4 },
+{ "linux/soundcard.h", "SNDCTL_COPR_WCODE", _IOC_WRITE, 0x4305, 0x14 },
+{ "linux/soundcard.h", "SNDCTL_COPR_WDATA", _IOC_WRITE, 0x4304, 0x14 },
+{ "linux/soundcard.h", "SNDCTL_DSP_BIND_CHANNEL", _IOC_READ|_IOC_WRITE, 0x5041, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_CHANNELS", _IOC_READ|_IOC_WRITE, 0x5006, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETBLKSIZE", _IOC_READ|_IOC_WRITE, 0x5004, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETCAPS", _IOC_READ, 0x500f, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETCHANNELMASK", _IOC_READ|_IOC_WRITE, 0x5040, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETFMTS", _IOC_READ, 0x500b, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETIPTR", _IOC_READ, 0x5011, 0x0c },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETISPACE", _IOC_READ, 0x500d, 0x10 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETODELAY", _IOC_READ, 0x5017, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETOPTR", _IOC_READ, 0x5012, 0x0c },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETOSPACE", _IOC_READ, 0x500c, 0x10 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETSPDIF", _IOC_READ, 0x5043, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_GETTRIGGER", _IOC_READ, 0x5010, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_MAPINBUF", _IOC_READ, 0x5013, 0x10 },
+{ "linux/soundcard.h", "SNDCTL_DSP_MAPOUTBUF", _IOC_READ, 0x5014, 0x10 },
+{ "linux/soundcard.h", "SNDCTL_DSP_NONBLOCK", _IOC_NONE, 0x500e, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_DSP_POST", _IOC_NONE, 0x5008, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_DSP_PROFILE", _IOC_WRITE, 0x5017, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_RESET", _IOC_NONE, 0x5000, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SETDUPLEX", _IOC_NONE, 0x5016, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SETFMT", _IOC_READ|_IOC_WRITE, 0x5005, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SETFRAGMENT", _IOC_READ|_IOC_WRITE, 0x500a, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SETSPDIF", _IOC_WRITE, 0x5042, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SETSYNCRO", _IOC_NONE, 0x5015, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SETTRIGGER", _IOC_WRITE, 0x5010, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SPEED", _IOC_READ|_IOC_WRITE, 0x5002, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_STEREO", _IOC_READ|_IOC_WRITE, 0x5003, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SUBDIVIDE", _IOC_READ|_IOC_WRITE, 0x5009, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_DSP_SYNC", _IOC_NONE, 0x5001, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_FM_4OP_ENABLE", _IOC_WRITE, 0x510f, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_FM_LOAD_INSTR", _IOC_WRITE, 0x5107, 0x28 },
+{ "linux/soundcard.h", "SNDCTL_MIDI_INFO", _IOC_READ|_IOC_WRITE, 0x510c, 0x74 },
+{ "linux/soundcard.h", "SNDCTL_MIDI_MPUCMD", _IOC_READ|_IOC_WRITE, 0x6d02, 0x21 },
+{ "linux/soundcard.h", "SNDCTL_MIDI_MPUMODE", _IOC_READ|_IOC_WRITE, 0x6d01, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_MIDI_PRETIME", _IOC_READ|_IOC_WRITE, 0x6d00, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_CTRLRATE", _IOC_READ|_IOC_WRITE, 0x5103, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_GETINCOUNT", _IOC_READ, 0x5105, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_GETOUTCOUNT", _IOC_READ, 0x5104, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_GETTIME", _IOC_READ, 0x5113, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_NRMIDIS", _IOC_READ, 0x510b, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_NRSYNTHS", _IOC_READ, 0x510a, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_OUTOFBAND", _IOC_WRITE, 0x5112, 0x08 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_PANIC", _IOC_NONE, 0x5111, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_PERCMODE", _IOC_WRITE, 0x5106, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_RESET", _IOC_NONE, 0x5100, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_RESETSAMPLES", _IOC_WRITE, 0x5109, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_SYNC", _IOC_NONE, 0x5101, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_TESTMIDI", _IOC_WRITE, 0x5108, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SEQ_THRESHOLD", _IOC_WRITE, 0x510d, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SYNTH_CONTROL", _IOC_READ|_IOC_WRITE, 0x5115, 0xfa4 },
+{ "linux/soundcard.h", "SNDCTL_SYNTH_ID", _IOC_READ|_IOC_WRITE, 0x5114, 0x8c },
+{ "linux/soundcard.h", "SNDCTL_SYNTH_INFO", _IOC_READ|_IOC_WRITE, 0x5102, 0x8c },
+{ "linux/soundcard.h", "SNDCTL_SYNTH_MEMAVL", _IOC_READ|_IOC_WRITE, 0x510e, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_SYNTH_REMOVESAMPLE", _IOC_READ|_IOC_WRITE, 0x5116, 0x0c },
+{ "linux/soundcard.h", "SNDCTL_TMR_CONTINUE", _IOC_NONE, 0x5404, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_TMR_METRONOME", _IOC_WRITE, 0x5407, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_TMR_SELECT", _IOC_WRITE, 0x5408, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_TMR_SOURCE", _IOC_READ|_IOC_WRITE, 0x5406, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_TMR_START", _IOC_NONE, 0x5402, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_TMR_STOP", _IOC_NONE, 0x5403, 0x00 },
+{ "linux/soundcard.h", "SNDCTL_TMR_TEMPO", _IOC_READ|_IOC_WRITE, 0x5405, 0x04 },
+{ "linux/soundcard.h", "SNDCTL_TMR_TIMEBASE", _IOC_READ|_IOC_WRITE, 0x5401, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_3DSE", _IOC_READ|_IOC_WRITE, 0x4d68, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_ACCESS", _IOC_READ|_IOC_WRITE, 0x4d66, 0x80 },
+{ "linux/soundcard.h", "SOUND_MIXER_AGC", _IOC_READ|_IOC_WRITE, 0x4d67, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_GETLEVELS", _IOC_READ|_IOC_WRITE, 0x4d74, 0xa4 },
+{ "linux/soundcard.h", "SOUND_MIXER_INFO", _IOC_READ, 0x4d65, 0x5c },
+{ "linux/soundcard.h", "SOUND_MIXER_PRIVATE1", _IOC_READ|_IOC_WRITE, 0x4d6f, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_PRIVATE2", _IOC_READ|_IOC_WRITE, 0x4d70, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_PRIVATE3", _IOC_READ|_IOC_WRITE, 0x4d71, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_PRIVATE4", _IOC_READ|_IOC_WRITE, 0x4d72, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_PRIVATE5", _IOC_READ|_IOC_WRITE, 0x4d73, 0x04 },
+{ "linux/soundcard.h", "SOUND_MIXER_SETLEVELS", _IOC_READ|_IOC_WRITE, 0x4d75, 0xa4 },
+{ "linux/soundcard.h", "SOUND_OLD_MIXER_INFO", _IOC_READ, 0x4d65, 0x30 },
+{ "linux/soundcard.h", "SOUND_PCM_READ_BITS", _IOC_READ, 0x5005, 0x04 },
+{ "linux/soundcard.h", "SOUND_PCM_READ_CHANNELS", _IOC_READ, 0x5006, 0x04 },
+{ "linux/soundcard.h", "SOUND_PCM_READ_FILTER", _IOC_READ, 0x5007, 0x04 },
+{ "linux/soundcard.h", "SOUND_PCM_READ_RATE", _IOC_READ, 0x5002, 0x04 },
+{ "linux/soundcard.h", "SOUND_PCM_WRITE_FILTER", _IOC_READ|_IOC_WRITE, 0x5007, 0x04 },
+{ "linux/spi/spidev.h", "SPI_IOC_RD_BITS_PER_WORD", _IOC_READ, 0x6b03, 0x01 },
+{ "linux/spi/spidev.h", "SPI_IOC_RD_LSB_FIRST", _IOC_READ, 0x6b02, 0x01 },
+{ "linux/spi/spidev.h", "SPI_IOC_RD_MAX_SPEED_HZ", _IOC_READ, 0x6b04, 0x04 },
+{ "linux/spi/spidev.h", "SPI_IOC_RD_MODE", _IOC_READ, 0x6b01, 0x01 },
+{ "linux/spi/spidev.h", "SPI_IOC_RD_MODE32", _IOC_READ, 0x6b05, 0x04 },
+{ "linux/spi/spidev.h", "SPI_IOC_WR_BITS_PER_WORD", _IOC_WRITE, 0x6b03, 0x01 },
+{ "linux/spi/spidev.h", "SPI_IOC_WR_LSB_FIRST", _IOC_WRITE, 0x6b02, 0x01 },
+{ "linux/spi/spidev.h", "SPI_IOC_WR_MAX_SPEED_HZ", _IOC_WRITE, 0x6b04, 0x04 },
+{ "linux/spi/spidev.h", "SPI_IOC_WR_MODE", _IOC_WRITE, 0x6b01, 0x01 },
+{ "linux/spi/spidev.h", "SPI_IOC_WR_MODE32", _IOC_WRITE, 0x6b05, 0x04 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_ALLOC_SWAP_PAGE", _IOC_READ, 0x3314, 0x08 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_ATOMIC_RESTORE", _IOC_NONE, 0x3304, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_AVAIL_SWAP_SIZE", _IOC_READ, 0x3313, 0x08 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_CREATE_IMAGE", _IOC_WRITE, 0x3311, 0x04 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_FREE", _IOC_NONE, 0x3305, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_FREEZE", _IOC_NONE, 0x3301, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_FREE_SWAP_PAGES", _IOC_NONE, 0x3309, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_GET_IMAGE_SIZE", _IOC_READ, 0x330e, 0x08 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_PLATFORM_SUPPORT", _IOC_NONE, 0x330f, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_POWER_OFF", _IOC_NONE, 0x3310, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_PREF_IMAGE_SIZE", _IOC_NONE, 0x3312, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_S2RAM", _IOC_NONE, 0x330b, 0x00 },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_SET_SWAP_AREA", _IOC_WRITE, 0x330d, 0x0c },
+{ "linux/suspend_ioctls.h", "SNAPSHOT_UNFREEZE", _IOC_NONE, 0x3302, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCCLRMODCOUNT", _IOC_NONE, 0x6d0f, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCGGPIO", _IOC_READ, 0x6d11, 0x10 },
+{ "linux/synclink.h", "MGSL_IOCGIF", _IOC_NONE, 0x6d0b, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCGPARAMS", _IOC_READ, 0x6d01, 0x30 },
+{ "linux/synclink.h", "MGSL_IOCGSTATS", _IOC_NONE, 0x6d07, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCGTXIDLE", _IOC_NONE, 0x6d03, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCGXCTRL", _IOC_NONE, 0x6d16, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCGXSYNC", _IOC_NONE, 0x6d14, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCLOOPTXDONE", _IOC_NONE, 0x6d09, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCRXENABLE", _IOC_NONE, 0x6d05, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCSGPIO", _IOC_WRITE, 0x6d10, 0x10 },
+{ "linux/synclink.h", "MGSL_IOCSIF", _IOC_NONE, 0x6d0a, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCSPARAMS", _IOC_WRITE, 0x6d00, 0x30 },
+{ "linux/synclink.h", "MGSL_IOCSTXIDLE", _IOC_NONE, 0x6d02, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCSXCTRL", _IOC_NONE, 0x6d15, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCSXSYNC", _IOC_NONE, 0x6d13, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCTXABORT", _IOC_NONE, 0x6d06, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCTXENABLE", _IOC_NONE, 0x6d04, 0x00 },
+{ "linux/synclink.h", "MGSL_IOCWAITEVENT", _IOC_READ|_IOC_WRITE, 0x6d08, 0x04 },
+{ "linux/synclink.h", "MGSL_IOCWAITGPIO", _IOC_READ|_IOC_WRITE, 0x6d12, 0x10 },
+{ "linux/telephony.h", "OLD_PHONE_RING_START", _IOC_NONE, 0x7187, 0x00 },
+{ "linux/telephony.h", "PHONE_BUSY", _IOC_NONE, 0x71a1, 0x00 },
+{ "linux/telephony.h", "PHONE_CAPABILITIES", _IOC_NONE, 0x7180, 0x00 },
+{ "linux/telephony.h", "PHONE_CAPABILITIES_CHECK", _IOC_WRITE, 0x7182, 0x08 },
+{ "linux/telephony.h", "PHONE_CAPABILITIES_LIST", _IOC_READ, 0x7181, 0x08 },
+{ "linux/telephony.h", "PHONE_CPT_STOP", _IOC_NONE, 0x71a4, 0x00 },
+{ "linux/telephony.h", "PHONE_DIALTONE", _IOC_NONE, 0x71a3, 0x00 },
+{ "linux/telephony.h", "PHONE_DTMF_OOB", _IOC_WRITE, 0x7199, 0x04 },
+{ "linux/telephony.h", "PHONE_DTMF_READY", _IOC_READ, 0x7196, 0x04 },
+{ "linux/telephony.h", "PHONE_EXCEPTION", _IOC_READ, 0x719a, 0x04 },
+{ "linux/telephony.h", "PHONE_FRAME", _IOC_WRITE, 0x718d, 0x04 },
+{ "linux/telephony.h", "PHONE_GET_DTMF", _IOC_READ, 0x7197, 0x04 },
+{ "linux/telephony.h", "PHONE_GET_DTMF_ASCII", _IOC_READ, 0x7198, 0x04 },
+{ "linux/telephony.h", "PHONE_GET_TONE_OFF_TIME", _IOC_NONE, 0x719f, 0x00 },
+{ "linux/telephony.h", "PHONE_GET_TONE_ON_TIME", _IOC_NONE, 0x719e, 0x00 },
+{ "linux/telephony.h", "PHONE_GET_TONE_STATE", _IOC_NONE, 0x71a0, 0x00 },
+{ "linux/telephony.h", "PHONE_HOOKSTATE", _IOC_NONE, 0x7184, 0x00 },
+{ "linux/telephony.h", "PHONE_MAXRINGS", _IOC_WRITE, 0x7185, 0x01 },
+{ "linux/telephony.h", "PHONE_PLAY_CODEC", _IOC_WRITE, 0x7190, 0x04 },
+{ "linux/telephony.h", "PHONE_PLAY_DEPTH", _IOC_WRITE, 0x7193, 0x04 },
+{ "linux/telephony.h", "PHONE_PLAY_LEVEL", _IOC_NONE, 0x7195, 0x00 },
+{ "linux/telephony.h", "PHONE_PLAY_START", _IOC_NONE, 0x7191, 0x00 },
+{ "linux/telephony.h", "PHONE_PLAY_STOP", _IOC_NONE, 0x7192, 0x00 },
+{ "linux/telephony.h", "PHONE_PLAY_TONE", _IOC_WRITE, 0x719b, 0x01 },
+{ "linux/telephony.h", "PHONE_PLAY_VOLUME", _IOC_WRITE, 0x7194, 0x04 },
+{ "linux/telephony.h", "PHONE_PLAY_VOLUME_LINEAR", _IOC_WRITE, 0x71dc, 0x04 },
+{ "linux/telephony.h", "PHONE_PSTN_GET_STATE", _IOC_NONE, 0x71a5, 0x00 },
+{ "linux/telephony.h", "PHONE_PSTN_LINETEST", _IOC_NONE, 0x71a8, 0x00 },
+{ "linux/telephony.h", "PHONE_PSTN_SET_STATE", _IOC_WRITE, 0x71a4, 0x04 },
+{ "linux/telephony.h", "PHONE_QUERY_CODEC", _IOC_READ|_IOC_WRITE, 0x71a7, 0x08 },
+{ "linux/telephony.h", "PHONE_REC_CODEC", _IOC_WRITE, 0x7189, 0x04 },
+{ "linux/telephony.h", "PHONE_REC_DEPTH", _IOC_WRITE, 0x718c, 0x04 },
+{ "linux/telephony.h", "PHONE_REC_LEVEL", _IOC_NONE, 0x718f, 0x00 },
+{ "linux/telephony.h", "PHONE_REC_START", _IOC_NONE, 0x718a, 0x00 },
+{ "linux/telephony.h", "PHONE_REC_STOP", _IOC_NONE, 0x718b, 0x00 },
+{ "linux/telephony.h", "PHONE_REC_VOLUME", _IOC_WRITE, 0x718e, 0x04 },
+{ "linux/telephony.h", "PHONE_REC_VOLUME_LINEAR", _IOC_WRITE, 0x71db, 0x04 },
+{ "linux/telephony.h", "PHONE_RING", _IOC_NONE, 0x7183, 0x00 },
+{ "linux/telephony.h", "PHONE_RINGBACK", _IOC_NONE, 0x71a2, 0x00 },
+{ "linux/telephony.h", "PHONE_RING_CADENCE", _IOC_WRITE, 0x7186, 0x02 },
+{ "linux/telephony.h", "PHONE_RING_START", _IOC_WRITE, 0x7187, 0x08 },
+{ "linux/telephony.h", "PHONE_RING_STOP", _IOC_NONE, 0x7188, 0x00 },
+{ "linux/telephony.h", "PHONE_SET_TONE_OFF_TIME", _IOC_WRITE, 0x719d, 0x04 },
+{ "linux/telephony.h", "PHONE_SET_TONE_ON_TIME", _IOC_WRITE, 0x719c, 0x04 },
+{ "linux/telephony.h", "PHONE_VAD", _IOC_WRITE, 0x71a9, 0x04 },
+{ "linux/telephony.h", "PHONE_WINK", _IOC_WRITE, 0x71aa, 0x04 },
+{ "linux/telephony.h", "PHONE_WINK_DURATION", _IOC_WRITE, 0x71a6, 0x04 },
+{ "linux/timerfd.h", "TFD_IOC_SET_TICKS", _IOC_WRITE, 0x5400, 0x08 },
+{ "linux/toshiba.h", "TOSH_SMM", _IOC_READ|_IOC_WRITE, 0x7490, 0x04 },
+{ "linux/udf_fs_i.h", "UDF_GETEABLOCK", _IOC_READ, 0x6c41, 0x08 },
+{ "linux/udf_fs_i.h", "UDF_GETEASIZE", _IOC_READ, 0x6c40, 0x04 },
+{ "linux/udf_fs_i.h", "UDF_GETVOLIDENT", _IOC_READ, 0x6c42, 0x08 },
+{ "linux/udf_fs_i.h", "UDF_RELOCATE_BLOCKS", _IOC_READ|_IOC_WRITE, 0x6c43, 0x08 },
+{ "linux/uinput.h", "UI_BEGIN_FF_ERASE", _IOC_READ|_IOC_WRITE, 0x55ca, 0x0c },
+{ "linux/uinput.h", "UI_BEGIN_FF_UPLOAD", _IOC_READ|_IOC_WRITE, 0x55c8, 0x68 },
+{ "linux/uinput.h", "UI_DEV_CREATE", _IOC_NONE, 0x5501, 0x00 },
+{ "linux/uinput.h", "UI_DEV_DESTROY", _IOC_NONE, 0x5502, 0x00 },
+{ "linux/uinput.h", "UI_END_FF_ERASE", _IOC_WRITE, 0x55cb, 0x0c },
+{ "linux/uinput.h", "UI_END_FF_UPLOAD", _IOC_WRITE, 0x55c9, 0x68 },
+{ "linux/uinput.h", "UI_GET_VERSION", _IOC_READ, 0x552d, 0x04 },
+{ "linux/uinput.h", "UI_SET_ABSBIT", _IOC_WRITE, 0x5567, 0x04 },
+{ "linux/uinput.h", "UI_SET_EVBIT", _IOC_WRITE, 0x5564, 0x04 },
+{ "linux/uinput.h", "UI_SET_FFBIT", _IOC_WRITE, 0x556b, 0x04 },
+{ "linux/uinput.h", "UI_SET_KEYBIT", _IOC_WRITE, 0x5565, 0x04 },
+{ "linux/uinput.h", "UI_SET_LEDBIT", _IOC_WRITE, 0x5569, 0x04 },
+{ "linux/uinput.h", "UI_SET_MSCBIT", _IOC_WRITE, 0x5568, 0x04 },
+{ "linux/uinput.h", "UI_SET_PHYS", _IOC_WRITE, 0x556c, 0x08 },
+{ "linux/uinput.h", "UI_SET_PROPBIT", _IOC_WRITE, 0x556e, 0x04 },
+{ "linux/uinput.h", "UI_SET_RELBIT", _IOC_WRITE, 0x5566, 0x04 },
+{ "linux/uinput.h", "UI_SET_SNDBIT", _IOC_WRITE, 0x556a, 0x04 },
+{ "linux/uinput.h", "UI_SET_SWBIT", _IOC_WRITE, 0x556d, 0x04 },
+{ "linux/usb/cdc-wdm.h", "IOCTL_WDM_MAX_COMMAND", _IOC_READ, 0x48a0, 0x02 },
+{ "linux/usb/functionfs.h", "FUNCTIONFS_CLEAR_HALT", _IOC_NONE, 0x6703, 0x00 },
+{ "linux/usb/functionfs.h", "FUNCTIONFS_ENDPOINT_DESC", _IOC_READ, 0x6782, 0x09 },
+{ "linux/usb/functionfs.h", "FUNCTIONFS_ENDPOINT_REVMAP", _IOC_NONE, 0x6781, 0x00 },
+{ "linux/usb/functionfs.h", "FUNCTIONFS_FIFO_FLUSH", _IOC_NONE, 0x6702, 0x00 },
+{ "linux/usb/functionfs.h", "FUNCTIONFS_FIFO_STATUS", _IOC_NONE, 0x6701, 0x00 },
+{ "linux/usb/functionfs.h", "FUNCTIONFS_INTERFACE_REVMAP", _IOC_NONE, 0x6780, 0x00 },
+{ "linux/usb/g_printer.h", "GADGET_GET_PRINTER_STATUS", _IOC_READ, 0x6721, 0x01 },
+{ "linux/usb/g_printer.h", "GADGET_SET_PRINTER_STATUS", _IOC_READ|_IOC_WRITE, 0x6722, 0x01 },
+{ "linux/usb/gadgetfs.h", "GADGETFS_CLEAR_HALT", _IOC_NONE, 0x6703, 0x00 },
+{ "linux/usb/gadgetfs.h", "GADGETFS_FIFO_FLUSH", _IOC_NONE, 0x6702, 0x00 },
+{ "linux/usb/gadgetfs.h", "GADGETFS_FIFO_STATUS", _IOC_NONE, 0x6701, 0x00 },
+{ "linux/usb/iowarrior.h", "IOW_GETINFO", _IOC_READ, 0xc003, 0x28 },
+{ "linux/usb/iowarrior.h", "IOW_READ", _IOC_WRITE, 0xc002, 0x08 },
+{ "linux/usb/iowarrior.h", "IOW_WRITE", _IOC_WRITE, 0xc001, 0x08 },
+{ "linux/usb/tmc.h", "USBTMC_IOCTL_ABORT_BULK_IN", _IOC_NONE, 0x5b04, 0x00 },
+{ "linux/usb/tmc.h", "USBTMC_IOCTL_ABORT_BULK_OUT", _IOC_NONE, 0x5b03, 0x00 },
+{ "linux/usb/tmc.h", "USBTMC_IOCTL_CLEAR", _IOC_NONE, 0x5b02, 0x00 },
+{ "linux/usb/tmc.h", "USBTMC_IOCTL_CLEAR_IN_HALT", _IOC_NONE, 0x5b07, 0x00 },
+{ "linux/usb/tmc.h", "USBTMC_IOCTL_CLEAR_OUT_HALT", _IOC_NONE, 0x5b06, 0x00 },
+{ "linux/usb/tmc.h", "USBTMC_IOCTL_INDICATOR_PULSE", _IOC_NONE, 0x5b01, 0x00 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_ALLOC_STREAMS", _IOC_READ, 0x551c, 0x08 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_BULK", _IOC_READ|_IOC_WRITE, 0x5502, 0x18 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_BULK32", _IOC_READ|_IOC_WRITE, 0x5502, 0x10 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_CLAIMINTERFACE", _IOC_READ, 0x550f, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_CLAIM_PORT", _IOC_READ, 0x5518, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_CLEAR_HALT", _IOC_READ, 0x5515, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_CONNECT", _IOC_NONE, 0x5517, 0x00 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_CONNECTINFO", _IOC_WRITE, 0x5511, 0x08 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_CONTROL", _IOC_READ|_IOC_WRITE, 0x5500, 0x18 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_CONTROL32", _IOC_READ|_IOC_WRITE, 0x5500, 0x10 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_DISCARDURB", _IOC_NONE, 0x550b, 0x00 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_DISCONNECT", _IOC_NONE, 0x5516, 0x00 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_DISCONNECT_CLAIM", _IOC_READ, 0x551b, 0x108 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_DISCSIGNAL", _IOC_READ, 0x550e, 0x10 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_DISCSIGNAL32", _IOC_READ, 0x550e, 0x08 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_FREE_STREAMS", _IOC_READ, 0x551d, 0x08 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_GETDRIVER", _IOC_WRITE, 0x5508, 0x104 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_GET_CAPABILITIES", _IOC_READ, 0x551a, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_HUB_PORTINFO", _IOC_READ, 0x5513, 0x80 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_IOCTL", _IOC_READ|_IOC_WRITE, 0x5512, 0x10 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_IOCTL32", _IOC_READ|_IOC_WRITE, 0x5512, 0x0c },
+{ "linux/usbdevice_fs.h", "USBDEVFS_REAPURB", _IOC_WRITE, 0x550c, 0x08 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_REAPURB32", _IOC_WRITE, 0x550c, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_REAPURBNDELAY", _IOC_WRITE, 0x550d, 0x08 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_REAPURBNDELAY32", _IOC_WRITE, 0x550d, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_RELEASEINTERFACE", _IOC_READ, 0x5510, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_RELEASE_PORT", _IOC_READ, 0x5519, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_RESET", _IOC_NONE, 0x5514, 0x00 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_RESETEP", _IOC_READ, 0x5503, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_SETCONFIGURATION", _IOC_READ, 0x5505, 0x04 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_SETINTERFACE", _IOC_READ, 0x5504, 0x08 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_SUBMITURB", _IOC_READ, 0x550a, 0x38 },
+{ "linux/usbdevice_fs.h", "USBDEVFS_SUBMITURB32", _IOC_READ, 0x550a, 0x2a },
+{ "linux/uvcvideo.h", "UVCIOC_CTRL_MAP", _IOC_READ|_IOC_WRITE, 0x7520, 0x60 },
+{ "linux/uvcvideo.h", "UVCIOC_CTRL_QUERY", _IOC_READ|_IOC_WRITE, 0x7521, 0x10 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_DV_TIMINGS_CAP", _IOC_READ|_IOC_WRITE, 0x5664, 0x90 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_ENUM_DV_TIMINGS", _IOC_READ|_IOC_WRITE, 0x5662, 0x94 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_ENUM_FRAME_INTERVAL", _IOC_READ|_IOC_WRITE, 0x564b, 0x40 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_ENUM_FRAME_SIZE", _IOC_READ|_IOC_WRITE, 0x564a, 0x40 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_ENUM_MBUS_CODE", _IOC_READ|_IOC_WRITE, 0x5602, 0x30 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_G_CROP", _IOC_READ|_IOC_WRITE, 0x563b, 0x38 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_G_DV_TIMINGS", _IOC_READ|_IOC_WRITE, 0x5658, 0x84 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_G_EDID", _IOC_READ|_IOC_WRITE, 0x5628, 0x28 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_G_FMT", _IOC_READ|_IOC_WRITE, 0x5604, 0x58 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_G_FRAME_INTERVAL", _IOC_READ|_IOC_WRITE, 0x5615, 0x30 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_G_SELECTION", _IOC_READ|_IOC_WRITE, 0x563d, 0x40 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_QUERY_DV_TIMINGS", _IOC_READ, 0x5663, 0x84 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_S_CROP", _IOC_READ|_IOC_WRITE, 0x563c, 0x38 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_S_DV_TIMINGS", _IOC_READ|_IOC_WRITE, 0x5657, 0x84 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_S_EDID", _IOC_READ|_IOC_WRITE, 0x5629, 0x28 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_S_FMT", _IOC_READ|_IOC_WRITE, 0x5605, 0x58 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_S_FRAME_INTERVAL", _IOC_READ|_IOC_WRITE, 0x5616, 0x30 },
+{ "linux/v4l2-subdev.h", "VIDIOC_SUBDEV_S_SELECTION", _IOC_READ|_IOC_WRITE, 0x563e, 0x40 },
+{ "linux/vfio.h", "VFIO_CHECK_EXTENSION", _IOC_NONE, 0x3b65, 0x00 },
+{ "linux/vfio.h", "VFIO_DEVICE_GET_INFO", _IOC_NONE, 0x3b6b, 0x00 },
+{ "linux/vfio.h", "VFIO_DEVICE_GET_IRQ_INFO", _IOC_NONE, 0x3b6d, 0x00 },
+{ "linux/vfio.h", "VFIO_DEVICE_GET_PCI_HOT_RESET_INFO", _IOC_NONE, 0x3b70, 0x00 },
+{ "linux/vfio.h", "VFIO_DEVICE_GET_REGION_INFO", _IOC_NONE, 0x3b6c, 0x00 },
+{ "linux/vfio.h", "VFIO_DEVICE_PCI_HOT_RESET", _IOC_NONE, 0x3b71, 0x00 },
+{ "linux/vfio.h", "VFIO_DEVICE_RESET", _IOC_NONE, 0x3b6f, 0x00 },
+{ "linux/vfio.h", "VFIO_DEVICE_SET_IRQS", _IOC_NONE, 0x3b6e, 0x00 },
+{ "linux/vfio.h", "VFIO_EEH_PE_OP", _IOC_NONE, 0x3b79, 0x00 },
+{ "linux/vfio.h", "VFIO_GET_API_VERSION", _IOC_NONE, 0x3b64, 0x00 },
+{ "linux/vfio.h", "VFIO_GROUP_GET_DEVICE_FD", _IOC_NONE, 0x3b6a, 0x00 },
+{ "linux/vfio.h", "VFIO_GROUP_GET_STATUS", _IOC_NONE, 0x3b67, 0x00 },
+{ "linux/vfio.h", "VFIO_GROUP_SET_CONTAINER", _IOC_NONE, 0x3b68, 0x00 },
+{ "linux/vfio.h", "VFIO_GROUP_UNSET_CONTAINER", _IOC_NONE, 0x3b69, 0x00 },
+{ "linux/vfio.h", "VFIO_IOMMU_DISABLE", _IOC_NONE, 0x3b74, 0x00 },
+{ "linux/vfio.h", "VFIO_IOMMU_ENABLE", _IOC_NONE, 0x3b73, 0x00 },
+{ "linux/vfio.h", "VFIO_IOMMU_GET_INFO", _IOC_NONE, 0x3b70, 0x00 },
+{ "linux/vfio.h", "VFIO_IOMMU_MAP_DMA", _IOC_NONE, 0x3b71, 0x00 },
+{ "linux/vfio.h", "VFIO_IOMMU_SPAPR_TCE_GET_INFO", _IOC_NONE, 0x3b70, 0x00 },
+{ "linux/vfio.h", "VFIO_IOMMU_UNMAP_DMA", _IOC_NONE, 0x3b72, 0x00 },
+{ "linux/vfio.h", "VFIO_SET_IOMMU", _IOC_NONE, 0x3b66, 0x00 },
+{ "linux/vhost.h", "VHOST_GET_FEATURES", _IOC_READ, 0xaf00, 0x08 },
+{ "linux/vhost.h", "VHOST_GET_VRING_BASE", _IOC_READ|_IOC_WRITE, 0xaf12, 0x08 },
+{ "linux/vhost.h", "VHOST_NET_SET_BACKEND", _IOC_WRITE, 0xaf30, 0x08 },
+{ "linux/vhost.h", "VHOST_RESET_OWNER", _IOC_NONE, 0xaf02, 0x00 },
+{ "linux/vhost.h", "VHOST_SCSI_CLEAR_ENDPOINT", _IOC_WRITE, 0xaf41, 0xe8 },
+{ "linux/vhost.h", "VHOST_SCSI_GET_ABI_VERSION", _IOC_WRITE, 0xaf42, 0x04 },
+{ "linux/vhost.h", "VHOST_SCSI_GET_EVENTS_MISSED", _IOC_WRITE, 0xaf44, 0x04 },
+{ "linux/vhost.h", "VHOST_SCSI_SET_ENDPOINT", _IOC_WRITE, 0xaf40, 0xe8 },
+{ "linux/vhost.h", "VHOST_SCSI_SET_EVENTS_MISSED", _IOC_WRITE, 0xaf43, 0x04 },
+{ "linux/vhost.h", "VHOST_SET_FEATURES", _IOC_WRITE, 0xaf00, 0x08 },
+{ "linux/vhost.h", "VHOST_SET_LOG_BASE", _IOC_WRITE, 0xaf04, 0x08 },
+{ "linux/vhost.h", "VHOST_SET_LOG_FD", _IOC_WRITE, 0xaf07, 0x04 },
+{ "linux/vhost.h", "VHOST_SET_MEM_TABLE", _IOC_WRITE, 0xaf03, 0x08 },
+{ "linux/vhost.h", "VHOST_SET_OWNER", _IOC_NONE, 0xaf01, 0x00 },
+{ "linux/vhost.h", "VHOST_SET_VRING_ADDR", _IOC_WRITE, 0xaf11, 0x28 },
+{ "linux/vhost.h", "VHOST_SET_VRING_BASE", _IOC_WRITE, 0xaf12, 0x08 },
+{ "linux/vhost.h", "VHOST_SET_VRING_CALL", _IOC_WRITE, 0xaf21, 0x08 },
+{ "linux/vhost.h", "VHOST_SET_VRING_ERR", _IOC_WRITE, 0xaf22, 0x08 },
+{ "linux/vhost.h", "VHOST_SET_VRING_KICK", _IOC_WRITE, 0xaf20, 0x08 },
+{ "linux/vhost.h", "VHOST_SET_VRING_NUM", _IOC_WRITE, 0xaf10, 0x08 },
+{ "linux/videodev2.h", "VIDIOC_CREATE_BUFS", _IOC_READ|_IOC_WRITE, 0x565c, 0x100 },
+{ "linux/videodev2.h", "VIDIOC_CROPCAP", _IOC_READ|_IOC_WRITE, 0x563a, 0x2c },
+{ "linux/videodev2.h", "VIDIOC_DBG_G_CHIP_INFO", _IOC_READ|_IOC_WRITE, 0x5666, 0xc8 },
+{ "linux/videodev2.h", "VIDIOC_DBG_G_REGISTER", _IOC_READ|_IOC_WRITE, 0x5650, 0x38 },
+{ "linux/videodev2.h", "VIDIOC_DBG_S_REGISTER", _IOC_WRITE, 0x564f, 0x38 },
+{ "linux/videodev2.h", "VIDIOC_DECODER_CMD", _IOC_READ|_IOC_WRITE, 0x5660, 0x48 },
+{ "linux/videodev2.h", "VIDIOC_DQBUF", _IOC_READ|_IOC_WRITE, 0x5611, 0x58 },
+{ "linux/videodev2.h", "VIDIOC_DQEVENT", _IOC_READ, 0x5659, 0x88 },
+{ "linux/videodev2.h", "VIDIOC_DV_TIMINGS_CAP", _IOC_READ|_IOC_WRITE, 0x5664, 0x90 },
+{ "linux/videodev2.h", "VIDIOC_ENCODER_CMD", _IOC_READ|_IOC_WRITE, 0x564d, 0x28 },
+{ "linux/videodev2.h", "VIDIOC_ENUMAUDIO", _IOC_READ|_IOC_WRITE, 0x5641, 0x34 },
+{ "linux/videodev2.h", "VIDIOC_ENUMAUDOUT", _IOC_READ|_IOC_WRITE, 0x5642, 0x34 },
+{ "linux/videodev2.h", "VIDIOC_ENUMINPUT", _IOC_READ|_IOC_WRITE, 0x561a, 0x50 },
+{ "linux/videodev2.h", "VIDIOC_ENUMOUTPUT", _IOC_READ|_IOC_WRITE, 0x5630, 0x48 },
+{ "linux/videodev2.h", "VIDIOC_ENUMSTD", _IOC_READ|_IOC_WRITE, 0x5619, 0x48 },
+{ "linux/videodev2.h", "VIDIOC_ENUM_DV_TIMINGS", _IOC_READ|_IOC_WRITE, 0x5662, 0x94 },
+{ "linux/videodev2.h", "VIDIOC_ENUM_FMT", _IOC_READ|_IOC_WRITE, 0x5602, 0x40 },
+{ "linux/videodev2.h", "VIDIOC_ENUM_FRAMEINTERVALS", _IOC_READ|_IOC_WRITE, 0x564b, 0x34 },
+{ "linux/videodev2.h", "VIDIOC_ENUM_FRAMESIZES", _IOC_READ|_IOC_WRITE, 0x564a, 0x2c },
+{ "linux/videodev2.h", "VIDIOC_ENUM_FREQ_BANDS", _IOC_READ|_IOC_WRITE, 0x5665, 0x40 },
+{ "linux/videodev2.h", "VIDIOC_EXPBUF", _IOC_READ|_IOC_WRITE, 0x5610, 0x40 },
+{ "linux/videodev2.h", "VIDIOC_G_AUDIO", _IOC_READ, 0x5621, 0x34 },
+{ "linux/videodev2.h", "VIDIOC_G_AUDOUT", _IOC_READ, 0x5631, 0x34 },
+{ "linux/videodev2.h", "VIDIOC_G_CROP", _IOC_READ|_IOC_WRITE, 0x563b, 0x14 },
+{ "linux/videodev2.h", "VIDIOC_G_CTRL", _IOC_READ|_IOC_WRITE, 0x561b, 0x08 },
+{ "linux/videodev2.h", "VIDIOC_G_DV_TIMINGS", _IOC_READ|_IOC_WRITE, 0x5658, 0x84 },
+{ "linux/videodev2.h", "VIDIOC_G_EDID", _IOC_READ|_IOC_WRITE, 0x5628, 0x28 },
+{ "linux/videodev2.h", "VIDIOC_G_ENC_INDEX", _IOC_READ, 0x564c, 0x818 },
+{ "linux/videodev2.h", "VIDIOC_G_EXT_CTRLS", _IOC_READ|_IOC_WRITE, 0x5647, 0x20 },
+{ "linux/videodev2.h", "VIDIOC_G_FBUF", _IOC_READ, 0x560a, 0x30 },
+{ "linux/videodev2.h", "VIDIOC_G_FMT", _IOC_READ|_IOC_WRITE, 0x5604, 0xd0 },
+{ "linux/videodev2.h", "VIDIOC_G_FREQUENCY", _IOC_READ|_IOC_WRITE, 0x5638, 0x2c },
+{ "linux/videodev2.h", "VIDIOC_G_INPUT", _IOC_READ, 0x5626, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_G_JPEGCOMP", _IOC_READ, 0x563d, 0x8c },
+{ "linux/videodev2.h", "VIDIOC_G_MODULATOR", _IOC_READ|_IOC_WRITE, 0x5636, 0x44 },
+{ "linux/videodev2.h", "VIDIOC_G_OUTPUT", _IOC_READ, 0x562e, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_G_PARM", _IOC_READ|_IOC_WRITE, 0x5615, 0xcc },
+{ "linux/videodev2.h", "VIDIOC_G_PRIORITY", _IOC_READ, 0x5643, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_G_SELECTION", _IOC_READ|_IOC_WRITE, 0x565e, 0x40 },
+{ "linux/videodev2.h", "VIDIOC_G_SLICED_VBI_CAP", _IOC_READ|_IOC_WRITE, 0x5645, 0x74 },
+{ "linux/videodev2.h", "VIDIOC_G_STD", _IOC_READ, 0x5617, 0x08 },
+{ "linux/videodev2.h", "VIDIOC_G_TUNER", _IOC_READ|_IOC_WRITE, 0x561d, 0x54 },
+{ "linux/videodev2.h", "VIDIOC_LOG_STATUS", _IOC_NONE, 0x5646, 0x00 },
+{ "linux/videodev2.h", "VIDIOC_OVERLAY", _IOC_WRITE, 0x560e, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_PREPARE_BUF", _IOC_READ|_IOC_WRITE, 0x565d, 0x58 },
+{ "linux/videodev2.h", "VIDIOC_QBUF", _IOC_READ|_IOC_WRITE, 0x560f, 0x58 },
+{ "linux/videodev2.h", "VIDIOC_QUERYBUF", _IOC_READ|_IOC_WRITE, 0x5609, 0x58 },
+{ "linux/videodev2.h", "VIDIOC_QUERYCAP", _IOC_READ, 0x5600, 0x68 },
+{ "linux/videodev2.h", "VIDIOC_QUERYCTRL", _IOC_READ|_IOC_WRITE, 0x5624, 0x44 },
+{ "linux/videodev2.h", "VIDIOC_QUERYMENU", _IOC_READ|_IOC_WRITE, 0x5625, 0x2c },
+{ "linux/videodev2.h", "VIDIOC_QUERYSTD", _IOC_READ, 0x563f, 0x08 },
+{ "linux/videodev2.h", "VIDIOC_QUERY_DV_TIMINGS", _IOC_READ, 0x5663, 0x84 },
+{ "linux/videodev2.h", "VIDIOC_QUERY_EXT_CTRL", _IOC_READ|_IOC_WRITE, 0x5667, 0xe8 },
+{ "linux/videodev2.h", "VIDIOC_REQBUFS", _IOC_READ|_IOC_WRITE, 0x5608, 0x14 },
+{ "linux/videodev2.h", "VIDIOC_RESERVED", _IOC_NONE, 0x5601, 0x00 },
+{ "linux/videodev2.h", "VIDIOC_STREAMOFF", _IOC_WRITE, 0x5613, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_STREAMON", _IOC_WRITE, 0x5612, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_SUBSCRIBE_EVENT", _IOC_WRITE, 0x565a, 0x20 },
+{ "linux/videodev2.h", "VIDIOC_S_AUDIO", _IOC_WRITE, 0x5622, 0x34 },
+{ "linux/videodev2.h", "VIDIOC_S_AUDOUT", _IOC_WRITE, 0x5632, 0x34 },
+{ "linux/videodev2.h", "VIDIOC_S_CROP", _IOC_WRITE, 0x563c, 0x14 },
+{ "linux/videodev2.h", "VIDIOC_S_CTRL", _IOC_READ|_IOC_WRITE, 0x561c, 0x08 },
+{ "linux/videodev2.h", "VIDIOC_S_DV_TIMINGS", _IOC_READ|_IOC_WRITE, 0x5657, 0x84 },
+{ "linux/videodev2.h", "VIDIOC_S_EDID", _IOC_READ|_IOC_WRITE, 0x5629, 0x28 },
+{ "linux/videodev2.h", "VIDIOC_S_EXT_CTRLS", _IOC_READ|_IOC_WRITE, 0x5648, 0x20 },
+{ "linux/videodev2.h", "VIDIOC_S_FBUF", _IOC_WRITE, 0x560b, 0x30 },
+{ "linux/videodev2.h", "VIDIOC_S_FMT", _IOC_READ|_IOC_WRITE, 0x5605, 0xd0 },
+{ "linux/videodev2.h", "VIDIOC_S_FREQUENCY", _IOC_WRITE, 0x5639, 0x2c },
+{ "linux/videodev2.h", "VIDIOC_S_HW_FREQ_SEEK", _IOC_WRITE, 0x5652, 0x30 },
+{ "linux/videodev2.h", "VIDIOC_S_INPUT", _IOC_READ|_IOC_WRITE, 0x5627, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_S_JPEGCOMP", _IOC_WRITE, 0x563e, 0x8c },
+{ "linux/videodev2.h", "VIDIOC_S_MODULATOR", _IOC_WRITE, 0x5637, 0x44 },
+{ "linux/videodev2.h", "VIDIOC_S_OUTPUT", _IOC_READ|_IOC_WRITE, 0x562f, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_S_PARM", _IOC_READ|_IOC_WRITE, 0x5616, 0xcc },
+{ "linux/videodev2.h", "VIDIOC_S_PRIORITY", _IOC_WRITE, 0x5644, 0x04 },
+{ "linux/videodev2.h", "VIDIOC_S_SELECTION", _IOC_READ|_IOC_WRITE, 0x565f, 0x40 },
+{ "linux/videodev2.h", "VIDIOC_S_STD", _IOC_WRITE, 0x5618, 0x08 },
+{ "linux/videodev2.h", "VIDIOC_S_TUNER", _IOC_WRITE, 0x561e, 0x54 },
+{ "linux/videodev2.h", "VIDIOC_TRY_DECODER_CMD", _IOC_READ|_IOC_WRITE, 0x5661, 0x48 },
+{ "linux/videodev2.h", "VIDIOC_TRY_ENCODER_CMD", _IOC_READ|_IOC_WRITE, 0x564e, 0x28 },
+{ "linux/videodev2.h", "VIDIOC_TRY_EXT_CTRLS", _IOC_READ|_IOC_WRITE, 0x5649, 0x20 },
+{ "linux/videodev2.h", "VIDIOC_TRY_FMT", _IOC_READ|_IOC_WRITE, 0x5640, 0xd0 },
+{ "linux/videodev2.h", "VIDIOC_UNSUBSCRIBE_EVENT", _IOC_WRITE, 0x565b, 0x20 },
+{ "linux/vm_sockets.h", "IOCTL_VM_SOCKETS_GET_LOCAL_CID", _IOC_NONE, 0x07b9, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_CTX_ADD_NOTIFICATION", _IOC_NONE, 0x07af, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_CTX_GET_CPT_STATE", _IOC_NONE, 0x07b1, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_CTX_REMOVE_NOTIFICATION", _IOC_NONE, 0x07b0, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_CTX_SET_CPT_STATE", _IOC_NONE, 0x07b2, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_DATAGRAM_RECEIVE", _IOC_NONE, 0x07ac, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_DATAGRAM_SEND", _IOC_NONE, 0x07ab, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_GET_CONTEXT_ID", _IOC_NONE, 0x07b3, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_INIT_CONTEXT", _IOC_NONE, 0x07a0, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_NOTIFICATIONS_RECEIVE", _IOC_NONE, 0x07a6, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_NOTIFY_RESOURCE", _IOC_NONE, 0x07a5, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_QUEUEPAIR_ALLOC", _IOC_NONE, 0x07a8, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_QUEUEPAIR_DETACH", _IOC_NONE, 0x07aa, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE", _IOC_NONE, 0x07a9, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_QUEUEPAIR_SETVA", _IOC_NONE, 0x07a4, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_SET_NOTIFY", _IOC_NONE, 0x07cb, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_SOCKETS_GET_AF_VALUE", _IOC_NONE, 0x07b8, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_SOCKETS_GET_LOCAL_CID", _IOC_NONE, 0x07b9, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_SOCKETS_VERSION", _IOC_NONE, 0x07b4, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_VERSION", _IOC_NONE, 0x079f, 0x00 },
+{ "linux/vmw_vmci_defs.h", "IOCTL_VMCI_VERSION2", _IOC_NONE, 0x07a7, 0x00 },
+{ "linux/vsp1.h", "VIDIOC_VSP1_LUT_CONFIG", _IOC_READ|_IOC_WRITE, 0x56c1, 0x400 },
+{ "linux/vt.h", "VT_ACTIVATE", 0, 0x5606, 0 },
+{ "linux/vt.h", "VT_DISALLOCATE", 0, 0x5608, 0 },
+{ "linux/vt.h", "VT_GETHIFONTMASK", 0, 0x560D, 0 },
+{ "linux/vt.h", "VT_GETMODE", 0, 0x5601, 0 },
+{ "linux/vt.h", "VT_GETSTATE", 0, 0x5603, 0 },
+{ "linux/vt.h", "VT_LOCKSWITCH", 0, 0x560B, 0 },
+{ "linux/vt.h", "VT_OPENQRY", 0, 0x5600, 0 },
+{ "linux/vt.h", "VT_RELDISP", 0, 0x5605, 0 },
+{ "linux/vt.h", "VT_RESIZE", 0, 0x5609, 0 },
+{ "linux/vt.h", "VT_RESIZEX", 0, 0x560A, 0 },
+{ "linux/vt.h", "VT_SENDSIG", 0, 0x5604, 0 },
+{ "linux/vt.h", "VT_SETACTIVATE", 0, 0x560F, 0 },
+{ "linux/vt.h", "VT_SETMODE", 0, 0x5602, 0 },
+{ "linux/vt.h", "VT_UNLOCKSWITCH", 0, 0x560C, 0 },
+{ "linux/vt.h", "VT_WAITACTIVE", 0, 0x5607, 0 },
+{ "linux/vt.h", "VT_WAITEVENT", 0, 0x560E, 0 },
+{ "linux/watchdog.h", "WDIOC_GETBOOTSTATUS", _IOC_READ, 0x5702, 0x04 },
+{ "linux/watchdog.h", "WDIOC_GETPRETIMEOUT", _IOC_READ, 0x5709, 0x04 },
+{ "linux/watchdog.h", "WDIOC_GETSTATUS", _IOC_READ, 0x5701, 0x04 },
+{ "linux/watchdog.h", "WDIOC_GETSUPPORT", _IOC_READ, 0x5700, 0x28 },
+{ "linux/watchdog.h", "WDIOC_GETTEMP", _IOC_READ, 0x5703, 0x04 },
+{ "linux/watchdog.h", "WDIOC_GETTIMELEFT", _IOC_READ, 0x570a, 0x04 },
+{ "linux/watchdog.h", "WDIOC_GETTIMEOUT", _IOC_READ, 0x5707, 0x04 },
+{ "linux/watchdog.h", "WDIOC_KEEPALIVE", _IOC_READ, 0x5705, 0x04 },
+{ "linux/watchdog.h", "WDIOC_SETOPTIONS", _IOC_READ, 0x5704, 0x04 },
+{ "linux/watchdog.h", "WDIOC_SETPRETIMEOUT", _IOC_READ|_IOC_WRITE, 0x5708, 0x04 },
+{ "linux/watchdog.h", "WDIOC_SETTIMEOUT", _IOC_READ|_IOC_WRITE, 0x5706, 0x04 },
+{ "linux/wireless.h", "SIOCGIWAP", 0, 0x8B15, 0 },
+{ "linux/wireless.h", "SIOCGIWAPLIST", 0, 0x8B17, 0 },
+{ "linux/wireless.h", "SIOCGIWAUTH", 0, 0x8B33, 0 },
+{ "linux/wireless.h", "SIOCGIWENCODE", 0, 0x8B2B, 0 },
+{ "linux/wireless.h", "SIOCGIWENCODEEXT", 0, 0x8B35, 0 },
+{ "linux/wireless.h", "SIOCGIWESSID", 0, 0x8B1B, 0 },
+{ "linux/wireless.h", "SIOCGIWFRAG", 0, 0x8B25, 0 },
+{ "linux/wireless.h", "SIOCGIWFREQ", 0, 0x8B05, 0 },
+{ "linux/wireless.h", "SIOCGIWGENIE", 0, 0x8B31, 0 },
+{ "linux/wireless.h", "SIOCGIWMODE", 0, 0x8B07, 0 },
+{ "linux/wireless.h", "SIOCGIWNAME", 0, 0x8B01, 0 },
+{ "linux/wireless.h", "SIOCGIWNICKN", 0, 0x8B1D, 0 },
+{ "linux/wireless.h", "SIOCGIWNWID", 0, 0x8B03, 0 },
+{ "linux/wireless.h", "SIOCGIWPOWER", 0, 0x8B2D, 0 },
+{ "linux/wireless.h", "SIOCGIWPRIV", 0, 0x8B0D, 0 },
+{ "linux/wireless.h", "SIOCGIWRANGE", 0, 0x8B0B, 0 },
+{ "linux/wireless.h", "SIOCGIWRATE", 0, 0x8B21, 0 },
+{ "linux/wireless.h", "SIOCGIWRETRY", 0, 0x8B29, 0 },
+{ "linux/wireless.h", "SIOCGIWRTS", 0, 0x8B23, 0 },
+{ "linux/wireless.h", "SIOCGIWSCAN", 0, 0x8B19, 0 },
+{ "linux/wireless.h", "SIOCGIWSENS", 0, 0x8B09, 0 },
+{ "linux/wireless.h", "SIOCGIWSPY", 0, 0x8B11, 0 },
+{ "linux/wireless.h", "SIOCGIWSTATS", 0, 0x8B0F, 0 },
+{ "linux/wireless.h", "SIOCGIWTHRSPY", 0, 0x8B13, 0 },
+{ "linux/wireless.h", "SIOCGIWTXPOW", 0, 0x8B27, 0 },
+{ "linux/wireless.h", "SIOCIWFIRST", 0, 0x8B00, 0 },
+{ "linux/wireless.h", "SIOCIWFIRSTPRIV", 0, 0x8BE0, 0 },
+{ "linux/wireless.h", "SIOCIWLASTPRIV", 0, 0x8BFF, 0 },
+{ "linux/wireless.h", "SIOCSIWAP", 0, 0x8B14, 0 },
+{ "linux/wireless.h", "SIOCSIWAUTH", 0, 0x8B32, 0 },
+{ "linux/wireless.h", "SIOCSIWCOMMIT", 0, 0x8B00, 0 },
+{ "linux/wireless.h", "SIOCSIWENCODE", 0, 0x8B2A, 0 },
+{ "linux/wireless.h", "SIOCSIWENCODEEXT", 0, 0x8B34, 0 },
+{ "linux/wireless.h", "SIOCSIWESSID", 0, 0x8B1A, 0 },
+{ "linux/wireless.h", "SIOCSIWFRAG", 0, 0x8B24, 0 },
+{ "linux/wireless.h", "SIOCSIWFREQ", 0, 0x8B04, 0 },
+{ "linux/wireless.h", "SIOCSIWGENIE", 0, 0x8B30, 0 },
+{ "linux/wireless.h", "SIOCSIWMLME", 0, 0x8B16, 0 },
+{ "linux/wireless.h", "SIOCSIWMODE", 0, 0x8B06, 0 },
+{ "linux/wireless.h", "SIOCSIWNICKN", 0, 0x8B1C, 0 },
+{ "linux/wireless.h", "SIOCSIWNWID", 0, 0x8B02, 0 },
+{ "linux/wireless.h", "SIOCSIWPMKSA", 0, 0x8B36, 0 },
+{ "linux/wireless.h", "SIOCSIWPOWER", 0, 0x8B2C, 0 },
+{ "linux/wireless.h", "SIOCSIWPRIV", 0, 0x8B0C, 0 },
+{ "linux/wireless.h", "SIOCSIWRANGE", 0, 0x8B0A, 0 },
+{ "linux/wireless.h", "SIOCSIWRATE", 0, 0x8B20, 0 },
+{ "linux/wireless.h", "SIOCSIWRETRY", 0, 0x8B28, 0 },
+{ "linux/wireless.h", "SIOCSIWRTS", 0, 0x8B22, 0 },
+{ "linux/wireless.h", "SIOCSIWSCAN", 0, 0x8B18, 0 },
+{ "linux/wireless.h", "SIOCSIWSENS", 0, 0x8B08, 0 },
+{ "linux/wireless.h", "SIOCSIWSPY", 0, 0x8B10, 0 },
+{ "linux/wireless.h", "SIOCSIWSTATS", 0, 0x8B0E, 0 },
+{ "linux/wireless.h", "SIOCSIWTHRSPY", 0, 0x8B12, 0 },
+{ "linux/wireless.h", "SIOCSIWTXPOW", 0, 0x8B26, 0 },
+{ "media/adv7842.h", "ADV7842_CMD_RAM_TEST", _IOC_NONE, 0x56c0, 0x00 },
+{ "media/bt819.h", "BT819_FIFO_RESET_HIGH", _IOC_NONE, 0x6201, 0x00 },
+{ "media/bt819.h", "BT819_FIFO_RESET_LOW", _IOC_NONE, 0x6200, 0x00 },
+{ "media/davinci/vpfe_capture.h", "VPFE_CMD_S_CCDC_RAW_PARAMS", _IOC_WRITE, 0x56c1, 0x08 },
+{ "media/exynos-fimc.h", "S5P_FIMC_TX_END_NOTIFY", _IOC_NONE, 0x6500, 0x00 },
+{ "media/lirc.h", "LIRC_GET_FEATURES", _IOC_READ, 0x6900, 0x04 },
+{ "media/lirc.h", "LIRC_GET_LENGTH", _IOC_READ, 0x690f, 0x04 },
+{ "media/lirc.h", "LIRC_GET_MAX_FILTER_PULSE", _IOC_READ, 0x690b, 0x04 },
+{ "media/lirc.h", "LIRC_GET_MAX_FILTER_SPACE", _IOC_READ, 0x690d, 0x04 },
+{ "media/lirc.h", "LIRC_GET_MAX_TIMEOUT", _IOC_READ, 0x6909, 0x04 },
+{ "media/lirc.h", "LIRC_GET_MIN_FILTER_PULSE", _IOC_READ, 0x690a, 0x04 },
+{ "media/lirc.h", "LIRC_GET_MIN_FILTER_SPACE", _IOC_READ, 0x690c, 0x04 },
+{ "media/lirc.h", "LIRC_GET_MIN_TIMEOUT", _IOC_READ, 0x6908, 0x04 },
+{ "media/lirc.h", "LIRC_GET_REC_CARRIER", _IOC_READ, 0x6904, 0x04 },
+{ "media/lirc.h", "LIRC_GET_REC_DUTY_CYCLE", _IOC_READ, 0x6906, 0x04 },
+{ "media/lirc.h", "LIRC_GET_REC_MODE", _IOC_READ, 0x6902, 0x04 },
+{ "media/lirc.h", "LIRC_GET_REC_RESOLUTION", _IOC_READ, 0x6907, 0x04 },
+{ "media/lirc.h", "LIRC_GET_SEND_CARRIER", _IOC_READ, 0x6903, 0x04 },
+{ "media/lirc.h", "LIRC_GET_SEND_DUTY_CYCLE", _IOC_READ, 0x6905, 0x04 },
+{ "media/lirc.h", "LIRC_GET_SEND_MODE", _IOC_READ, 0x6901, 0x04 },
+{ "media/lirc.h", "LIRC_NOTIFY_DECODE", _IOC_NONE, 0x6920, 0x00 },
+{ "media/lirc.h", "LIRC_SETUP_END", _IOC_NONE, 0x6922, 0x00 },
+{ "media/lirc.h", "LIRC_SETUP_START", _IOC_NONE, 0x6921, 0x00 },
+{ "media/lirc.h", "LIRC_SET_MEASURE_CARRIER_MODE", _IOC_WRITE, 0x691d, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_CARRIER", _IOC_WRITE, 0x6914, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_CARRIER_RANGE", _IOC_WRITE, 0x691f, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_DUTY_CYCLE", _IOC_WRITE, 0x6916, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_DUTY_CYCLE_RANGE", _IOC_WRITE, 0x691e, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_FILTER", _IOC_WRITE, 0x691c, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_FILTER_PULSE", _IOC_WRITE, 0x691a, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_FILTER_SPACE", _IOC_WRITE, 0x691b, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_MODE", _IOC_WRITE, 0x6912, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_TIMEOUT", _IOC_WRITE, 0x6918, 0x04 },
+{ "media/lirc.h", "LIRC_SET_REC_TIMEOUT_REPORTS", _IOC_WRITE, 0x6919, 0x04 },
+{ "media/lirc.h", "LIRC_SET_SEND_CARRIER", _IOC_WRITE, 0x6913, 0x04 },
+{ "media/lirc.h", "LIRC_SET_SEND_DUTY_CYCLE", _IOC_WRITE, 0x6915, 0x04 },
+{ "media/lirc.h", "LIRC_SET_SEND_MODE", _IOC_WRITE, 0x6911, 0x04 },
+{ "media/lirc.h", "LIRC_SET_TRANSMITTER_MASK", _IOC_WRITE, 0x6917, 0x04 },
+{ "media/lirc.h", "LIRC_SET_WIDEBAND_RECEIVER", _IOC_WRITE, 0x6923, 0x04 },
+{ "media/saa6588.h", "SAA6588_CMD_CLOSE", _IOC_WRITE, 0x5202, 0x04 },
+{ "media/saa6588.h", "SAA6588_CMD_POLL", _IOC_READ, 0x5204, 0x04 },
+{ "media/saa6588.h", "SAA6588_CMD_READ", _IOC_READ, 0x5203, 0x04 },
+{ "media/si4713.h", "SI4713_IOC_MEASURE_RNL", _IOC_READ|_IOC_WRITE, 0x56c0, 0x1c },
+{ "media/v4l2-common.h", "TUNER_SET_CONFIG", _IOC_WRITE, 0x645c, 0x10 },
+{ "media/v4l2-common.h", "VIDIOC_INT_RESET", _IOC_WRITE, 0x6466, 0x04 },
+{ "media/v4l2-subdev.h", "V4L2_SUBDEV_IR_RX_NOTIFY", _IOC_WRITE, 0x7600, 0x04 },
+{ "media/v4l2-subdev.h", "V4L2_SUBDEV_IR_TX_NOTIFY", _IOC_WRITE, 0x7601, 0x04 },
+{ "misc/cxl.h", "CXL_IOCTL_GET_PROCESS_ELEMENT", _IOC_READ, 0xca01, 0x04 },
+{ "misc/cxl.h", "CXL_IOCTL_START_WORK", _IOC_WRITE, 0xca00, 0x40 },
+{ "mtd/mtd-abi.h", "ECCGETLAYOUT", _IOC_READ, 0x4d11, 0x148 },
+{ "mtd/mtd-abi.h", "ECCGETSTATS", _IOC_READ, 0x4d12, 0x10 },
+{ "mtd/mtd-abi.h", "MEMERASE", _IOC_WRITE, 0x4d02, 0x08 },
+{ "mtd/mtd-abi.h", "MEMERASE64", _IOC_WRITE, 0x4d14, 0x10 },
+{ "mtd/mtd-abi.h", "MEMGETBADBLOCK", _IOC_WRITE, 0x4d0b, 0x08 },
+{ "mtd/mtd-abi.h", "MEMGETINFO", _IOC_READ, 0x4d01, 0x20 },
+{ "mtd/mtd-abi.h", "MEMGETOOBSEL", _IOC_READ, 0x4d0a, 0xc8 },
+{ "mtd/mtd-abi.h", "MEMGETREGIONCOUNT", _IOC_READ, 0x4d07, 0x04 },
+{ "mtd/mtd-abi.h", "MEMGETREGIONINFO", _IOC_READ|_IOC_WRITE, 0x4d08, 0x10 },
+{ "mtd/mtd-abi.h", "MEMISLOCKED", _IOC_READ, 0x4d17, 0x08 },
+{ "mtd/mtd-abi.h", "MEMLOCK", _IOC_WRITE, 0x4d05, 0x08 },
+{ "mtd/mtd-abi.h", "MEMREADOOB", _IOC_READ|_IOC_WRITE, 0x4d04, 0x10 },
+{ "mtd/mtd-abi.h", "MEMREADOOB64", _IOC_READ|_IOC_WRITE, 0x4d16, 0x18 },
+{ "mtd/mtd-abi.h", "MEMSETBADBLOCK", _IOC_WRITE, 0x4d0c, 0x08 },
+{ "mtd/mtd-abi.h", "MEMUNLOCK", _IOC_WRITE, 0x4d06, 0x08 },
+{ "mtd/mtd-abi.h", "MEMWRITE", _IOC_READ|_IOC_WRITE, 0x4d18, 0x30 },
+{ "mtd/mtd-abi.h", "MEMWRITEOOB", _IOC_READ|_IOC_WRITE, 0x4d03, 0x10 },
+{ "mtd/mtd-abi.h", "MEMWRITEOOB64", _IOC_READ|_IOC_WRITE, 0x4d15, 0x18 },
+{ "mtd/mtd-abi.h", "MTDFILEMODE", _IOC_NONE, 0x4d13, 0x00 },
+{ "mtd/mtd-abi.h", "OTPGETREGIONCOUNT", _IOC_WRITE, 0x4d0e, 0x04 },
+{ "mtd/mtd-abi.h", "OTPGETREGIONINFO", _IOC_WRITE, 0x4d0f, 0x0c },
+{ "mtd/mtd-abi.h", "OTPLOCK", _IOC_READ, 0x4d10, 0x0c },
+{ "mtd/mtd-abi.h", "OTPSELECT", _IOC_READ, 0x4d0d, 0x04 },
+{ "mtd/ubi-user.h", "UBI_IOCATT", _IOC_WRITE, 0x6f40, 0x18 },
+{ "mtd/ubi-user.h", "UBI_IOCDET", _IOC_WRITE, 0x6f41, 0x04 },
+{ "mtd/ubi-user.h", "UBI_IOCEBCH", _IOC_WRITE, 0x4f02, 0x04 },
+{ "mtd/ubi-user.h", "UBI_IOCEBER", _IOC_WRITE, 0x4f01, 0x04 },
+{ "mtd/ubi-user.h", "UBI_IOCEBISMAP", _IOC_READ, 0x4f05, 0x04 },
+{ "mtd/ubi-user.h", "UBI_IOCEBMAP", _IOC_WRITE, 0x4f03, 0x08 },
+{ "mtd/ubi-user.h", "UBI_IOCEBUNMAP", _IOC_WRITE, 0x4f04, 0x04 },
+{ "mtd/ubi-user.h", "UBI_IOCMKVOL", _IOC_WRITE, 0x6f00, 0x98 },
+{ "mtd/ubi-user.h", "UBI_IOCRMVOL", _IOC_WRITE, 0x6f01, 0x04 },
+{ "mtd/ubi-user.h", "UBI_IOCRNVOL", _IOC_WRITE, 0x6f03, 0x1110 },
+{ "mtd/ubi-user.h", "UBI_IOCRSVOL", _IOC_WRITE, 0x6f02, 0x0c },
+{ "mtd/ubi-user.h", "UBI_IOCSETVOLPROP", _IOC_WRITE, 0x4f06, 0x10 },
+{ "mtd/ubi-user.h", "UBI_IOCVOLCRBLK", _IOC_WRITE, 0x4f07, 0x80 },
+{ "mtd/ubi-user.h", "UBI_IOCVOLRMBLK", _IOC_NONE, 0x4f08, 0x00 },
+{ "mtd/ubi-user.h", "UBI_IOCVOLUP", _IOC_WRITE, 0x4f00, 0x08 },
+{ "net/bluetooth/hci_sock.h", "HCIBLOCKADDR", _IOC_WRITE, 0x48e6, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIDEVDOWN", _IOC_WRITE, 0x48ca, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIDEVRESET", _IOC_WRITE, 0x48cb, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIDEVRESTAT", _IOC_WRITE, 0x48cc, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIDEVUP", _IOC_WRITE, 0x48c9, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIGETAUTHINFO", _IOC_READ, 0x48d7, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIGETCONNINFO", _IOC_READ, 0x48d5, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIGETCONNLIST", _IOC_READ, 0x48d4, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIGETDEVINFO", _IOC_READ, 0x48d3, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIGETDEVLIST", _IOC_READ, 0x48d2, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIINQUIRY", _IOC_READ, 0x48f0, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETACLMTU", _IOC_WRITE, 0x48e3, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETAUTH", _IOC_WRITE, 0x48de, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETENCRYPT", _IOC_WRITE, 0x48df, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETLINKMODE", _IOC_WRITE, 0x48e2, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETLINKPOL", _IOC_WRITE, 0x48e1, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETPTYPE", _IOC_WRITE, 0x48e0, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETRAW", _IOC_WRITE, 0x48dc, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETSCAN", _IOC_WRITE, 0x48dd, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCISETSCOMTU", _IOC_WRITE, 0x48e4, 0x04 },
+{ "net/bluetooth/hci_sock.h", "HCIUNBLOCKADDR", _IOC_WRITE, 0x48e7, 0x04 },
+{ "net/bluetooth/rfcomm.h", "RFCOMMCREATEDEV", _IOC_WRITE, 0x52c8, 0x04 },
+{ "net/bluetooth/rfcomm.h", "RFCOMMGETDEVINFO", _IOC_READ, 0x52d3, 0x04 },
+{ "net/bluetooth/rfcomm.h", "RFCOMMGETDEVLIST", _IOC_READ, 0x52d2, 0x04 },
+{ "net/bluetooth/rfcomm.h", "RFCOMMRELEASEDEV", _IOC_WRITE, 0x52c9, 0x04 },
+{ "net/bluetooth/rfcomm.h", "RFCOMMSTEALDLC", _IOC_WRITE, 0x52dc, 0x04 },
+{ "rdma/ib_user_mad.h", "IB_USER_MAD_ENABLE_PKEY", _IOC_NONE, 0x1b03, 0x00 },
+{ "rdma/ib_user_mad.h", "IB_USER_MAD_REGISTER_AGENT", _IOC_READ|_IOC_WRITE, 0x1b01, 0x1c },
+{ "rdma/ib_user_mad.h", "IB_USER_MAD_REGISTER_AGENT2", _IOC_READ|_IOC_WRITE, 0x1b04, 0x28 },
+{ "rdma/ib_user_mad.h", "IB_USER_MAD_UNREGISTER_AGENT", _IOC_WRITE, 0x1b02, 0x04 },
+{ "scsi/scsi.h", "SCSI_IOCTL_GET_BUS_NUMBER", 0, 0x5386, 0 },
+{ "scsi/scsi.h", "SCSI_IOCTL_GET_IDLUN", 0, 0x5382, 0 },
+{ "scsi/scsi.h", "SCSI_IOCTL_GET_PCI", 0, 0x5387, 0 },
+{ "scsi/scsi.h", "SCSI_IOCTL_PROBE_HOST", 0, 0x5385, 0 },
+{ "scsi/scsi_ioctl.h", "SCSI_IOCTL_DOORLOCK", 0, 0x5380, 0 },
+{ "scsi/scsi_ioctl.h", "SCSI_IOCTL_DOORUNLOCK", 0, 0x5381, 0 },
+{ "scsi/sg.h", "SG_EMULATED_HOST", 0, 0x2203, 0 },
+{ "scsi/sg.h", "SG_GET_ACCESS_COUNT", 0, 0x2289, 0 },
+{ "scsi/sg.h", "SG_GET_COMMAND_Q", 0, 0x2270, 0 },
+{ "scsi/sg.h", "SG_GET_KEEP_ORPHAN", 0, 0x2288, 0 },
+{ "scsi/sg.h", "SG_GET_LOW_DMA", 0, 0x227a, 0 },
+{ "scsi/sg.h", "SG_GET_NUM_WAITING", 0, 0x227d, 0 },
+{ "scsi/sg.h", "SG_GET_PACK_ID", 0, 0x227c, 0 },
+{ "scsi/sg.h", "SG_GET_REQUEST_TABLE", 0, 0x2286, 0 },
+{ "scsi/sg.h", "SG_GET_RESERVED_SIZE", 0, 0x2272, 0 },
+{ "scsi/sg.h", "SG_GET_SCSI_ID", 0, 0x2276, 0 },
+{ "scsi/sg.h", "SG_GET_SG_TABLESIZE", 0, 0x227F, 0 },
+{ "scsi/sg.h", "SG_GET_TIMEOUT", 0, 0x2202, 0 },
+{ "scsi/sg.h", "SG_GET_TRANSFORM", 0, 0x2205, 0 },
+{ "scsi/sg.h", "SG_GET_VERSION_NUM", 0, 0x2282, 0 },
+{ "scsi/sg.h", "SG_IO", 0, 0x2285, 0 },
+{ "scsi/sg.h", "SG_NEXT_CMD_LEN", 0, 0x2283, 0 },
+{ "scsi/sg.h", "SG_SCSI_RESET", 0, 0x2284, 0 },
+{ "scsi/sg.h", "SG_SET_COMMAND_Q", 0, 0x2271, 0 },
+{ "scsi/sg.h", "SG_SET_DEBUG", 0, 0x227e, 0 },
+{ "scsi/sg.h", "SG_SET_FORCE_LOW_DMA", 0, 0x2279, 0 },
+{ "scsi/sg.h", "SG_SET_FORCE_PACK_ID", 0, 0x227b, 0 },
+{ "scsi/sg.h", "SG_SET_KEEP_ORPHAN", 0, 0x2287, 0 },
+{ "scsi/sg.h", "SG_SET_RESERVED_SIZE", 0, 0x2275, 0 },
+{ "scsi/sg.h", "SG_SET_TIMEOUT", 0, 0x2201, 0 },
+{ "scsi/sg.h", "SG_SET_TRANSFORM", 0, 0x2204, 0 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_CLIENT_ID", _IOC_READ, 0x5301, 0x04 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_CREATE_PORT", _IOC_READ|_IOC_WRITE, 0x5320, 0xa8 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_CREATE_QUEUE", _IOC_READ|_IOC_WRITE, 0x5332, 0x8c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_DELETE_PORT", _IOC_WRITE, 0x5321, 0xa8 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_DELETE_QUEUE", _IOC_WRITE, 0x5333, 0x8c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_CLIENT_INFO", _IOC_READ|_IOC_WRITE, 0x5310, 0xbc },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_CLIENT_POOL", _IOC_READ|_IOC_WRITE, 0x534b, 0x58 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE", _IOC_READ|_IOC_WRITE, 0x5336, 0x8c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_PORT_INFO", _IOC_READ|_IOC_WRITE, 0x5322, 0xa8 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT", _IOC_READ|_IOC_WRITE, 0x5349, 0x4c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_QUEUE_INFO", _IOC_READ|_IOC_WRITE, 0x5334, 0x8c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_QUEUE_OWNER", _IOC_READ|_IOC_WRITE, 0x5343, 0x00 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS", _IOC_READ|_IOC_WRITE, 0x5340, 0x5c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO", _IOC_READ|_IOC_WRITE, 0x5341, 0x2c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER", _IOC_READ|_IOC_WRITE, 0x5345, 0x60 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_GET_SUBSCRIPTION", _IOC_READ|_IOC_WRITE, 0x5350, 0x50 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_PVERSION", _IOC_READ, 0x5300, 0x04 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT", _IOC_READ|_IOC_WRITE, 0x5351, 0xbc },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT", _IOC_READ|_IOC_WRITE, 0x5352, 0xa8 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_QUERY_SUBS", _IOC_READ|_IOC_WRITE, 0x534f, 0x58 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_REMOVE_EVENTS", _IOC_WRITE, 0x534e, 0x40 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_RUNNING_MODE", _IOC_READ|_IOC_WRITE, 0x5303, 0x10 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_CLIENT_INFO", _IOC_WRITE, 0x5311, 0xbc },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_CLIENT_POOL", _IOC_WRITE, 0x534c, 0x58 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_PORT_INFO", _IOC_WRITE, 0x5323, 0xa8 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT", _IOC_WRITE, 0x534a, 0x4c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_QUEUE_INFO", _IOC_READ|_IOC_WRITE, 0x5335, 0x8c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_QUEUE_OWNER", _IOC_WRITE, 0x5344, 0x00 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO", _IOC_WRITE, 0x5342, 0x2c },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER", _IOC_WRITE, 0x5346, 0x60 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT", _IOC_WRITE, 0x5330, 0x50 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_SYSTEM_INFO", _IOC_READ|_IOC_WRITE, 0x5302, 0x30 },
+{ "sound/asequencer.h", "SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT", _IOC_WRITE, 0x5331, 0x50 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_CARD_INFO", _IOC_READ, 0x5501, 0x178 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_ADD", _IOC_READ|_IOC_WRITE, 0x5517, 0x110 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_INFO", _IOC_READ|_IOC_WRITE, 0x5511, 0x110 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_LIST", _IOC_READ|_IOC_WRITE, 0x5510, 0x50 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_LOCK", _IOC_WRITE, 0x5514, 0x40 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_READ", _IOC_READ|_IOC_WRITE, 0x5512, 0x4c8 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_REMOVE", _IOC_READ|_IOC_WRITE, 0x5519, 0x40 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_REPLACE", _IOC_READ|_IOC_WRITE, 0x5518, 0x110 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_UNLOCK", _IOC_WRITE, 0x5515, 0x40 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_ELEM_WRITE", _IOC_READ|_IOC_WRITE, 0x5513, 0x4c8 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_HWDEP_INFO", _IOC_READ, 0x5521, 0xdc },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_HWDEP_NEXT_DEVICE", _IOC_READ|_IOC_WRITE, 0x5520, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_PCM_INFO", _IOC_READ|_IOC_WRITE, 0x5531, 0x120 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_PCM_NEXT_DEVICE", _IOC_READ, 0x5530, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_PCM_PREFER_SUBDEVICE", _IOC_WRITE, 0x5532, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_POWER", _IOC_READ|_IOC_WRITE, 0x55d0, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_POWER_STATE", _IOC_READ, 0x55d1, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_PVERSION", _IOC_READ, 0x5500, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_RAWMIDI_INFO", _IOC_READ|_IOC_WRITE, 0x5541, 0x10c },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_RAWMIDI_NEXT_DEVICE", _IOC_READ|_IOC_WRITE, 0x5540, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_RAWMIDI_PREFER_SUBDEVICE", _IOC_WRITE, 0x5542, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS", _IOC_READ|_IOC_WRITE, 0x5516, 0x04 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_TLV_COMMAND", _IOC_READ|_IOC_WRITE, 0x551c, 0x08 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_TLV_READ", _IOC_READ|_IOC_WRITE, 0x551a, 0x08 },
+{ "sound/asound.h", "SNDRV_CTL_IOCTL_TLV_WRITE", _IOC_READ|_IOC_WRITE, 0x551b, 0x08 },
+{ "sound/asound.h", "SNDRV_HWDEP_IOCTL_DSP_LOAD", _IOC_WRITE, 0x4803, 0x60 },
+{ "sound/asound.h", "SNDRV_HWDEP_IOCTL_DSP_STATUS", _IOC_READ, 0x4802, 0x40 },
+{ "sound/asound.h", "SNDRV_HWDEP_IOCTL_INFO", _IOC_READ, 0x4801, 0xdc },
+{ "sound/asound.h", "SNDRV_HWDEP_IOCTL_PVERSION", _IOC_READ, 0x4800, 0x04 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_CHANNEL_INFO", _IOC_READ, 0x4132, 0x18 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_DELAY", _IOC_READ, 0x4121, 0x08 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_DRAIN", _IOC_NONE, 0x4144, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_DROP", _IOC_NONE, 0x4143, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_FORWARD", _IOC_WRITE, 0x4149, 0x08 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_HWSYNC", _IOC_NONE, 0x4122, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_HW_FREE", _IOC_NONE, 0x4112, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_HW_PARAMS", _IOC_READ|_IOC_WRITE, 0x4111, 0x260 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_HW_REFINE", _IOC_READ|_IOC_WRITE, 0x4110, 0x260 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_INFO", _IOC_READ, 0x4101, 0x120 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_LINK", _IOC_WRITE, 0x4160, 0x04 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_PAUSE", _IOC_WRITE, 0x4145, 0x04 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_PREPARE", _IOC_NONE, 0x4140, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_PVERSION", _IOC_READ, 0x4100, 0x04 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_READI_FRAMES", _IOC_READ, 0x4151, 0x18 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_READN_FRAMES", _IOC_READ, 0x4153, 0x18 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_RESET", _IOC_NONE, 0x4141, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_RESUME", _IOC_NONE, 0x4147, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_REWIND", _IOC_WRITE, 0x4146, 0x08 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_START", _IOC_NONE, 0x4142, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_STATUS", _IOC_READ, 0x4120, 0x98 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_STATUS_EXT", _IOC_READ|_IOC_WRITE, 0x4124, 0x98 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_SW_PARAMS", _IOC_READ|_IOC_WRITE, 0x4113, 0x88 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_SYNC_PTR", _IOC_READ|_IOC_WRITE, 0x4123, 0x88 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_TSTAMP", _IOC_WRITE, 0x4102, 0x04 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_TTSTAMP", _IOC_WRITE, 0x4103, 0x04 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_UNLINK", _IOC_NONE, 0x4161, 0x00 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_WRITEI_FRAMES", _IOC_WRITE, 0x4150, 0x18 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_WRITEN_FRAMES", _IOC_WRITE, 0x4152, 0x18 },
+{ "sound/asound.h", "SNDRV_PCM_IOCTL_XRUN", _IOC_NONE, 0x4148, 0x00 },
+{ "sound/asound.h", "SNDRV_RAWMIDI_IOCTL_DRAIN", _IOC_WRITE, 0x5731, 0x04 },
+{ "sound/asound.h", "SNDRV_RAWMIDI_IOCTL_DROP", _IOC_WRITE, 0x5730, 0x04 },
+{ "sound/asound.h", "SNDRV_RAWMIDI_IOCTL_INFO", _IOC_READ, 0x5701, 0x10c },
+{ "sound/asound.h", "SNDRV_RAWMIDI_IOCTL_PARAMS", _IOC_READ|_IOC_WRITE, 0x5710, 0x30 },
+{ "sound/asound.h", "SNDRV_RAWMIDI_IOCTL_PVERSION", _IOC_READ, 0x5700, 0x04 },
+{ "sound/asound.h", "SNDRV_RAWMIDI_IOCTL_STATUS", _IOC_READ|_IOC_WRITE, 0x5720, 0x38 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_CONTINUE", _IOC_NONE, 0x54a2, 0x00 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_GINFO", _IOC_READ|_IOC_WRITE, 0x5403, 0xf8 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_GPARAMS", _IOC_WRITE, 0x5404, 0x48 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_GSTATUS", _IOC_READ|_IOC_WRITE, 0x5405, 0x50 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_INFO", _IOC_READ, 0x5411, 0xe8 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_NEXT_DEVICE", _IOC_READ|_IOC_WRITE, 0x5401, 0x14 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_PARAMS", _IOC_WRITE, 0x5412, 0x50 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_PAUSE", _IOC_NONE, 0x54a3, 0x00 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_PVERSION", _IOC_READ, 0x5400, 0x04 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_SELECT", _IOC_WRITE, 0x5410, 0x34 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_START", _IOC_NONE, 0x54a0, 0x00 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_STATUS", _IOC_READ, 0x5414, 0x60 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_STOP", _IOC_NONE, 0x54a1, 0x00 },
+{ "sound/asound.h", "SNDRV_TIMER_IOCTL_TREAD", _IOC_WRITE, 0x5402, 0x04 },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_CLEAR_PATCHES", _IOC_NONE, 0x4840, 0x00 },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_INFO", _IOC_READ, 0x4820, 0x02 },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_PLAY_NOTE", _IOC_WRITE, 0x4822, 0x0c },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_RESET", _IOC_NONE, 0x4821, 0x00 },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_SET_CONNECTION", _IOC_WRITE, 0x4826, 0x04 },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_SET_MODE", _IOC_WRITE, 0x4825, 0x04 },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_SET_PARAMS", _IOC_WRITE, 0x4824, 0x09 },
+{ "sound/asound_fm.h", "SNDRV_DM_FM_IOCTL_SET_VOICE", _IOC_WRITE, 0x4823, 0x12 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_AVAIL", _IOC_READ, 0x4321, 0x1c },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_DRAIN", _IOC_NONE, 0x4334, 0x00 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_GET_CAPS", _IOC_READ|_IOC_WRITE, 0x4310, 0xc4 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_GET_CODEC_CAPS", _IOC_READ|_IOC_WRITE, 0x4311, 0x2b88 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_GET_METADATA", _IOC_READ|_IOC_WRITE, 0x4315, 0x24 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_GET_PARAMS", _IOC_READ, 0x4313, 0x78 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_IOCTL_VERSION", _IOC_READ, 0x4300, 0x04 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_NEXT_TRACK", _IOC_NONE, 0x4335, 0x00 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_PARTIAL_DRAIN", _IOC_NONE, 0x4336, 0x00 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_PAUSE", _IOC_NONE, 0x4330, 0x00 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_RESUME", _IOC_NONE, 0x4331, 0x00 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_SET_METADATA", _IOC_WRITE, 0x4314, 0x24 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_SET_PARAMS", _IOC_WRITE, 0x4312, 0x84 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_START", _IOC_NONE, 0x4332, 0x00 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_STOP", _IOC_NONE, 0x4333, 0x00 },
+{ "sound/compress_offload.h", "SNDRV_COMPRESS_TSTAMP", _IOC_READ, 0x4320, 0x14 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_CODE_PEEK", _IOC_READ|_IOC_WRITE, 0x4812, 0x1b0 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_CODE_POKE", _IOC_WRITE, 0x4811, 0x1b0 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_CONTINUE", _IOC_NONE, 0x4881, 0x00 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_DBG_READ", _IOC_READ, 0x4884, 0x04 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_INFO", _IOC_READ, 0x4810, 0x80c },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_PCM_PEEK", _IOC_READ|_IOC_WRITE, 0x4831, 0x48 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_PCM_POKE", _IOC_WRITE, 0x4830, 0x48 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_PVERSION", _IOC_READ, 0x4840, 0x04 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_SINGLE_STEP", _IOC_WRITE, 0x4883, 0x04 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_STOP", _IOC_NONE, 0x4880, 0x00 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_TRAM_PEEK", _IOC_READ|_IOC_WRITE, 0x4822, 0x10 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_TRAM_POKE", _IOC_WRITE, 0x4821, 0x10 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_TRAM_SETUP", _IOC_WRITE, 0x4820, 0x04 },
+{ "sound/emu10k1.h", "SNDRV_EMU10K1_IOCTL_ZERO_TRAM_COUNTER", _IOC_NONE, 0x4882, 0x00 },
+{ "sound/firewire.h", "SNDRV_FIREWIRE_IOCTL_GET_INFO", _IOC_READ, 0x48f8, 0x20 },
+{ "sound/firewire.h", "SNDRV_FIREWIRE_IOCTL_LOCK", _IOC_NONE, 0x48f9, 0x00 },
+{ "sound/firewire.h", "SNDRV_FIREWIRE_IOCTL_UNLOCK", _IOC_NONE, 0x48fa, 0x00 },
+{ "sound/hda_hwdep.h", "HDA_IOCTL_GET_WCAP", _IOC_READ|_IOC_WRITE, 0x4812, 0x08 },
+{ "sound/hda_hwdep.h", "HDA_IOCTL_PVERSION", _IOC_READ, 0x4810, 0x04 },
+{ "sound/hda_hwdep.h", "HDA_IOCTL_VERB_WRITE", _IOC_READ|_IOC_WRITE, 0x4811, 0x08 },
+{ "sound/hdsp.h", "SNDRV_HDSP_IOCTL_GET_9632_AEB", _IOC_READ, 0x4845, 0x08 },
+{ "sound/hdsp.h", "SNDRV_HDSP_IOCTL_GET_CONFIG_INFO", _IOC_READ, 0x4841, 0x24 },
+{ "sound/hdsp.h", "SNDRV_HDSP_IOCTL_GET_MIXER", _IOC_READ, 0x4844, 0x1000 },
+{ "sound/hdsp.h", "SNDRV_HDSP_IOCTL_GET_PEAK_RMS", _IOC_READ, 0x4840, 0x3b0 },
+{ "sound/hdsp.h", "SNDRV_HDSP_IOCTL_GET_VERSION", _IOC_READ, 0x4843, 0x08 },
+{ "sound/hdsp.h", "SNDRV_HDSP_IOCTL_UPLOAD_FIRMWARE", _IOC_WRITE, 0x4842, 0x08 },
+{ "sound/hdspm.h", "SNDRV_HDSPM_IOCTL_GET_CONFIG", _IOC_READ, 0x4841, 0x18 },
+{ "sound/hdspm.h", "SNDRV_HDSPM_IOCTL_GET_LTC", _IOC_READ, 0x4846, 0x10 },
+{ "sound/hdspm.h", "SNDRV_HDSPM_IOCTL_GET_MIXER", _IOC_READ, 0x4844, 0x08 },
+{ "sound/hdspm.h", "SNDRV_HDSPM_IOCTL_GET_PEAK_RMS", _IOC_READ, 0x4842, 0x908 },
+{ "sound/hdspm.h", "SNDRV_HDSPM_IOCTL_GET_STATUS", _IOC_READ, 0x4847, 0x20 },
+{ "sound/hdspm.h", "SNDRV_HDSPM_IOCTL_GET_VERSION", _IOC_READ, 0x4848, 0x24 },
+{ "sound/sb16_csp.h", "SNDRV_SB_CSP_IOCTL_INFO", _IOC_READ, 0x4810, 0x28 },
+{ "sound/sb16_csp.h", "SNDRV_SB_CSP_IOCTL_LOAD_CODE", _IOC_WRITE, 0x4811, 0x3012 },
+{ "sound/sb16_csp.h", "SNDRV_SB_CSP_IOCTL_PAUSE", _IOC_NONE, 0x4815, 0x00 },
+{ "sound/sb16_csp.h", "SNDRV_SB_CSP_IOCTL_RESTART", _IOC_NONE, 0x4816, 0x00 },
+{ "sound/sb16_csp.h", "SNDRV_SB_CSP_IOCTL_START", _IOC_WRITE, 0x4813, 0x08 },
+{ "sound/sb16_csp.h", "SNDRV_SB_CSP_IOCTL_STOP", _IOC_NONE, 0x4814, 0x00 },
+{ "sound/sb16_csp.h", "SNDRV_SB_CSP_IOCTL_UNLOAD_CODE", _IOC_NONE, 0x4812, 0x00 },
+{ "sound/sfnt_info.h", "SNDRV_EMUX_IOCTL_LOAD_PATCH", _IOC_READ|_IOC_WRITE, 0x4881, 0x10 },
+{ "sound/sfnt_info.h", "SNDRV_EMUX_IOCTL_MEM_AVAIL", _IOC_WRITE, 0x4884, 0x04 },
+{ "sound/sfnt_info.h", "SNDRV_EMUX_IOCTL_MISC_MODE", _IOC_READ|_IOC_WRITE, 0x4884, 0x10 },
+{ "sound/sfnt_info.h", "SNDRV_EMUX_IOCTL_REMOVE_LAST_SAMPLES", _IOC_NONE, 0x4883, 0x00 },
+{ "sound/sfnt_info.h", "SNDRV_EMUX_IOCTL_RESET_SAMPLES", _IOC_NONE, 0x4882, 0x00 },
+{ "sound/sfnt_info.h", "SNDRV_EMUX_IOCTL_VERSION", _IOC_READ, 0x4880, 0x04 },
+{ "sound/usb_stream.h", "SNDRV_USB_STREAM_IOCTL_SET_PARAMS", _IOC_WRITE, 0x4890, 0x10 },
+{ "staging/android/ashmem.h", "ASHMEM_GET_NAME", _IOC_READ, 0x7702, 0x100 },
+{ "staging/android/ashmem.h", "ASHMEM_GET_PIN_STATUS", _IOC_NONE, 0x7709, 0x00 },
+{ "staging/android/ashmem.h", "ASHMEM_GET_PROT_MASK", _IOC_NONE, 0x7706, 0x00 },
+{ "staging/android/ashmem.h", "ASHMEM_GET_SIZE", _IOC_NONE, 0x7704, 0x00 },
+{ "staging/android/ashmem.h", "ASHMEM_PIN", _IOC_WRITE, 0x7707, 0x08 },
+{ "staging/android/ashmem.h", "ASHMEM_PURGE_ALL_CACHES", _IOC_NONE, 0x770a, 0x00 },
+{ "staging/android/ashmem.h", "ASHMEM_SET_NAME", _IOC_WRITE, 0x7701, 0x100 },
+{ "staging/android/ashmem.h", "ASHMEM_SET_PROT_MASK", _IOC_WRITE, 0x7705, 0x08 },
+{ "staging/android/ashmem.h", "ASHMEM_SET_SIZE", _IOC_WRITE, 0x7703, 0x08 },
+{ "staging/android/ashmem.h", "ASHMEM_UNPIN", _IOC_WRITE, 0x7708, 0x08 },
+{ "staging/android/ion.h", "ION_IOC_ALLOC", _IOC_READ|_IOC_WRITE, 0x4900, 0x20 },
+{ "staging/android/ion.h", "ION_IOC_CUSTOM", _IOC_READ|_IOC_WRITE, 0x4906, 0x10 },
+{ "staging/android/ion.h", "ION_IOC_FREE", _IOC_READ|_IOC_WRITE, 0x4901, 0x04 },
+{ "staging/android/ion.h", "ION_IOC_IMPORT", _IOC_READ|_IOC_WRITE, 0x4905, 0x08 },
+{ "staging/android/ion.h", "ION_IOC_MAP", _IOC_READ|_IOC_WRITE, 0x4902, 0x08 },
+{ "staging/android/ion.h", "ION_IOC_SHARE", _IOC_READ|_IOC_WRITE, 0x4904, 0x08 },
+{ "staging/android/ion.h", "ION_IOC_SYNC", _IOC_READ|_IOC_WRITE, 0x4907, 0x08 },
+{ "staging/android/ion_test.h", "ION_IOC_TEST_DMA_MAPPING", _IOC_WRITE, 0x49f1, 0x20 },
+{ "staging/android/ion_test.h", "ION_IOC_TEST_KERNEL_MAPPING", _IOC_WRITE, 0x49f2, 0x20 },
+{ "staging/android/ion_test.h", "ION_IOC_TEST_SET_FD", _IOC_NONE, 0x49f0, 0x00 },
+{ "staging/android/sw_sync.h", "SW_SYNC_IOC_CREATE_FENCE", _IOC_READ|_IOC_WRITE, 0x5700, 0x28 },
+{ "staging/android/sw_sync.h", "SW_SYNC_IOC_INC", _IOC_WRITE, 0x5701, 0x04 },
+{ "staging/android/sync.h", "SYNC_IOC_FENCE_INFO", _IOC_READ|_IOC_WRITE, 0x3e02, 0x28 },
+{ "staging/android/sync.h", "SYNC_IOC_MERGE", _IOC_READ|_IOC_WRITE, 0x3e01, 0x28 },
+{ "staging/android/sync.h", "SYNC_IOC_WAIT", _IOC_WRITE, 0x3e00, 0x04 },
+{ "video/da8xx-fb.h", "FBIGET_BRIGHTNESS", _IOC_READ, 0x4603, 0x04 },
+{ "video/da8xx-fb.h", "FBIGET_COLOR", _IOC_READ, 0x4605, 0x04 },
+{ "video/da8xx-fb.h", "FBIOGET_CONTRAST", _IOC_READ, 0x4601, 0x04 },
+{ "video/da8xx-fb.h", "FBIOPUT_CONTRAST", _IOC_WRITE, 0x4602, 0x04 },
+{ "video/da8xx-fb.h", "FBIPUT_BRIGHTNESS", _IOC_WRITE, 0x4603, 0x04 },
+{ "video/da8xx-fb.h", "FBIPUT_COLOR", _IOC_WRITE, 0x4606, 0x04 },
+{ "video/da8xx-fb.h", "FBIPUT_HSYNC", _IOC_WRITE, 0x4609, 0x04 },
+{ "video/da8xx-fb.h", "FBIPUT_VSYNC", _IOC_WRITE, 0x460a, 0x04 },
+{ "video/kyro.h", "KYRO_IOCTL_OVERLAY_CREATE", _IOC_NONE, 0x6b00, 0x00 },
+{ "video/kyro.h", "KYRO_IOCTL_OVERLAY_OFFSET", _IOC_NONE, 0x6b04, 0x00 },
+{ "video/kyro.h", "KYRO_IOCTL_OVERLAY_VIEWPORT_SET", _IOC_NONE, 0x6b01, 0x00 },
+{ "video/kyro.h", "KYRO_IOCTL_SET_VIDEO_MODE", _IOC_NONE, 0x6b02, 0x00 },
+{ "video/kyro.h", "KYRO_IOCTL_STRIDE", _IOC_NONE, 0x6b05, 0x00 },
+{ "video/kyro.h", "KYRO_IOCTL_UVSTRIDE", _IOC_NONE, 0x6b03, 0x00 },
+{ "video/mbxfb.h", "MBXFB_IOCG_ALPHA", _IOC_READ, 0xf401, 0x18 },
+{ "video/mbxfb.h", "MBXFB_IOCS_ALPHA", _IOC_WRITE, 0xf402, 0x18 },
+{ "video/mbxfb.h", "MBXFB_IOCS_PLANEORDER", _IOC_READ, 0xf403, 0x02 },
+{ "video/mbxfb.h", "MBXFB_IOCS_REG", _IOC_WRITE, 0xf404, 0x0c },
+{ "video/mbxfb.h", "MBXFB_IOCX_OVERLAY", _IOC_READ|_IOC_WRITE, 0xf400, 0x30 },
+{ "video/mbxfb.h", "MBXFB_IOCX_REG", _IOC_READ|_IOC_WRITE, 0xf405, 0x0c },
+{ "video/sisfb.h", "SISFB_COMMAND", _IOC_READ|_IOC_WRITE, 0xf305, 0x54 },
+{ "video/sisfb.h", "SISFB_GET_AUTOMAXIMIZE", _IOC_READ, 0xf303, 0x04 },
+{ "video/sisfb.h", "SISFB_GET_AUTOMAXIMIZE_OLD", _IOC_READ, 0x6efa, 0x04 },
+{ "video/sisfb.h", "SISFB_GET_INFO", _IOC_READ, 0xf301, 0x11c },
+{ "video/sisfb.h", "SISFB_GET_INFO_OLD", _IOC_READ, 0x6ef8, 0x04 },
+{ "video/sisfb.h", "SISFB_GET_INFO_SIZE", _IOC_READ, 0xf300, 0x04 },
+{ "video/sisfb.h", "SISFB_GET_TVPOSOFFSET", _IOC_READ, 0xf304, 0x04 },
+{ "video/sisfb.h", "SISFB_GET_VBRSTATUS", _IOC_READ, 0xf302, 0x04 },
+{ "video/sisfb.h", "SISFB_GET_VBRSTATUS_OLD", _IOC_READ, 0x6ef9, 0x04 },
+{ "video/sisfb.h", "SISFB_SET_AUTOMAXIMIZE", _IOC_WRITE, 0xf303, 0x04 },
+{ "video/sisfb.h", "SISFB_SET_AUTOMAXIMIZE_OLD", _IOC_WRITE, 0x6efa, 0x04 },
+{ "video/sisfb.h", "SISFB_SET_LOCK", _IOC_WRITE, 0xf306, 0x04 },
+{ "video/sisfb.h", "SISFB_SET_TVPOSOFFSET", _IOC_WRITE, 0xf304, 0x04 },
+{ "video/sstfb.h", "SSTFB_GET_VGAPASS", _IOC_READ, 0x46dd, 0x04 },
+{ "video/sstfb.h", "SSTFB_SET_VGAPASS", _IOC_WRITE, 0x46dd, 0x04 },
+{ "xen/evtchn.h", "IOCTL_EVTCHN_BIND_INTERDOMAIN", _IOC_NONE, 0x4501, 0x08 },
+{ "xen/evtchn.h", "IOCTL_EVTCHN_BIND_UNBOUND_PORT", _IOC_NONE, 0x4502, 0x04 },
+{ "xen/evtchn.h", "IOCTL_EVTCHN_BIND_VIRQ", _IOC_NONE, 0x4500, 0x04 },
+{ "xen/evtchn.h", "IOCTL_EVTCHN_NOTIFY", _IOC_NONE, 0x4504, 0x04 },
+{ "xen/evtchn.h", "IOCTL_EVTCHN_RESET", _IOC_NONE, 0x4505, 0x00 },
+{ "xen/evtchn.h", "IOCTL_EVTCHN_UNBIND", _IOC_NONE, 0x4503, 0x04 },
+{ "xen/xenbus_dev.h", "IOCTL_XENBUS_BACKEND_EVTCHN", _IOC_NONE, 0x4200, 0x00 },
+{ "xen/xenbus_dev.h", "IOCTL_XENBUS_BACKEND_SETUP", _IOC_NONE, 0x4201, 0x00 },
diff --git a/linux/riscv/ioctls_inc1.h b/linux/riscv/ioctls_inc1.h
new file mode 100644
index 0000000..7a11104
--- /dev/null
+++ b/linux/riscv/ioctls_inc1.h
@@ -0,0 +1 @@
+#include "ioctls_inc0.h"
diff --git a/linux/riscv/signalent1.h b/linux/riscv/signalent1.h
new file mode 100644
index 0000000..39891b8
--- /dev/null
+++ b/linux/riscv/signalent1.h
@@ -0,0 +1,2 @@
+/* RISC-V rv32 and rv64 */
+#include "../signalent.h"
diff --git a/linux/riscv/stat32.h b/linux/riscv/stat32.h
new file mode 100644
index 0000000..802610e
--- /dev/null
+++ b/linux/riscv/stat32.h
@@ -0,0 +1 @@
+#include "x86_64/stat32.h"
diff --git a/linux/riscv/syscallent.h b/linux/riscv/syscallent.h
new file mode 100644
index 0000000..52121cf
--- /dev/null
+++ b/linux/riscv/syscallent.h
@@ -0,0 +1,274 @@
+[   0 ] = { 2,	0,	SEN(io_setup),			"io_setup"			},
+[   1 ] = { 1,	0,	SEN(io_destroy),			"io_destroy"			},
+[   2 ] = { 3,	0,	SEN(io_submit),			"io_submit"			},
+[   3 ] = { 3,	0,	SEN(io_cancel),			"io_cancel"			},
+[   4 ] = { 5,	0,	SEN(io_getevents),		"io_getevents"			},
+[   5 ] = { 5,	TF,	SEN(setxattr),			"setxattr"			},
+[   6 ] = { 5,	TF,	SEN(setxattr),			"lsetxattr"			},
+[   7 ] = { 5,	TD,	SEN(fsetxattr),			"fsetxattr"			},
+[   8 ] = { 4,	TF,	SEN(getxattr),			"getxattr"			},
+[   9 ] = { 4,	TF,	SEN(getxattr),			"lgetxattr"			},
+[  10 ] = { 4,	TD,	SEN(fgetxattr),			"fgetxattr"			},
+[  11 ] = { 3,	TF,	SEN(listxattr),			"listxattr"			},
+[  12 ] = { 3,	TF,	SEN(listxattr),			"llistxattr"			},
+[  13 ] = { 3,	TD,	SEN(flistxattr),			"flistxattr"			},
+[  14 ] = { 2,	TF,	SEN(removexattr),		"removexattr"			},
+[  15 ] = { 2,	TF,	SEN(removexattr),		"lremovexattr"			},
+[  16 ] = { 2,	TD,	SEN(fremovexattr),		"fremovexattr"			},
+[  17 ] = { 2,	TF,	SEN(getcwd),			"getcwd"			},
+[  18 ] = { 4,	0,	SEN(lookup_dcookie),		"lookup_dcookie"		},
+[  19 ] = { 2,	TD,	SEN(eventfd2),			"eventfd2"			},
+[  20 ] = { 1,	TD,	SEN(epoll_create1),		"epoll_create1"			},
+[  21 ] = { 4,	TD,	SEN(epoll_ctl),			"epoll_ctl"			},
+[  22 ] = { 6,	TD,	SEN(epoll_pwait),		"epoll_pwait"			},
+[  23 ] = { 1,	TD,	SEN(dup),			"dup"				},
+[  24 ] = { 3,	TD,	SEN(dup3),			"dup3"				},
+[  25 ] = { 3,	TD,	SEN(fcntl),			"fcntl"				},
+[  26 ] = { 1,	TD,	SEN(inotify_init1),		"inotify_init1"			},
+[  27 ] = { 3,	TD,	SEN(inotify_add_watch),		"inotify_add_watch"		},
+[  28 ] = { 2,	TD,	SEN(inotify_rm_watch),		"inotify_rm_watch"		},
+[  29 ] = { 3,	TD,	SEN(ioctl),			"ioctl"				},
+[  30 ] = { 3,	0,	SEN(ioprio_set),			"ioprio_set"			},
+[  31 ] = { 2,	0,	SEN(ioprio_get),			"ioprio_get"			},
+[  32 ] = { 2,	TD,	SEN(flock),			"flock"				},
+[  33 ] = { 4,	TD|TF,	SEN(mknodat),			"mknodat"			},
+[  34 ] = { 3,	TD|TF,	SEN(mkdirat),			"mkdirat"			},
+[  35 ] = { 3,	TD|TF,	SEN(unlinkat),			"unlinkat"			},
+[  36 ] = { 3,	TD|TF,	SEN(symlinkat),			"symlinkat"			},
+[  37 ] = { 5,	TD|TF,	SEN(linkat),			"linkat"			},
+[  38 ] = { 4,	TD|TF,	SEN(renameat),			"renameat"			},
+[  39 ] = { 2,	TF,	SEN(umount2),			"umount2"			},
+[  40 ] = { 5,	TF,	SEN(mount),			"mount"				},
+[  41 ] = { 2,	TF,	SEN(pivotroot),			"pivot_root"			},
+[  42 ] = { 3,	0,	SEN(nfsservctl),			"nfsservctl"			},
+[  43 ] = { 2,	TF,	SEN(statfs),			"statfs"			},
+[  44 ] = { 2,	TD,	SEN(fstatfs),			"fstatfs"			},
+[  45 ] = { 2,	TF,	SEN(truncate),			"truncate"			},
+[  46 ] = { 2,	TD,	SEN(ftruncate),			"ftruncate"			},
+[  47 ] = { 4,	TD,	SEN(fallocate),			"fallocate"			},
+[  48 ] = { 3,	TD|TF,	SEN(faccessat),			"faccessat"			},
+[  49 ] = { 1,	TF,	SEN(chdir),			"chdir"				},
+[  50 ] = { 1,	TD,	SEN(fchdir),			"fchdir"			},
+[  51 ] = { 1,	TF,	SEN(chroot),			"chroot"			},
+[  52 ] = { 2,	TD,	SEN(fchmod),			"fchmod"			},
+[  53 ] = { 3,	TD|TF,	SEN(fchmodat),			"fchmodat"			},
+[  54 ] = { 5,	TD|TF,	SEN(fchownat),			"fchownat"			},
+[  55 ] = { 3,	TD,	SEN(fchown),			"fchown"			},
+[  56 ] = { 4,	TD|TF,	SEN(openat),			"openat"			},
+[  57 ] = { 1,	TD,	SEN(close),			"close"				},
+[  58 ] = { 0,	0,	SEN(vhangup),			"vhangup"			},
+[  59 ] = { 2,	TD,	SEN(pipe2),			"pipe2"				},
+[  60 ] = { 4,	TF,	SEN(quotactl),			"quotactl"			},
+[  61 ] = { 3,	TD,	SEN(getdents64),			"getdents64"			},
+[  62 ] = { 3,	TD,	SEN(lseek),			"lseek"				},
+[  63 ] = { 3,	TD,	SEN(read),			"read"				},
+[  64 ] = { 3,	TD,	SEN(write),			"write"				},
+[  65 ] = { 3,	TD,	SEN(readv),			"readv"				},
+[  66 ] = { 3,	TD,	SEN(writev),			"writev"			},
+[  67 ] = { 4,	TD,	SEN(pread),			"pread64"			},
+[  68 ] = { 4,	TD,	SEN(pwrite),			"pwrite64"			},
+[  69 ] = { 4,	TD,	SEN(preadv),			"preadv"			},
+[  70 ] = { 4,	TD,	SEN(pwritev),			"pwritev"			},
+[  71 ] = { 4,	TD|TN,	SEN(sendfile64),			"sendfile"			},
+[  72 ] = { 6,	TD,	SEN(pselect6),			"pselect6"			},
+[  73 ] = { 5,	TD,	SEN(ppoll),			"ppoll"				},
+[  74 ] = { 4,	TD|TS,	SEN(signalfd4),			"signalfd4"			},
+[  75 ] = { 4,	TD,	SEN(vmsplice),			"vmsplice"			},
+[  76 ] = { 6,	TD,	SEN(splice),			"splice"			},
+[  77 ] = { 4,	TD,	SEN(tee),			"tee"				},
+[  78 ] = { 4,	TD|TF,	SEN(readlinkat),			"readlinkat"			},
+[  79 ] = { 4,	TD|TF,	SEN(newfstatat),			"fstatat"			},
+[  80 ] = { 2,	TD,	SEN(fstat),			"fstat"				},
+[  81 ] = { 0,	0,	SEN(sync),			"sync"				},
+[  82 ] = { 1,	TD,	SEN(fsync),			"fsync"				},
+[  83 ] = { 1,	TD,	SEN(fdatasync),			"fdatasync"			},
+[  84 ] = { 4,	TD,	SEN(sync_file_range2),		"sync_file_range2"		},
+[  85 ] = { 2,	TD,	SEN(timerfd_create),		"timerfd_create"		},
+[  86 ] = { 4,	TD,	SEN(timerfd_settime),		"timerfd_settime"		},
+[  87 ] = { 2,	TD,	SEN(timerfd_gettime),		"timerfd_gettime"		},
+[  88 ] = { 4,	TD|TF,	SEN(utimensat),			"utimensat"			},
+[  89 ] = { 1,	TF,	SEN(acct),			"acct"				},
+[  90 ] = { 2,	0,	SEN(capget),			"capget"			},
+[  91 ] = { 2,	0,	SEN(capset),			"capset"			},
+[  92 ] = { 1,	0,	SEN(personality),		"personality"			},
+[  93 ] = { 1,	TP,	SEN(exit),			"exit"				},
+[  94 ] = { 1,	TP,	SEN(exit),			"exit_group"			},
+[  95 ] = { 5,	TP,	SEN(waitid),			"waitid"			},
+[  96 ] = { 1,	0,	SEN(set_tid_address),		"set_tid_address"		},
+[  97 ] = { 1,	TP,	SEN(unshare),			"unshare"			},
+[  98 ] = { 6,	0,	SEN(futex),			"futex"				},
+[  99 ] = { 2,	0,	SEN(set_robust_list),		"set_robust_list"		},
+[ 100 ] = { 3,	0,	SEN(get_robust_list),		"get_robust_list"		},
+[ 101 ] = { 2,	0,	SEN(nanosleep),			"nanosleep"			},
+[ 102 ] = { 2,	0,	SEN(getitimer),			"getitimer"			},
+[ 103 ] = { 3,	0,	SEN(setitimer),			"setitimer"			},
+[ 104 ] = { 4,	0,	SEN(kexec_load),			"kexec_load"			},
+[ 105 ] = { 3,	0,	SEN(init_module),		"init_module"			},
+[ 106 ] = { 2,	0,	SEN(delete_module),		"delete_module"			},
+[ 107 ] = { 3,	0,	SEN(timer_create),		"timer_create"			},
+[ 108 ] = { 2,	0,	SEN(timer_gettime),		"timer_gettime"			},
+[ 109 ] = { 1,	0,	SEN(timer_getoverrun),		"timer_getoverrun"		},
+[ 110 ] = { 4,	0,	SEN(timer_settime),		"timer_settime"			},
+[ 111 ] = { 1,	0,	SEN(timer_delete),		"timer_delete"			},
+[ 112 ] = { 2,	0,	SEN(clock_settime),		"clock_settime"			},
+[ 113 ] = { 2,	0,	SEN(clock_gettime),		"clock_gettime"			},
+[ 114 ] = { 2,	0,	SEN(clock_getres),		"clock_getres"			},
+[ 115 ] = { 4,	0,	SEN(clock_nanosleep),		"clock_nanosleep"		},
+[ 116 ] = { 3,	0,	SEN(syslog),			"syslog"			},
+[ 117 ] = { 4,	0,	SEN(ptrace),			"ptrace"			},
+[ 118 ] = { 0,	0,	SEN(sched_setparam),		"sched_setparam"		},
+[ 119 ] = { 3,	0,	SEN(sched_setscheduler),		"sched_setscheduler"		},
+[ 120 ] = { 1,	0,	SEN(sched_getscheduler),		"sched_getscheduler"		},
+[ 121 ] = { 2,	0,	SEN(sched_getparam),		"sched_getparam"		},
+[ 122 ] = { 3,	0,	SEN(sched_setaffinity),		"sched_setaffinity"		},
+[ 123 ] = { 3,	0,	SEN(sched_getaffinity),		"sched_getaffinity"		},
+[ 124 ] = { 0,	0,	SEN(sched_yield),		"sched_yield"			},
+[ 125 ] = { 1,	0,	SEN(sched_get_priority_max),	"sched_get_priority_max"	},
+[ 126 ] = { 1,	0,	SEN(sched_get_priority_min),	"sched_get_priority_min"	},
+[ 127 ] = { 2,	0,	SEN(sched_rr_get_interval),	"sched_rr_get_interval"		},
+[ 128 ] = { 0,	0,	SEN(restart_syscall),		"restart_syscall"		},
+[ 129 ] = { 2,	TS,	SEN(kill),			"kill"				},
+[ 130 ] = { 2,	TS,	SEN(kill),			"tkill"				},
+[ 131 ] = { 3,	TS,	SEN(tgkill),			"tgkill"			},
+[ 132 ] = { 2,	TS,	SEN(sigaltstack),		"sigaltstack"			},
+[ 133 ] = { 2,	TS,	SEN(rt_sigsuspend),		"rt_sigsuspend"			},
+[ 134 ] = { 4,	TS,	SEN(rt_sigaction),		"rt_sigaction"			},
+[ 135 ] = { 4,	TS,	SEN(rt_sigprocmask),		"rt_sigprocmask"		},
+[ 136 ] = { 2,	TS,	SEN(rt_sigpending),		"rt_sigpending"			},
+[ 137 ] = { 4,	TS,	SEN(rt_sigtimedwait),		"rt_sigtimedwait"		},
+[ 138 ] = { 3,	TS,	SEN(rt_sigqueueinfo),		"rt_sigqueueinfo"		},
+[ 139 ] = { 0,	TS,	SEN(rt_sigreturn),		"rt_sigreturn"			},
+[ 140 ] = { 3,	0,	SEN(setpriority),		"setpriority"			},
+[ 141 ] = { 2,	0,	SEN(getpriority),		"getpriority"			},
+[ 142 ] = { 4,	0,	SEN(reboot),			"reboot"			},
+[ 143 ] = { 2,	0,	SEN(setregid),			"setregid"			},
+[ 144 ] = { 1,	0,	SEN(setgid),			"setgid"			},
+[ 145 ] = { 2,	0,	SEN(setreuid),			"setreuid"			},
+[ 146 ] = { 1,	0,	SEN(setuid),			"setuid"			},
+[ 147 ] = { 3,	0,	SEN(setresuid),			"setresuid"			},
+[ 148 ] = { 3,	0,	SEN(getresuid),			"getresuid"			},
+[ 149 ] = { 3,	0,	SEN(setresgid),			"setresgid"			},
+[ 150 ] = { 3,	0,	SEN(getresgid),			"getresgid"			},
+[ 151 ] = { 1,	NF,	SEN(setfsuid),			"setfsuid"			},
+[ 152 ] = { 1,	NF,	SEN(setfsgid),			"setfsgid"			},
+[ 153 ] = { 1,	0,	SEN(times),			"times"				},
+[ 154 ] = { 2,	0,	SEN(setpgid),			"setpgid"			},
+[ 155 ] = { 1,	0,	SEN(getpgid),			"getpgid"			},
+[ 156 ] = { 1,	0,	SEN(getsid),			"getsid"			},
+[ 157 ] = { 0,	0,	SEN(setsid),			"setsid"			},
+[ 158 ] = { 2,	0,	SEN(getgroups),			"getgroups"			},
+[ 159 ] = { 2,	0,	SEN(setgroups),			"setgroups"			},
+[ 160 ] = { 1,	0,	SEN(uname),			"uname"				},
+[ 161 ] = { 2,	0,	SEN(sethostname),		"sethostname"			},
+[ 162 ] = { 2,	0,	SEN(setdomainname),		"setdomainname"			},
+[ 163 ] = { 2,	0,	SEN(getrlimit),			"getrlimit"			},
+[ 164 ] = { 2,	0,	SEN(setrlimit),			"setrlimit"			},
+[ 165 ] = { 2,	0,	SEN(getrusage),			"getrusage"			},
+[ 166 ] = { 1,	0,	SEN(umask),			"umask"				},
+[ 167 ] = { 5,	0,	SEN(prctl),			"prctl"				},
+[ 168 ] = { 3,	0,	SEN(getcpu),			"getcpu"			},
+[ 169 ] = { 2,	0,	SEN(gettimeofday),		"gettimeofday"			},
+[ 170 ] = { 2,	0,	SEN(settimeofday),		"settimeofday"			},
+[ 171 ] = { 1,	0,	SEN(adjtimex),			"adjtimex"			},
+[ 172 ] = { 0,	0,	SEN(getpid),			"getpid"			},
+[ 173 ] = { 0,	0,	SEN(getppid),			"getppid"			},
+[ 174 ] = { 0,	NF,	SEN(getuid),			"getuid"			},
+[ 175 ] = { 0,	NF,	SEN(geteuid),			"geteuid"			},
+[ 176 ] = { 0,	NF,	SEN(getgid),			"getgid"			},
+[ 177 ] = { 0,	NF,	SEN(getegid),			"getegid"			},
+[ 178 ] = { 0,	0,	SEN(gettid),			"gettid"			},
+[ 179 ] = { 1,	0,	SEN(sysinfo),			"sysinfo"			},
+[ 180 ] = { 4,	0,	SEN(mq_open),			"mq_open"			},
+[ 181 ] = { 1,	0,	SEN(mq_unlink),			"mq_unlink"			},
+[ 182 ] = { 5,	0,	SEN(mq_timedsend),		"mq_timedsend"			},
+[ 183 ] = { 5,	0,	SEN(mq_timedreceive),		"mq_timedreceive"		},
+[ 184 ] = { 2,	0,	SEN(mq_notify),			"mq_notify"			},
+[ 185 ] = { 3,	0,	SEN(mq_getsetattr),		"mq_getsetattr"			},
+[ 186 ] = { 4,	TI,	SEN(msgget),			"msgget"			},
+[ 187 ] = { 3,	TI,	SEN(msgctl),			"msgctl"			},
+[ 188 ] = { 5,	TI,	SEN(msgrcv),			"msgrcv"			},
+[ 189 ] = { 4,	TI,	SEN(msgsnd),			"msgsnd"			},
+[ 190 ] = { 4,	TI,	SEN(semget),			"semget"			},
+[ 191 ] = { 4,	TI,	SEN(semctl),			"semctl"			},
+[ 192 ] = { 5,	TI,	SEN(semtimedop),			"semtimedop"			},
+[ 193 ] = { 4,	TI,	SEN(semop),			"semop"				},
+[ 194 ] = { 4,	TI,	SEN(shmget),			"shmget"			},
+[ 195 ] = { 4,	TI,	SEN(shmctl),			"shmctl"			},
+[ 196 ] = { 4,	TI,	SEN(shmat),			"shmat"				},
+[ 197 ] = { 4,	TI,	SEN(shmdt),			"shmdt"				},
+[ 198 ] = { 3,	TN,	SEN(socket),			"socket"			},
+[ 199 ] = { 4,	TN,	SEN(socketpair),			"socketpair"			},
+[ 200 ] = { 3,	TN,	SEN(bind),			"bind"				},
+[ 201 ] = { 2,	TN,	SEN(listen),			"listen"			},
+[ 202 ] = { 3,	TN,	SEN(accept),			"accept"			},
+[ 203 ] = { 3,	TN,	SEN(connect),			"connect"			},
+[ 204 ] = { 3,	TN,	SEN(getsockname),		"getsockname"			},
+[ 205 ] = { 3,	TN,	SEN(getpeername),		"getpeername"			},
+[ 206 ] = { 6,	TN,	SEN(sendto),			"sendto"			},
+[ 207 ] = { 6,	TN,	SEN(recvfrom),			"recvfrom"			},
+[ 208 ] = { 5,	TN,	SEN(setsockopt),			"setsockopt"			},
+[ 209 ] = { 5,	TN,	SEN(getsockopt),			"getsockopt"			},
+[ 210 ] = { 2,	TN,	SEN(shutdown),			"shutdown"			},
+[ 211 ] = { 3,	TN,	SEN(sendmsg),			"sendmsg"			},
+[ 212 ] = { 3,	TN,	SEN(recvmsg),			"recvmsg"			},
+[ 213 ] = { 3,	TD,	SEN(readahead),			"readahead"			},
+[ 214 ] = { 1,	TM,	SEN(brk),			"brk"				},
+[ 215 ] = { 2,	TM,	SEN(munmap),			"munmap"			},
+[ 216 ] = { 5,	TM,	SEN(mremap),			"mremap"			},
+[ 217 ] = { 5,	0,	SEN(add_key),			"add_key"			},
+[ 218 ] = { 4,	0,	SEN(request_key),		"request_key"			},
+[ 219 ] = { 5,	0,	SEN(keyctl),			"keyctl"			},
+[ 220 ] = { 5,	TP,	SEN(clone),			"clone"				},
+[ 221 ] = { 3,	TF|TP,	SEN(execve),			"execve"			},
+[ 222 ] = { 6,	TD|TM,	SEN(mmap),			"mmap"				},
+[ 223 ] = { 4,	TD,	SEN(fadvise64),			"fadvise64"			},
+[ 224 ] = { 1,	TF,	SEN(swapon),			"swapon"			},
+[ 225 ] = { 1,	TF,	SEN(swapoff),			"swapoff"			},
+[ 226 ] = { 3,	TM,	SEN(mprotect),			"mprotect"			},
+[ 227 ] = { 3,	TM,	SEN(msync),			"msync"				},
+[ 228 ] = { 2,	TM,	SEN(mlock),			"mlock"				},
+[ 229 ] = { 2,	TM,	SEN(munlock),			"munlock"			},
+[ 230 ] = { 1,	TM,	SEN(mlockall),			"mlockall"			},
+[ 231 ] = { 0,	TM,	SEN(munlockall),			"munlockall"			},
+[ 232 ] = { 3,	TM,	SEN(mincore),			"mincore"			},
+[ 233 ] = { 3,	TM,	SEN(madvise),			"madvise"			},
+[ 234 ] = { 5,	TM,	SEN(remap_file_pages),		"remap_file_pages"		},
+[ 235 ] = { 6,	TM,	SEN(mbind),			"mbind"				},
+[ 236 ] = { 5,	TM,	SEN(get_mempolicy),		"get_mempolicy"			},
+[ 237 ] = { 3,	TM,	SEN(set_mempolicy),		"set_mempolicy"			},
+[ 238 ] = { 4,	TM,	SEN(migrate_pages),		"migrate_pages"			},
+[ 239 ] = { 6,	TM,	SEN(move_pages),			"move_pages"			},
+[ 240 ] = { 4,	TP|TS,	SEN(rt_tgsigqueueinfo),		"rt_tgsigqueueinfo"		},
+[ 241 ] = { 5,	TD,	SEN(perf_event_open),		"perf_event_open"		},
+[ 242 ] = { 4,	TN,	SEN(accept4),			"accept4"			},
+[ 243 ] = { 5,	TN,	SEN(recvmmsg),			"recvmmsg"			},
+[ 244 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 245 ] = { 3,	0,	SEN(printargs),			"cacheflush"			},
+[ 246 ] = { 1,	0,	SEN(printargs),			"set_dataplane"			},
+[ 247 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 248 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 249 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 250 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 251 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 252 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 253 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 254 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 255 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 256 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 257 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 258 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 259 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 260 ] = { 4,	TP,	SEN(wait4),			"wait4"				},
+[ 261 ] = { 4,	0,	SEN(prlimit64),			"prlimit64"			},
+[ 262 ] = { 2,	TD,	SEN(fanotify_init),		"fanotify_init"			},
+[ 263 ] = { 5,	TD|TF,	SEN(fanotify_mark),		"fanotify_mark"			},
+[ 264 ] = { 5,	TD|TF,	SEN(name_to_handle_at),		"name_to_handle_at"		},
+[ 265 ] = { 3,	TD,	SEN(open_by_handle_at),		"open_by_handle_at"		},
+[ 266 ] = { 2,	0,	SEN(clock_adjtime),		"clock_adjtime"			},
+[ 267 ] = { 1,	TD,	SEN(syncfs),			"syncfs"			},
+[ 268 ] = { 2,	TD,	SEN(setns),			"setns"				},
+[ 269 ] = { 4,	TN,	SEN(sendmmsg),			"sendmmsg"			},
+[ 270 ] = { 6,	0,	SEN(process_vm_readv),		"process_vm_readv"		},
+[ 271 ] = { 6,	0,	SEN(process_vm_writev),		"process_vm_writev"		},
+[ 272 ] = { 5,	0,	SEN(kcmp),			"kcmp"				},
+[ 273 ] = { 3,	TD,	SEN(finit_module),		"finit_module"			},
diff --git a/linux/riscv/syscallent1.h b/linux/riscv/syscallent1.h
new file mode 100644
index 0000000..78bc4c8
--- /dev/null
+++ b/linux/riscv/syscallent1.h
@@ -0,0 +1,274 @@
+[   0 ] = { 2,	0,	SEN(io_setup),			"io_setup"			},
+[   1 ] = { 1,	0,	SEN(io_destroy),			"io_destroy"			},
+[   2 ] = { 3,	0,	SEN(io_submit),			"io_submit"			},
+[   3 ] = { 3,	0,	SEN(io_cancel),			"io_cancel"			},
+[   4 ] = { 5,	0,	SEN(io_getevents),		"io_getevents"			},
+[   5 ] = { 5,	TF,	SEN(setxattr),			"setxattr"			},
+[   6 ] = { 5,	TF,	SEN(setxattr),			"lsetxattr"			},
+[   7 ] = { 5,	TD,	SEN(fsetxattr),			"fsetxattr"			},
+[   8 ] = { 4,	TF,	SEN(getxattr),			"getxattr"			},
+[   9 ] = { 4,	TF,	SEN(getxattr),			"lgetxattr"			},
+[  10 ] = { 4,	TD,	SEN(fgetxattr),			"fgetxattr"			},
+[  11 ] = { 3,	TF,	SEN(listxattr),			"listxattr"			},
+[  12 ] = { 3,	TF,	SEN(listxattr),			"llistxattr"			},
+[  13 ] = { 3,	TD,	SEN(flistxattr),			"flistxattr"			},
+[  14 ] = { 2,	TF,	SEN(removexattr),		"removexattr"			},
+[  15 ] = { 2,	TF,	SEN(removexattr),		"lremovexattr"			},
+[  16 ] = { 2,	TD,	SEN(fremovexattr),		"fremovexattr"			},
+[  17 ] = { 2,	TF,	SEN(getcwd),			"getcwd"			},
+[  18 ] = { 4,	0,	SEN(lookup_dcookie),		"lookup_dcookie"		},
+[  19 ] = { 2,	TD,	SEN(eventfd2),			"eventfd2"			},
+[  20 ] = { 1,	TD,	SEN(epoll_create1),		"epoll_create1"			},
+[  21 ] = { 4,	TD,	SEN(epoll_ctl),			"epoll_ctl"			},
+[  22 ] = { 6,	TD,	SEN(epoll_pwait),		"epoll_pwait"			},
+[  23 ] = { 1,	TD,	SEN(dup),			"dup"				},
+[  24 ] = { 3,	TD,	SEN(dup3),			"dup3"				},
+[  25 ] = { 3,	TD,	SEN(fcntl),			"fcntl64"			},
+[  26 ] = { 1,	TD,	SEN(inotify_init1),		"inotify_init1"			},
+[  27 ] = { 3,	TD,	SEN(inotify_add_watch),		"inotify_add_watch"		},
+[  28 ] = { 2,	TD,	SEN(inotify_rm_watch),		"inotify_rm_watch"		},
+[  29 ] = { 3,	TD,	SEN(ioctl),			"ioctl"				},
+[  30 ] = { 3,	0,	SEN(ioprio_set),			"ioprio_set"			},
+[  31 ] = { 2,	0,	SEN(ioprio_get),			"ioprio_get"			},
+[  32 ] = { 2,	TD,	SEN(flock),			"flock"				},
+[  33 ] = { 4,	TD|TF,	SEN(mknodat),			"mknodat"			},
+[  34 ] = { 3,	TD|TF,	SEN(mkdirat),			"mkdirat"			},
+[  35 ] = { 3,	TD|TF,	SEN(unlinkat),			"unlinkat"			},
+[  36 ] = { 3,	TD|TF,	SEN(symlinkat),			"symlinkat"			},
+[  37 ] = { 5,	TD|TF,	SEN(linkat),			"linkat"			},
+[  38 ] = { 4,	TD|TF,	SEN(renameat),			"renameat"			},
+[  39 ] = { 2,	TF,	SEN(umount2),			"umount2"			},
+[  40 ] = { 5,	TF,	SEN(mount),			"mount"				},
+[  41 ] = { 2,	TF,	SEN(pivotroot),			"pivot_root"			},
+[  42 ] = { 3,	0,	SEN(nfsservctl),			"nfsservctl"			},
+[  43 ] = { 3,	TF,	SEN(statfs64),			"statfs64"			},
+[  44 ] = { 3,	TD,	SEN(fstatfs64),			"fstatfs64"			},
+[  45 ] = { 4,	TF,	SEN(truncate64),			"truncate64"			},
+[  46 ] = { 4,	TD,	SEN(ftruncate64),		"ftruncate64"			},
+[  47 ] = { 6,	TD,	SEN(fallocate),			"fallocate"			},
+[  48 ] = { 3,	TD|TF,	SEN(faccessat),			"faccessat"			},
+[  49 ] = { 1,	TF,	SEN(chdir),			"chdir"				},
+[  50 ] = { 1,	TD,	SEN(fchdir),			"fchdir"			},
+[  51 ] = { 1,	TF,	SEN(chroot),			"chroot"			},
+[  52 ] = { 2,	TD,	SEN(fchmod),			"fchmod"			},
+[  53 ] = { 3,	TD|TF,	SEN(fchmodat),			"fchmodat"			},
+[  54 ] = { 5,	TD|TF,	SEN(fchownat),			"fchownat"			},
+[  55 ] = { 3,	TD,	SEN(fchown),			"fchown"			},
+[  56 ] = { 4,	TD|TF,	SEN(openat),			"openat"			},
+[  57 ] = { 1,	TD,	SEN(close),			"close"				},
+[  58 ] = { 0,	0,	SEN(vhangup),			"vhangup"			},
+[  59 ] = { 2,	TD,	SEN(pipe2),			"pipe2"				},
+[  60 ] = { 4,	TF,	SEN(quotactl),			"quotactl"			},
+[  61 ] = { 3,	TD,	SEN(getdents64),			"getdents64"			},
+[  62 ] = { 5,	TD,	SEN(llseek),			"llseek"			},
+[  63 ] = { 3,	TD,	SEN(read),			"read"				},
+[  64 ] = { 3,	TD,	SEN(write),			"write"				},
+[  65 ] = { 3,	TD,	SEN(readv),			"readv"				},
+[  66 ] = { 3,	TD,	SEN(writev),			"writev"			},
+[  67 ] = { 6,	TD,	SEN(pread),			"pread64"			},
+[  68 ] = { 6,	TD,	SEN(pwrite),			"pwrite64"			},
+[  69 ] = { 5,	TD,	SEN(preadv),			"preadv"			},
+[  70 ] = { 5,	TD,	SEN(pwritev),			"pwritev"			},
+[  71 ] = { 4,	TD|TN,	SEN(sendfile64),			"sendfile64"			},
+[  72 ] = { 6,	TD,	SEN(pselect6),			"pselect6"			},
+[  73 ] = { 5,	TD,	SEN(ppoll),			"ppoll"				},
+[  74 ] = { 4,	TD|TS,	SEN(signalfd4),			"signalfd4"			},
+[  75 ] = { 4,	TD,	SEN(vmsplice),			"vmsplice"			},
+[  76 ] = { 6,	TD,	SEN(splice),			"splice"			},
+[  77 ] = { 4,	TD,	SEN(tee),			"tee"				},
+[  78 ] = { 4,	TD|TF,	SEN(readlinkat),			"readlinkat"			},
+[  79 ] = { 4,	TD|TF,	SEN(newfstatat),			"fstatat64"			},
+[  80 ] = { 2,	TD,	SEN(fstat64),			"fstat64"			},
+[  81 ] = { 0,	0,	SEN(sync),			"sync"				},
+[  82 ] = { 1,	TD,	SEN(fsync),			"fsync"				},
+[  83 ] = { 1,	TD,	SEN(fdatasync),			"fdatasync"			},
+[  84 ] = { 6,	TD,	SEN(sync_file_range2),		"sync_file_range2"		},
+[  85 ] = { 2,	TD,	SEN(timerfd_create),		"timerfd_create"		},
+[  86 ] = { 4,	TD,	SEN(timerfd_settime),		"timerfd_settime"		},
+[  87 ] = { 2,	TD,	SEN(timerfd_gettime),		"timerfd_gettime"		},
+[  88 ] = { 4,	TD|TF,	SEN(utimensat),			"utimensat"			},
+[  89 ] = { 1,	TF,	SEN(acct),			"acct"				},
+[  90 ] = { 2,	0,	SEN(capget),			"capget"			},
+[  91 ] = { 2,	0,	SEN(capset),			"capset"			},
+[  92 ] = { 1,	0,	SEN(personality),		"personality"			},
+[  93 ] = { 1,	TP,	SEN(exit),			"exit"				},
+[  94 ] = { 1,	TP,	SEN(exit),			"exit_group"			},
+[  95 ] = { 5,	TP,	SEN(waitid),			"waitid"			},
+[  96 ] = { 1,	0,	SEN(set_tid_address),		"set_tid_address"		},
+[  97 ] = { 1,	TP,	SEN(unshare),			"unshare"			},
+[  98 ] = { 6,	0,	SEN(futex),			"futex"				},
+[  99 ] = { 2,	0,	SEN(set_robust_list),		"set_robust_list"		},
+[ 100 ] = { 3,	0,	SEN(get_robust_list),		"get_robust_list"		},
+[ 101 ] = { 2,	0,	SEN(nanosleep),			"nanosleep"			},
+[ 102 ] = { 2,	0,	SEN(getitimer),			"getitimer"			},
+[ 103 ] = { 3,	0,	SEN(setitimer),			"setitimer"			},
+[ 104 ] = { 4,	0,	SEN(kexec_load),			"kexec_load"			},
+[ 105 ] = { 3,	0,	SEN(init_module),		"init_module"			},
+[ 106 ] = { 2,	0,	SEN(delete_module),		"delete_module"			},
+[ 107 ] = { 3,	0,	SEN(timer_create),		"timer_create"			},
+[ 108 ] = { 2,	0,	SEN(timer_gettime),		"timer_gettime"			},
+[ 109 ] = { 1,	0,	SEN(timer_getoverrun),		"timer_getoverrun"		},
+[ 110 ] = { 4,	0,	SEN(timer_settime),		"timer_settime"			},
+[ 111 ] = { 1,	0,	SEN(timer_delete),		"timer_delete"			},
+[ 112 ] = { 2,	0,	SEN(clock_settime),		"clock_settime"			},
+[ 113 ] = { 2,	0,	SEN(clock_gettime),		"clock_gettime"			},
+[ 114 ] = { 2,	0,	SEN(clock_getres),		"clock_getres"			},
+[ 115 ] = { 4,	0,	SEN(clock_nanosleep),		"clock_nanosleep"		},
+[ 116 ] = { 3,	0,	SEN(syslog),			"syslog"			},
+[ 117 ] = { 4,	0,	SEN(ptrace),			"ptrace"			},
+[ 118 ] = { 0,	0,	SEN(sched_setparam),		"sched_setparam"		},
+[ 119 ] = { 3,	0,	SEN(sched_setscheduler),		"sched_setscheduler"		},
+[ 120 ] = { 1,	0,	SEN(sched_getscheduler),		"sched_getscheduler"		},
+[ 121 ] = { 2,	0,	SEN(sched_getparam),		"sched_getparam"		},
+[ 122 ] = { 3,	0,	SEN(sched_setaffinity),		"sched_setaffinity"		},
+[ 123 ] = { 3,	0,	SEN(sched_getaffinity),		"sched_getaffinity"		},
+[ 124 ] = { 0,	0,	SEN(sched_yield),		"sched_yield"			},
+[ 125 ] = { 1,	0,	SEN(sched_get_priority_max),	"sched_get_priority_max"	},
+[ 126 ] = { 1,	0,	SEN(sched_get_priority_min),	"sched_get_priority_min"	},
+[ 127 ] = { 2,	0,	SEN(sched_rr_get_interval),	"sched_rr_get_interval"		},
+[ 128 ] = { 0,	0,	SEN(restart_syscall),		"restart_syscall"		},
+[ 129 ] = { 2,	TS,	SEN(kill),			"kill"				},
+[ 130 ] = { 2,	TS,	SEN(kill),			"tkill"				},
+[ 131 ] = { 3,	TS,	SEN(tgkill),			"tgkill"			},
+[ 132 ] = { 2,	TS,	SEN(sigaltstack),		"sigaltstack"			},
+[ 133 ] = { 2,	TS,	SEN(rt_sigsuspend),		"rt_sigsuspend"			},
+[ 134 ] = { 4,	TS,	SEN(rt_sigaction),		"rt_sigaction"			},
+[ 135 ] = { 4,	TS,	SEN(rt_sigprocmask),		"rt_sigprocmask"		},
+[ 136 ] = { 2,	TS,	SEN(rt_sigpending),		"rt_sigpending"			},
+[ 137 ] = { 4,	TS,	SEN(rt_sigtimedwait),		"rt_sigtimedwait"		},
+[ 138 ] = { 3,	TS,	SEN(rt_sigqueueinfo),		"rt_sigqueueinfo"		},
+[ 139 ] = { 0,	TS,	SEN(rt_sigreturn),		"rt_sigreturn"			},
+[ 140 ] = { 3,	0,	SEN(setpriority),		"setpriority"			},
+[ 141 ] = { 2,	0,	SEN(getpriority),		"getpriority"			},
+[ 142 ] = { 4,	0,	SEN(reboot),			"reboot"			},
+[ 143 ] = { 2,	0,	SEN(setregid),			"setregid"			},
+[ 144 ] = { 1,	0,	SEN(setgid),			"setgid"			},
+[ 145 ] = { 2,	0,	SEN(setreuid),			"setreuid"			},
+[ 146 ] = { 1,	0,	SEN(setuid),			"setuid"			},
+[ 147 ] = { 3,	0,	SEN(setresuid),			"setresuid"			},
+[ 148 ] = { 3,	0,	SEN(getresuid),			"getresuid"			},
+[ 149 ] = { 3,	0,	SEN(setresgid),			"setresgid"			},
+[ 150 ] = { 3,	0,	SEN(getresgid),			"getresgid"			},
+[ 151 ] = { 1,	NF,	SEN(setfsuid),			"setfsuid"			},
+[ 152 ] = { 1,	NF,	SEN(setfsgid),			"setfsgid"			},
+[ 153 ] = { 1,	0,	SEN(times),			"times"				},
+[ 154 ] = { 2,	0,	SEN(setpgid),			"setpgid"			},
+[ 155 ] = { 1,	0,	SEN(getpgid),			"getpgid"			},
+[ 156 ] = { 1,	0,	SEN(getsid),			"getsid"			},
+[ 157 ] = { 0,	0,	SEN(setsid),			"setsid"			},
+[ 158 ] = { 2,	0,	SEN(getgroups),			"getgroups"			},
+[ 159 ] = { 2,	0,	SEN(setgroups),			"setgroups"			},
+[ 160 ] = { 1,	0,	SEN(uname),			"uname"				},
+[ 161 ] = { 2,	0,	SEN(sethostname),		"sethostname"			},
+[ 162 ] = { 2,	0,	SEN(setdomainname),		"setdomainname"			},
+[ 163 ] = { 2,	0,	SEN(getrlimit),			"getrlimit"			},
+[ 164 ] = { 2,	0,	SEN(setrlimit),			"setrlimit"			},
+[ 165 ] = { 2,	0,	SEN(getrusage),			"getrusage"			},
+[ 166 ] = { 1,	0,	SEN(umask),			"umask"				},
+[ 167 ] = { 5,	0,	SEN(prctl),			"prctl"				},
+[ 168 ] = { 3,	0,	SEN(getcpu),			"getcpu"			},
+[ 169 ] = { 2,	0,	SEN(gettimeofday),		"gettimeofday"			},
+[ 170 ] = { 2,	0,	SEN(settimeofday),		"settimeofday"			},
+[ 171 ] = { 1,	0,	SEN(adjtimex),			"adjtimex"			},
+[ 172 ] = { 0,	0,	SEN(getpid),			"getpid"			},
+[ 173 ] = { 0,	0,	SEN(getppid),			"getppid"			},
+[ 174 ] = { 0,	NF,	SEN(getuid),			"getuid"			},
+[ 175 ] = { 0,	NF,	SEN(geteuid),			"geteuid"			},
+[ 176 ] = { 0,	NF,	SEN(getgid),			"getgid"			},
+[ 177 ] = { 0,	NF,	SEN(getegid),			"getegid"			},
+[ 178 ] = { 0,	0,	SEN(gettid),			"gettid"			},
+[ 179 ] = { 1,	0,	SEN(sysinfo),			"sysinfo"			},
+[ 180 ] = { 4,	0,	SEN(mq_open),			"mq_open"			},
+[ 181 ] = { 1,	0,	SEN(mq_unlink),			"mq_unlink"			},
+[ 182 ] = { 5,	0,	SEN(mq_timedsend),		"mq_timedsend"			},
+[ 183 ] = { 5,	0,	SEN(mq_timedreceive),		"mq_timedreceive"		},
+[ 184 ] = { 2,	0,	SEN(mq_notify),			"mq_notify"			},
+[ 185 ] = { 3,	0,	SEN(mq_getsetattr),		"mq_getsetattr"			},
+[ 186 ] = { 4,	TI,	SEN(msgget),			"msgget"			},
+[ 187 ] = { 3,	TI,	SEN(msgctl),			"msgctl"			},
+[ 188 ] = { 5,	TI,	SEN(msgrcv),			"msgrcv"			},
+[ 189 ] = { 4,	TI,	SEN(msgsnd),			"msgsnd"			},
+[ 190 ] = { 4,	TI,	SEN(semget),			"semget"			},
+[ 191 ] = { 4,	TI,	SEN(semctl),			"semctl"			},
+[ 192 ] = { 5,	TI,	SEN(semtimedop),			"semtimedop"			},
+[ 193 ] = { 4,	TI,	SEN(semop),			"semop"				},
+[ 194 ] = { 4,	TI,	SEN(shmget),			"shmget"			},
+[ 195 ] = { 4,	TI,	SEN(shmctl),			"shmctl"			},
+[ 196 ] = { 4,	TI,	SEN(shmat),			"shmat"				},
+[ 197 ] = { 4,	TI,	SEN(shmdt),			"shmdt"				},
+[ 198 ] = { 3,	TN,	SEN(socket),			"socket"			},
+[ 199 ] = { 4,	TN,	SEN(socketpair),			"socketpair"			},
+[ 200 ] = { 3,	TN,	SEN(bind),			"bind"				},
+[ 201 ] = { 2,	TN,	SEN(listen),			"listen"			},
+[ 202 ] = { 3,	TN,	SEN(accept),			"accept"			},
+[ 203 ] = { 3,	TN,	SEN(connect),			"connect"			},
+[ 204 ] = { 3,	TN,	SEN(getsockname),		"getsockname"			},
+[ 205 ] = { 3,	TN,	SEN(getpeername),		"getpeername"			},
+[ 206 ] = { 6,	TN,	SEN(sendto),			"sendto"			},
+[ 207 ] = { 6,	TN,	SEN(recvfrom),			"recvfrom"			},
+[ 208 ] = { 5,	TN,	SEN(setsockopt),			"setsockopt"			},
+[ 209 ] = { 5,	TN,	SEN(getsockopt),			"getsockopt"			},
+[ 210 ] = { 2,	TN,	SEN(shutdown),			"shutdown"			},
+[ 211 ] = { 3,	TN,	SEN(sendmsg),			"sendmsg"			},
+[ 212 ] = { 3,	TN,	SEN(recvmsg),			"recvmsg"			},
+[ 213 ] = { 4,	TD,	SEN(readahead),			"readahead"			},
+[ 214 ] = { 1,	TM,	SEN(brk),			"brk"				},
+[ 215 ] = { 2,	TM,	SEN(munmap),			"munmap"			},
+[ 216 ] = { 5,	TM,	SEN(mremap),			"mremap"			},
+[ 217 ] = { 5,	0,	SEN(add_key),			"add_key"			},
+[ 218 ] = { 4,	0,	SEN(request_key),		"request_key"			},
+[ 219 ] = { 5,	0,	SEN(keyctl),			"keyctl"			},
+[ 220 ] = { 5,	TP,	SEN(clone),			"clone"				},
+[ 221 ] = { 3,	TF|TP,	SEN(execve),			"execve"			},
+[ 222 ] = { 6,	TD|TM,	SEN(mmap_4koff),			"mmap2"				},
+[ 223 ] = { 5,	TD,	SEN(fadvise64),			"fadvise64"			},
+[ 224 ] = { 1,	TF,	SEN(swapon),			"swapon"			},
+[ 225 ] = { 1,	TF,	SEN(swapoff),			"swapoff"			},
+[ 226 ] = { 3,	TM,	SEN(mprotect),			"mprotect"			},
+[ 227 ] = { 3,	TM,	SEN(msync),			"msync"				},
+[ 228 ] = { 2,	TM,	SEN(mlock),			"mlock"				},
+[ 229 ] = { 2,	TM,	SEN(munlock),			"munlock"			},
+[ 230 ] = { 1,	TM,	SEN(mlockall),			"mlockall"			},
+[ 231 ] = { 0,	TM,	SEN(munlockall),			"munlockall"			},
+[ 232 ] = { 3,	TM,	SEN(mincore),			"mincore"			},
+[ 233 ] = { 3,	TM,	SEN(madvise),			"madvise"			},
+[ 234 ] = { 5,	TM,	SEN(remap_file_pages),		"remap_file_pages"		},
+[ 235 ] = { 6,	TM,	SEN(mbind),			"mbind"				},
+[ 236 ] = { 5,	TM,	SEN(get_mempolicy),		"get_mempolicy"			},
+[ 237 ] = { 3,	TM,	SEN(set_mempolicy),		"set_mempolicy"			},
+[ 238 ] = { 4,	TM,	SEN(migrate_pages),		"migrate_pages"			},
+[ 239 ] = { 6,	TM,	SEN(move_pages),			"move_pages"			},
+[ 240 ] = { 4,	TP|TS,	SEN(rt_tgsigqueueinfo),		"rt_tgsigqueueinfo"		},
+[ 241 ] = { 5,	TD,	SEN(perf_event_open),		"perf_event_open"		},
+[ 242 ] = { 4,	TN,	SEN(accept4),			"accept4"			},
+[ 243 ] = { 5,	TN,	SEN(recvmmsg),			"recvmmsg"			},
+[ 244 ] = { 2,	0,	SEN(printargs),			"cmpxchg_badaddr"		},
+[ 245 ] = { 3,	0,	SEN(printargs),			"cacheflush"			},
+[ 246 ] = { 1,	0,	SEN(printargs),			"set_dataplane"			},
+[ 247 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 248 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 249 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 250 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 251 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 252 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 253 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 254 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 255 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 256 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 257 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 258 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 259 ] = { 0,	0,	SEN(printargs),			"arch_unimpl"			},
+[ 260 ] = { 4,	TP,	SEN(wait4),			"wait4"				},
+[ 261 ] = { 4,	0,	SEN(prlimit64),			"prlimit64"			},
+[ 262 ] = { 2,	TD,	SEN(fanotify_init),		"fanotify_init"			},
+[ 263 ] = { 5,	TD|TF,	SEN(fanotify_mark),		"fanotify_mark"			},
+[ 264 ] = { 5,	TD|TF,	SEN(name_to_handle_at),		"name_to_handle_at"		},
+[ 265 ] = { 3,	TD,	SEN(open_by_handle_at),		"open_by_handle_at"		},
+[ 266 ] = { 2,	0,	SEN(clock_adjtime),		"clock_adjtime"			},
+[ 267 ] = { 1,	TD,	SEN(syncfs),			"syncfs"			},
+[ 268 ] = { 2,	TD,	SEN(setns),			"setns"				},
+[ 269 ] = { 4,	TN,	SEN(sendmmsg),			"sendmmsg"			},
+[ 270 ] = { 6,	0,	SEN(process_vm_readv),		"process_vm_readv"		},
+[ 271 ] = { 6,	0,	SEN(process_vm_writev),		"process_vm_writev"		},
+[ 272 ] = { 5,	0,	SEN(kcmp),			"kcmp"				},
+[ 273 ] = { 3,	TD,	SEN(finit_module),		"finit_module"			},
diff --git a/mem.c b/mem.c
index affc935..b5e6b04 100644
--- a/mem.c
+++ b/mem.c
@@ -89,6 +89,7 @@ print_mmap(struct tcb *tcp, long *u_arg, unsigned long long offset)
 #if defined AARCH64 || defined ARM \
  || defined I386 || defined X86_64 || defined X32 \
  || defined M68K \
+ || defined RISCV \
  || defined S390 || defined S390X
 /* Params are pointed to by u_arg[0], offset is in bytes */
 SYS_FUNC(old_mmap)
diff --git a/syscall.c b/syscall.c
index 9627d68..98095d0 100644
--- a/syscall.c
+++ b/syscall.c
@@ -63,6 +63,10 @@
 # define NT_PRSTATUS 1
 #endif
 
+#if defined(RISCV)
+# include <asm/ptrace.h>
+#endif
+
 #ifndef NSIG
 # warning: NSIG is not defined, using 32
 # define NSIG 32
-- 
2.7.4


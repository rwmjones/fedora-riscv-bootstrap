From 41bdd81cad483995200cc347ef2542364a678dd6 Mon Sep 17 00:00:00 2001
From: "Richard W.M. Jones" <rjones@redhat.com>
Date: Thu, 29 Sep 2016 15:22:58 +0100
Subject: [PATCH] htif: Make implementation of pread/pwrite more robust.

Random short writes cause qemu to crash with "FAILED WRITE" error.
---
 hw/riscv/htif/htif.c | 37 +++++++++++++++++++++++++++++++++----
 1 file changed, 33 insertions(+), 4 deletions(-)

diff --git a/hw/riscv/htif/htif.c b/hw/riscv/htif/htif.c
index 9f0422a..67e4bc3 100644
--- a/hw/riscv/htif/htif.c
+++ b/hw/riscv/htif/htif.c
@@ -125,6 +125,20 @@ static void dma_strcopy(HTIFState *htifstate, char *str, hwaddr phys_addr) {
     stb_p((void*)(base_copy_addr + i), 0); // store null term
 }
 
+static ssize_t xpread(int fd, char *buf, size_t count, off_t offset) {
+    ssize_t r, ret = 0;
+
+    while (count > 0) {
+        r = pread(fd, buf, count, offset);
+        if (r <= 0) return r;
+        buf += r;
+        count -= r;
+        offset += r;
+        ret += r;
+    }
+    return ret;
+}
+
 static int htif_block_device_read(HTIFState *htifstate, uint64_t payload) {
     request_t req;
     int i;
@@ -143,8 +157,8 @@ static int htif_block_device_read(HTIFState *htifstate, uint64_t payload) {
     #endif
 
     uint8_t * copybuf = malloc(req.size * sizeof(uint8_t));
-    if (pread(htifstate->block_fd, copybuf, req.size, req.offset) != req.size) {
-        printf("FAILED READ\n");
+    if (xpread(htifstate->block_fd, (char *) copybuf, req.size, req.offset) != req.size) {
+        perror("pread");
         exit(1);
     }
 
@@ -157,6 +171,21 @@ static int htif_block_device_read(HTIFState *htifstate, uint64_t payload) {
     return req.tag;
 }
 
+static ssize_t xpwrite(int fd, const char *buf, size_t count, off_t offset) {
+    ssize_t r, ret = 0;
+
+    while (count > 0) {
+        r = pwrite(fd, buf, count, offset);
+        if (r < 0) return r;
+        buf += r;
+        count -= r;
+        offset += r;
+        ret += r;
+    }
+
+    return ret;
+}
+
 static int htif_block_device_write(HTIFState *htifstate, uint64_t payload) {
     request_t req;
     int i;
@@ -173,8 +202,8 @@ static int htif_block_device_write(HTIFState *htifstate, uint64_t payload) {
         copybuf[i] = ldub_p((void*)(base + i));
     }
 
-    if (pwrite(htifstate->block_fd, copybuf, req.size, req.offset) != req.size) {
-        printf("FAILED WRITE\n");
+    if (xpwrite(htifstate->block_fd, (char *) copybuf, req.size, req.offset) != req.size) {
+        perror("pwrite");
         exit(1);
     }
 
-- 
2.7.4

